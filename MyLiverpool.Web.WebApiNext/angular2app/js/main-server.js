(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 200);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

module.exports = require("@angular/core");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(186));
__export(__webpack_require__(6));
__export(__webpack_require__(28));
__export(__webpack_require__(53));
__export(__webpack_require__(184));
__export(__webpack_require__(185));
__export(__webpack_require__(201));


/***/ },
/* 2 */
/***/ function(module, exports) {

module.exports = require("@angular/router");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var Configuration = (function () {
    function Configuration() {
        this.server = "http://localhost:1669/";
        this.apiUrl = "api/v1/";
        this.serverWithApiUrl = this.server + this.apiUrl;
        this.allowedImageTypes = [".jpeg", ".jpg", ".png", ".gif", ".bmp"];
    }
    return Configuration;
}());
Configuration = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], Configuration);
exports.Configuration = Configuration;


/***/ },
/* 4 */
/***/ function(module, exports) {

module.exports = require("@angular/forms");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(15));
__export(__webpack_require__(126));
__export(__webpack_require__(127));


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(58);
var localStorage_service_1 = __webpack_require__(28);
var HttpWrapper = (function () {
    function HttpWrapper(http, localStorage) {
        this.http = http;
        this.localStorage = localStorage;
    }
    HttpWrapper.prototype.updateHeaders = function (withFiles) {
        if (withFiles === void 0) { withFiles = false; }
        var headers = new http_1.Headers();
        if (withFiles) {
            headers.append("Accept", "application/json");
        }
        else {
            headers.append("Content-type", "application/json");
        }
        if (this.localStorage.hasAccessToken()) {
            headers.append("Authorization", this.localStorage.getAccessTokenWithType());
        }
        return headers;
    };
    HttpWrapper.prototype.get = function (url) {
        return this.http.get(url, {
            headers: this.updateHeaders(),
            body: ""
        });
    };
    HttpWrapper.prototype.post = function (url, data, withFiles) {
        if (withFiles === void 0) { withFiles = false; }
        return this.http.post(url, data, {
            headers: this.updateHeaders(withFiles)
        });
    };
    HttpWrapper.prototype.put = function (url, data) {
        return this.http.put(url, data, {
            headers: this.updateHeaders()
        });
    };
    HttpWrapper.prototype.delete = function (url) {
        this.updateHeaders();
        return this.http.delete(url, {
            headers: this.updateHeaders(),
            body: ""
        });
    };
    return HttpWrapper;
}());
HttpWrapper = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http,
        localStorage_service_1.LocalStorageService])
], HttpWrapper);
exports.HttpWrapper = HttpWrapper;


/***/ },
/* 7 */
/***/ function(module, exports) {

module.exports = require("@angular/common");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var AccountService = (function () {
    function AccountService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.create = function (item) {
            return _this.http.post(_this.actionUrl + "register/", JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.confirmEmail = function (userId, code) {
            return _this.http.get(_this.actionUrl + ("confirmEmail?userId=" + userId + "&code=" + code)).map(function (res) { return res.json(); });
        };
        this.forgotPassword = function (email) {
            return _this.http.get(_this.actionUrl + ("forgotPassword?email=" + email)).map(function (res) { return res.json(); });
        };
        this.resendConfirmEmail = function (email) {
            return _this.http.get(_this.actionUrl + ("resendConfirmEmail?email=" + email)).map(function (res) { return res.json(); });
        };
        this.resetPassword = function (model) {
            return _this.http.put(_this.actionUrl + "resetPassword", model).map(function (res) { return res.json(); });
        };
        this.changePassword = function (model) {
            return _this.http.put(_this.actionUrl + "changePassword", model).map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "account/";
    }
    return AccountService;
}());
AccountService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], AccountService);
exports.AccountService = AccountService;


/***/ },
/* 9 */
/***/ function(module, exports) {

module.exports = require("@angular/platform-browser");

/***/ },
/* 10 */
/***/ function(module, exports) {

module.exports = require("ng2-bootstrap");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var PmService = (function () {
    function PmService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl).map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "pm/";
    }
    return PmService;
}());
PmService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], PmService);
exports.PmService = PmService;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var MaterialCommentService = (function () {
    function MaterialCommentService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function (page) {
            return _this.http.get(_this.actionUrl + "list/" + page).map(function (res) { return res.json(); });
        };
        this.getAllByMaterial = function (page, id) {
            return _this.http.get(_this.actionUrl + "material/" + id + "/list/" + page).map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl + "News/", JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.verify = function (id) {
            return _this.http.get(_this.actionUrl + "verify/" + id).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "materialComment/";
    }
    return MaterialCommentService;
}());
MaterialCommentService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], MaterialCommentService);
exports.MaterialCommentService = MaterialCommentService;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var NewsService = (function () {
    function NewsService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function (filters) {
            return _this.http.get(_this.actionUrl + "list/" + encodeURIComponent(JSON.stringify(filters))).map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl + "news/", JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.addView = function (id) {
            return _this.http.get(_this.actionUrl + "addView/" + id).map(function (res) { return res.json(); });
        };
        this.activate = function (id) {
            return _this.http.get(_this.actionUrl + "activate/" + id).map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "material/";
    }
    return NewsService;
}());
NewsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], NewsService);
exports.NewsService = NewsService;


/***/ },
/* 14 */
/***/ function(module, exports) {

module.exports = require("angular2-universal");

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(58);
var router_1 = __webpack_require__(2);
var index_1 = __webpack_require__(1);
var app_constants_1 = __webpack_require__(3);
var AuthService = (function () {
    function AuthService(http, http1, localStorage, rolesCheckedService, router, configuration) {
        this.http = http;
        this.http1 = http1;
        this.localStorage = localStorage;
        this.rolesCheckedService = rolesCheckedService;
        this.router = router;
        this.configuration = configuration;
        this.roles = [];
        this.isUserLogined();
    }
    AuthService.prototype.login = function (username, password) {
        var _this = this;
        var headers = new http_1.Headers();
        headers.append("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8;");
        var perams = "grant_type=password&username=" + username + "&password=" + password + "&client_id=client_id3";
        this.http1.post(this.configuration.server + "connect/token", perams, {
            headers: headers
        })
            .subscribe(function (data) { return _this.parseLoginAnswer(data); }, function (error) {
            if (error._body === "unconfirmed_email") {
                _this.router.navigate(["/unconfirmedEmail"]);
                return;
            }
            console.log(error);
        }, function () { return _this.getUserId(); });
        return true;
    };
    AuthService.prototype.logout = function () {
        this.localStorage.removeAuthTokens();
        this.rolesCheckedService.checkRoles();
    };
    AuthService.prototype.isUserInRole = function (role) {
        if (this.roles.find(function (x) { return x.toLowerCase() === role.toLowerCase(); })) {
            return true;
        }
        return false;
    };
    AuthService.prototype.isUserLogined = function () {
        var _this = this;
        var result = false;
        this.http.get(this.configuration.serverWithApiUrl + "account/isSignedIn")
            .subscribe(function (data) { return result = true; }, function (error) { return _this.localStorage.removeAllData(); }, function () {
            if (result && _this.localStorage.hasAccessToken()) {
                _this.roles = _this.localStorage.getRoles();
                _this.id = _this.localStorage.getUserId();
            }
            else {
                _this.localStorage.removeAllData();
            }
        });
    };
    AuthService.prototype.parseLoginAnswer = function (item) {
        this.localStorage.setAuthTokens(item);
    };
    AuthService.prototype.parseRoles = function (item) {
        this.roles = item._body.split(", ");
        this.localStorage.setRoles(this.roles);
    };
    AuthService.prototype.getRoles = function () {
        var _this = this;
        this.http.get(this.configuration.serverWithApiUrl + "role")
            .subscribe(function (data) { return _this.parseRoles(data); }, function (error) { return console.log(error); }, function () { return _this.rolesCheckedService.checkRoles(); });
    };
    AuthService.prototype.getUserId = function () {
        var _this = this;
        this.http.get(this.configuration.serverWithApiUrl + "user/getId")
            .subscribe(function (data) { return _this.id = +JSON.parse(data.text()); }, function (error) { return console.log(error); }, function () {
            _this.localStorage.setUserId(_this.id);
            _this.getRoles();
        });
    };
    return AuthService;
}());
AuthService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper,
        http_1.Http,
        index_1.LocalStorageService,
        index_1.RolesCheckedService,
        router_1.Router,
        app_constants_1.Configuration])
], AuthService);
exports.AuthService = AuthService;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var ClubService = (function () {
    function ClubService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function (page) {
            return _this.http.get(_this.actionUrl + ("list/" + page)).map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.getByName = function (typed) {
            return _this.http.get(_this.actionUrl + ("/getClubsByName/" + typed)).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "club/";
    }
    return ClubService;
}());
ClubService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], ClubService);
exports.ClubService = ClubService;


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(16));
__export(__webpack_require__(132));
__export(__webpack_require__(131));


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(138));
__export(__webpack_require__(36));
__export(__webpack_require__(137));


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var ForumSubsectionService = (function () {
    function ForumSubsectionService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl + "list/").map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.getSingleWithThemes = function (id, page) {
            return _this.http.get("" + _this.actionUrl + id + "/" + page).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "forumSubsection/";
    }
    return ForumSubsectionService;
}());
ForumSubsectionService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], ForumSubsectionService);
exports.ForumSubsectionService = ForumSubsectionService;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(37));
__export(__webpack_require__(19));
__export(__webpack_require__(141));
__export(__webpack_require__(140));


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var ForumThemeService = (function () {
    function ForumThemeService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl + "list/").map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.getSingleWithMessages = function (id, page) {
            return _this.http.get("" + _this.actionUrl + id + "/" + page).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "forumTheme/";
    }
    return ForumThemeService;
}());
ForumThemeService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], ForumThemeService);
exports.ForumThemeService = ForumThemeService;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var ImageService = (function () {
    function ImageService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.get = function (path) {
            return _this.http.get(_this.actionUrl + "?path=" + path).map(function (response) { return response.json(); });
        };
        this.uploadImage = function (files) {
            var formData = new FormData();
            for (var i = 0; i < files.length; i++) {
                formData.append("uploadFile", files[i], files[i].name);
            }
            ;
            return _this.http.post("" + _this.actionUrl, formData, true).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "image/";
    }
    return ImageService;
}());
ImageService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], ImageService);
exports.ImageService = ImageService;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(43));
__export(__webpack_require__(159));
__export(__webpack_require__(158));
__export(__webpack_require__(157));


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var MaterialComment = (function () {
    function MaterialComment() {
    }
    return MaterialComment;
}());
exports.MaterialComment = MaterialComment;


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var NewsCategoryService = (function () {
    function NewsCategoryService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl).map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http.put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "newsCategory/";
    }
    return NewsCategoryService;
}());
NewsCategoryService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], NewsCategoryService);
exports.NewsCategoryService = NewsCategoryService;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(168));
__export(__webpack_require__(170));
__export(__webpack_require__(169));
__export(__webpack_require__(48));
__export(__webpack_require__(13));


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Pm = (function () {
    function Pm() {
    }
    return Pm;
}());
exports.Pm = Pm;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var angular2_universal_1 = __webpack_require__(14);
var LocalStorageService = (function () {
    function LocalStorageService() {
        if (angular2_universal_1.isBrowser && !localStorage) {
            throw new Error("Current browser does not support Local Storage");
        }
        else if (angular2_universal_1.isNode) {
            this.localStorage = null;
        }
        else {
            this.localStorage = localStorage;
        }
    }
    LocalStorageService.prototype.hasAccessToken = function () {
        return this.get("access_token") !== null;
    };
    LocalStorageService.prototype.getAccessToken = function () {
        return this.get("access_token");
    };
    LocalStorageService.prototype.getAccessTokenWithType = function () {
        return this.get("token_type") + " " + this.get("access_token");
    };
    LocalStorageService.prototype.getRoles = function () {
        return this.getObject("roles");
    };
    LocalStorageService.prototype.getUserId = function () {
        return +this.get("userId");
    };
    LocalStorageService.prototype.removeRoles = function () {
        this.remove("roles");
    };
    LocalStorageService.prototype.removeAuthTokens = function () {
        this.remove("token_type");
        this.remove("access_token");
        this.remove("expires_in");
        this.remove("refresh_token");
        this.remove("roles");
        this.remove("userId");
    };
    LocalStorageService.prototype.setAuthTokens = function (item) {
        var response = JSON.parse(item._body);
        this.set("token_type", response.token_type);
        this.set("access_token", response.access_token);
        this.set("expires_in", response.expires_in);
        this.set("refresh_token", response.refresh_token);
        return true;
    };
    LocalStorageService.prototype.setRoles = function (roles) {
        if (!this.localStorage)
            return;
        this.setObject("roles", roles);
    };
    LocalStorageService.prototype.setUserId = function (id) {
        if (!this.localStorage)
            return;
        this.setObject("userId", id);
    };
    LocalStorageService.prototype.tryAddViewForNews = function (id) {
        if (!this.localStorage)
            return false;
        if (!this.get("material" + id)) {
            this.set("material" + id, "1");
            return true;
        }
        return false;
    };
    LocalStorageService.prototype.removeAllData = function () {
        this.removeAuthTokens();
        this.removeRoles();
    };
    LocalStorageService.prototype.set = function (key, value) {
        if (!this.localStorage)
            return;
        localStorage[key] = value;
    };
    LocalStorageService.prototype.get = function (key) {
        if (!this.localStorage)
            return "";
        return localStorage[key] || false;
    };
    LocalStorageService.prototype.setObject = function (key, value) {
        if (!this.localStorage)
            return;
        localStorage[key] = JSON.stringify(value);
    };
    LocalStorageService.prototype.getObject = function (key) {
        if (!this.localStorage)
            return null;
        if (localStorage[key]) {
            return JSON.parse(localStorage[key]);
        }
        return null;
    };
    LocalStorageService.prototype.remove = function (key) {
        localStorage.removeItem(key);
    };
    return LocalStorageService;
}());
LocalStorageService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], LocalStorageService);
exports.LocalStorageService = LocalStorageService;


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var httpWrapper_1 = __webpack_require__(6);
var app_constants_1 = __webpack_require__(3);
var UserService = (function () {
    function UserService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function (filters) {
            return _this.http.get(_this.actionUrl + "list/" + encodeURIComponent(JSON.stringify(filters)))
                .map(function (response) { return response.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.updateRoleGroup = function (id, roleGroupId) {
            return _this.http.put(_this.actionUrl + "updateRoleGroup/" + id + "/" + roleGroupId, "").map(function (response) { return response.json(); });
        };
        this.ban = function (id, banDaysCount) {
            return _this.http.put(_this.actionUrl + "ban/" + id + "/" + banDaysCount, "").map(function (response) { return response.json(); });
        };
        this.unban = function (id) {
            return _this.http.put(_this.actionUrl + "unban/" + id, "").map(function (response) { return response.json(); });
        };
        this.resetAvatar = function (id) {
            return _this.http.put(_this.actionUrl + "avatar/" + id + "/reset", "").map(function (response) { return response.text(); });
        };
        this.updateAvatar = function (file) {
            var formData = new FormData();
            formData.append("uploadFile", file, file.name);
            return _this.http.post(_this.actionUrl + "avatar/", formData, true).map(function (response) { return response.text(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "user/";
    }
    return UserService;
}());
UserService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], UserService);
exports.UserService = UserService;


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var WishService = (function () {
    function WishService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl + "list/").map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.getTypes = function () {
            return _this.http.get(_this.actionUrl + "types/").map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "wish/";
    }
    return WishService;
}());
WishService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], WishService);
exports.WishService = WishService;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(111));
__export(__webpack_require__(112));
__export(__webpack_require__(116));
__export(__webpack_require__(117));
__export(__webpack_require__(118));
__export(__webpack_require__(114));
__export(__webpack_require__(121));
__export(__webpack_require__(8));


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var AdminService = (function () {
    function AdminService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.updateEplTable = function () {
            return _this.http.get(_this.actionUrl + "updateTable/").map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "admin/";
    }
    return AdminService;
}());
AdminService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], AdminService);
exports.AdminService = AdminService;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var ChatMessageService = (function () {
    function ChatMessageService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl + "list/").map(function (res) { return res.json(); });
        };
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "chatMessage/";
    }
    return ChatMessageService;
}());
ChatMessageService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], ChatMessageService);
exports.ChatMessageService = ChatMessageService;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ForumMessage = (function () {
    function ForumMessage() {
    }
    return ForumMessage;
}());
exports.ForumMessage = ForumMessage;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var ForumMessageService = (function () {
    function ForumMessageService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "forumMessage/";
    }
    return ForumMessageService;
}());
ForumMessageService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], ForumMessageService);
exports.ForumMessageService = ForumMessageService;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(1);
var ForumSectionService = (function () {
    function ForumSectionService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl + "list/").map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "forumSection/";
    }
    return ForumSectionService;
}());
ForumSectionService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.HttpWrapper, app_constants_1.Configuration])
], ForumSectionService);
exports.ForumSectionService = ForumSectionService;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ForumSubsection = (function () {
    function ForumSubsection() {
    }
    return ForumSubsection;
}());
exports.ForumSubsection = ForumSubsection;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ForumTheme = (function () {
    function ForumTheme() {
    }
    return ForumTheme;
}());
exports.ForumTheme = ForumTheme;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(38));
__export(__webpack_require__(21));
__export(__webpack_require__(144));
__export(__webpack_require__(143));


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(147));
__export(__webpack_require__(151));
__export(__webpack_require__(150));
__export(__webpack_require__(146));
__export(__webpack_require__(148));
__export(__webpack_require__(152));


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Image = (function () {
    function Image() {
    }
    return Image;
}());
exports.Image = Image;


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(41));
__export(__webpack_require__(22));
__export(__webpack_require__(155));
__export(__webpack_require__(154));
__export(__webpack_require__(153));


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var MatchService = (function () {
    function MatchService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getSingle = function (id) {
            return _this.http.get(_this.actionUrl + id).map(function (res) { return res.json(); });
        };
        this.create = function (item) {
            return _this.http.post(_this.actionUrl, JSON.stringify(item)).map(function (res) { return res.json(); });
        };
        this.update = function (id, itemToUpdate) {
            return _this.http
                .put(_this.actionUrl + id, JSON.stringify(itemToUpdate))
                .map(function (res) { return res.json(); });
        };
        this.getTypes = function () {
            return _this.http.get(_this.actionUrl + "/getTypes")
                .map(function (res) { return res.json(); });
        };
        this.delete = function (id) {
            return _this.http.delete(_this.actionUrl + id).map(function (response) { return response.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "match/";
    }
    return MatchService;
}());
MatchService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], MatchService);
exports.MatchService = MatchService;


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(24));
__export(__webpack_require__(163));
__export(__webpack_require__(12));
__export(__webpack_require__(164));
__export(__webpack_require__(162));


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(25));
__export(__webpack_require__(46));
__export(__webpack_require__(47));


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var newsCategory_model_1 = __webpack_require__(166);
var newsCategory_service_1 = __webpack_require__(25);
var NewsCategoryEditComponent = (function () {
    function NewsCategoryEditComponent(service, formBuilder, route) {
        this.service = service;
        this.formBuilder = formBuilder;
        this.route = route;
        this.id = 0;
    }
    NewsCategoryEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.editForm = this.formBuilder.group({
            'name': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ],
            'description': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ]
        });
        this.sub = this.route.params.subscribe(function (params) {
            _this.id = +params["id"];
            if (_this.id > 0) {
                _this.service
                    .getSingle(_this.id)
                    .subscribe(function (data) { return _this.editForm.patchValue(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
    };
    NewsCategoryEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    NewsCategoryEditComponent.prototype.onSubmit = function () {
        var model = new newsCategory_model_1.NewsCategory();
        model.id = this.id;
        model.name = this.editForm.controls["name"].value;
        model.description = this.editForm.controls["description"].value;
        var res;
        if (this.id > 0) {
            var result = this.service.update(this.id, model).subscribe(function (data) { return res = data; });
        }
        else {
            var result = this.service.create(model).subscribe(function (data) { return res = data; });
        }
        if (res !== null) {
        }
    };
    return NewsCategoryEditComponent;
}());
NewsCategoryEditComponent = __decorate([
    core_1.Component({
        selector: "newsCategory-edit",
        template: __webpack_require__(96)
    }),
    __metadata("design:paramtypes", [newsCategory_service_1.NewsCategoryService, forms_1.FormBuilder, router_1.ActivatedRoute])
], NewsCategoryEditComponent);
exports.NewsCategoryEditComponent = NewsCategoryEditComponent;


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(9);
var newsCategory_service_1 = __webpack_require__(25);
var index_1 = __webpack_require__(1);
var NewsCategoryListComponent = (function () {
    function NewsCategoryListComponent(newsCategoryService, titleService, rolesChecked) {
        this.newsCategoryService = newsCategoryService;
        this.titleService = titleService;
        this.rolesChecked = rolesChecked;
    }
    NewsCategoryListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.titleService.setTitle("Категории");
        this.newsCategoryService
            .getAll()
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { });
    };
    NewsCategoryListComponent.prototype.parsePageable = function (model) {
        this.items = model;
    };
    NewsCategoryListComponent.prototype.delete = function (index) {
        this.newsCategoryService.delete(this.items[index].id).subscribe(function (data) { return data; }, function (error) { return console.log(error); }, function () { });
        this.items.splice(index, 1);
    };
    return NewsCategoryListComponent;
}());
NewsCategoryListComponent = __decorate([
    core_1.Component({
        selector: "newsCategory-list",
        template: __webpack_require__(97)
    }),
    __metadata("design:paramtypes", [newsCategory_service_1.NewsCategoryService,
        platform_browser_1.Title,
        index_1.RolesCheckedService])
], NewsCategoryListComponent);
exports.NewsCategoryListComponent = NewsCategoryListComponent;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var News = (function () {
    function News() {
    }
    return News;
}());
exports.News = News;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(173));


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(27));
__export(__webpack_require__(177));
__export(__webpack_require__(175));
__export(__webpack_require__(176));
__export(__webpack_require__(178));
__export(__webpack_require__(11));


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(180));
__export(__webpack_require__(181));


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(182));


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var localStorage_service_1 = __webpack_require__(28);
var RolesCheckedService = (function () {
    function RolesCheckedService(localStorage) {
        var _this = this;
        this.localStorage = localStorage;
        this.checkedRoles = {
            isLogined: false,
            isEditor: false,
            isNewsmaker: false,
            isModerator: false,
            isMainModerator: false,
            isAdminAssistant: false,
            isSelf: function (userId) { return _this.isSelf(userId); }
        };
        this.checkRoles();
    }
    RolesCheckedService.prototype.checkRoles = function () {
        this.roles = this.localStorage.getRoles();
        this.checkedRoles.isLogined = false;
        if (!this.roles) {
            return this.checkedRoles;
        }
        ;
        this.checkedRoles.isLogined = true;
        this.checkEditor();
        this.checkNewsmaker();
        this.checkModerator();
        this.checkMainModerator();
        this.checkAdminAssistant();
        return this.checkedRoles;
    };
    RolesCheckedService.prototype.isUserInRole = function (role) {
        return this.checkRole(role);
    };
    RolesCheckedService.prototype.isSelf = function (authorId) {
        var userId = this.localStorage.getUserId();
        return (userId === authorId);
    };
    RolesCheckedService.prototype.checkEditor = function () {
        if (this.checkRole("NewsFull")) {
            this.checkedRoles.isEditor = true;
        }
    };
    RolesCheckedService.prototype.checkNewsmaker = function () {
        if (this.checkRole("NewsStart")) {
            this.checkedRoles.isNewsmaker = true;
        }
    };
    RolesCheckedService.prototype.checkModerator = function () {
        if (this.checkRole("UserStart")) {
            this.checkedRoles.isModerator = true;
        }
    };
    RolesCheckedService.prototype.checkMainModerator = function () {
        if (this.checkRole("UserFull")) {
            this.checkedRoles.isMainModerator = true;
        }
    };
    RolesCheckedService.prototype.checkAdminAssistant = function () {
        if (this.checkRole("AdminStart")) {
            this.checkedRoles.isAdminAssistant = true;
        }
    };
    RolesCheckedService.prototype.checkRole = function (role) {
        if (this.roles.find(function (x) { return x.toLowerCase() === role.toLowerCase(); })) {
            return true;
        }
        return false;
    };
    return RolesCheckedService;
}());
RolesCheckedService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [localStorage_service_1.LocalStorageService])
], RolesCheckedService);
exports.RolesCheckedService = RolesCheckedService;


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var forms_1 = __webpack_require__(4);
var app_constants_1 = __webpack_require__(3);
var user_service_1 = __webpack_require__(29);
var index_1 = __webpack_require__(1);
var index_2 = __webpack_require__(51);
var index_3 = __webpack_require__(1);
var UserDetailComponent = (function () {
    function UserDetailComponent(configuration, storage, service, route, rolesChecked, roleGroupService, formBuilder, router) {
        this.configuration = configuration;
        this.storage = storage;
        this.service = service;
        this.route = route;
        this.rolesChecked = rolesChecked;
        this.roleGroupService = roleGroupService;
        this.formBuilder = formBuilder;
        this.router = router;
        this.banDaysCount = 0;
    }
    UserDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.initRoleForm();
        this.initBanForm();
        this.sub = this.route.params.subscribe(function (params) {
            if (+params["id"]) {
                _this.service.getSingle(+params["id"])
                    .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
            }
            else {
                _this.router.navigate(["/user/list/1"]);
            }
        });
        if (this.roles.isAdminAssistant) {
            this.loadRoleGroups();
        }
    };
    UserDetailComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    UserDetailComponent.prototype.onSubmit = function () {
        var _this = this;
        var roleGroupId = this.roleForm.controls["roleGroupId"].value;
        this.service.updateRoleGroup(this.item.id, roleGroupId)
            .subscribe(function (data) {
            if (data) {
                _this.roleForm.patchValue(roleGroupId);
            }
        });
    };
    UserDetailComponent.prototype.onSubmitBan = function () {
        var _this = this;
        var banDaysCount = this.banForm.controls["banDaysCount"].value;
        this.service.ban(this.item.id, banDaysCount)
            .subscribe(function (data) {
            if (data) {
                var time = new Date();
                _this.item.lockoutEnd = new Date(time.setHours(time.getHours() + banDaysCount * 24 * 60 * 60));
                _this.banForm.controls["banDaysCount"].patchValue(null);
            }
        });
    };
    UserDetailComponent.prototype.onChangeAvatar = function (event) {
        var _this = this;
        var file = event.srcElement.files[0];
        if (file) {
            this.service.updateAvatar(file)
                .subscribe(function (result) { return _this.item.photo = result + "#" + Math.random(); }, function (error) { return console.log(error); }, function () { });
        }
    };
    UserDetailComponent.prototype.resetAvatar = function () {
        var _this = this;
        this.service.resetAvatar(this.item.id)
            .subscribe(function (result) { return _this.item.photo = result + "#" + Math.random(); }, function (error) { return console.log(error); }, function () { });
    };
    UserDetailComponent.prototype.unban = function () {
        var _this = this;
        this.service.unban(this.item.id)
            .subscribe(function (data) {
            if (data) {
                _this.item.lockoutEnd = null;
            }
        });
    };
    UserDetailComponent.prototype.writePm = function () {
        this.selectedUserId = this.item.id;
    };
    UserDetailComponent.prototype.closePmWindow = function (event) {
        this.selectedUserId = null;
    };
    UserDetailComponent.prototype.parse = function (item) {
        this.item = item;
        this.roleForm.patchValue(item);
    };
    UserDetailComponent.prototype.loadRoleGroups = function () {
        var _this = this;
        this.roleGroupService.getAll()
            .subscribe(function (data) { return _this.roleGroups = data; }, function (error) { return console.log(error); }, function () { });
    };
    UserDetailComponent.prototype.initRoleForm = function () {
        this.roleForm = this.formBuilder.group({
            'roleGroupId': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ]
        });
    };
    UserDetailComponent.prototype.initBanForm = function () {
        this.banForm = this.formBuilder.group({
            'banDaysCount': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required,
                    index_3.GlobalValidators.mustBeGreaterThanZero
                ])
            ]
        });
    };
    return UserDetailComponent;
}());
UserDetailComponent = __decorate([
    core_1.Component({
        selector: "user-detail",
        template: __webpack_require__(107)
    }),
    __metadata("design:paramtypes", [app_constants_1.Configuration,
        index_1.LocalStorageService,
        user_service_1.UserService,
        router_1.ActivatedRoute,
        index_1.RolesCheckedService,
        index_2.RoleGroupService,
        forms_1.FormBuilder,
        router_1.Router])
], UserDetailComponent);
exports.UserDetailComponent = UserDetailComponent;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(7);
var router_1 = __webpack_require__(2);
var user_service_1 = __webpack_require__(29);
var userFilters_model_1 = __webpack_require__(190);
var index_1 = __webpack_require__(1);
var UserListComponent = (function () {
    function UserListComponent(userService, location, rolesChecked, route) {
        this.userService = userService;
        this.location = location;
        this.rolesChecked = rolesChecked;
        this.route = route;
        this.page = 1;
        this.itemsPerPage = 15;
    }
    UserListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.sub = this.route.params.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
            _this.update();
        });
    };
    UserListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    UserListComponent.prototype.writePm = function (index) {
        this.selectedUserId = index;
    };
    UserListComponent.prototype.closePmWindow = function (event) {
        this.selectedUserId = null;
    };
    UserListComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update();
        var newUrl = "user/list/" + this.page + "?";
        this.location.replaceState(newUrl);
    };
    ;
    UserListComponent.prototype.update = function () {
        var _this = this;
        var filters = new userFilters_model_1.UserFilters();
        filters.userName = this.userName;
        filters.page = this.page;
        this.userService
            .getAll(filters)
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { });
    };
    UserListComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    return UserListComponent;
}());
UserListComponent = __decorate([
    core_1.Component({
        selector: "user-list",
        template: __webpack_require__(108)
    }),
    __metadata("design:paramtypes", [user_service_1.UserService,
        common_1.Location,
        index_1.RolesCheckedService,
        router_1.ActivatedRoute])
], UserListComponent);
exports.UserListComponent = UserListComponent;


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(57));
__export(__webpack_require__(194));
__export(__webpack_require__(192));
__export(__webpack_require__(191));
__export(__webpack_require__(30));


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Wish = (function () {
    function Wish() {
    }
    return Wish;
}());
exports.Wish = Wish;


/***/ },
/* 58 */
/***/ function(module, exports) {

module.exports = require("@angular/http");

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __compiler__ = __webpack_require__(195);
var core_1 = __webpack_require__(0);
var patch = false;
if (!core_1.__core_private__['ViewUtils']) {
    patch = true;
    core_1.__core_private__['ViewUtils'] = core_1.__core_private__['view_utils'];
}
if (!__compiler__.__compiler_private__) {
    patch = true;
    (__compiler__).__compiler_private__ = {
        SelectorMatcher: __compiler__.SelectorMatcher,
        CssSelector: __compiler__.CssSelector
    };
}
var __universal__ = __webpack_require__(196);
if (patch) {
    __universal__.ViewUtils = core_1.__core_private__['view_utils'];
    __universal__.CssSelector = __compiler__.CssSelector;
    __universal__.SelectorMatcher = __compiler__.SelectorMatcher;
}


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var platform_browser_1 = __webpack_require__(9);
var router_1 = __webpack_require__(2);
var angular2_universal_1 = __webpack_require__(14);
var app_component_1 = __webpack_require__(124);
var app_routes_1 = __webpack_require__(125);
var app_constants_1 = __webpack_require__(3);
var index_1 = __webpack_require__(26);
var newsCategory = __webpack_require__(45);
var auth = __webpack_require__(5);
var index_2 = __webpack_require__(18);
var account = __webpack_require__(31);
var chat = __webpack_require__(129);
var club = __webpack_require__(17);
var forumSubsection = __webpack_require__(20);
var forumMessage = __webpack_require__(136);
var forumTheme = __webpack_require__(39);
var home = __webpack_require__(40);
var image = __webpack_require__(42);
var match = __webpack_require__(23);
var player = __webpack_require__(49);
var roleGroup = __webpack_require__(51);
var season = __webpack_require__(52);
var shared = __webpack_require__(1);
var user_detail_component_1 = __webpack_require__(54);
var user_service_1 = __webpack_require__(29);
var user_list_component_1 = __webpack_require__(55);
var pm = __webpack_require__(50);
var wish = __webpack_require__(56);
var materialComment = __webpack_require__(44);
var ng2_auto_complete_1 = __webpack_require__(197);
var index_3 = __webpack_require__(123);
var ng2_bootstrap_1 = __webpack_require__(10);
var index_4 = __webpack_require__(188);
var AppModule = (function () {
    function AppModule() {
    }
    return AppModule;
}());
AppModule = __decorate([
    core_1.NgModule({
        imports: [
            angular2_universal_1.UniversalModule,
            ng2_bootstrap_1.DatepickerModule.forRoot(),
            forms_1.FormsModule,
            ng2_bootstrap_1.ModalModule.forRoot(),
            ng2_auto_complete_1.Ng2AutoCompleteModule,
            ng2_bootstrap_1.PaginationModule.forRoot(),
            forms_1.ReactiveFormsModule,
            ng2_bootstrap_1.TabsModule.forRoot(),
            router_1.RouterModule.forRoot(app_routes_1.routes)
        ],
        declarations: [
            shared.TinymceComponent,
            account.AccountSigninComponent,
            account.AccountSignupComponent,
            account.ChangePasswordComponent,
            account.ConfirmEmailComponent,
            account.ForgotPasswordComponent,
            account.ResetPasswordComponent,
            account.UnconfirmedEmailComponent,
            chat.MiniChatComponent,
            club.ClubEditComponent,
            club.ClubListComponent,
            forumMessage.ForumMessageAdditionComponent,
            forumSubsection.ForumSubsectionEditComponent,
            forumSubsection.ForumSubsectionListComponent,
            forumTheme.ForumThemeEditComponent,
            forumTheme.ForumThemeListComponent,
            home.AboutClubComponent,
            home.CoachTeamComponent,
            home.ClubHistoryComponent,
            home.RightSidebarComponent,
            home.RulesComponent,
            home.SquadComponent,
            image.ImageAdditionComponent,
            image.ImageDetailComponent,
            image.ImageListComponent,
            match.MatchCalendarComponent,
            match.MatchEditComponent,
            match.MatchListComponent,
            materialComment.MaterialCommentDetailComponent,
            materialComment.MaterialCommentListComponent,
            materialComment.MaterialCommentSectionComponent,
            newsCategory.NewsCategoryEditComponent,
            newsCategory.NewsCategoryListComponent,
            player.PlayerStatisticsComponent,
            pm.PmDetailComponent,
            pm.PmEditComponent,
            pm.PmListComponent,
            pm.PmReplyComponent,
            season.SeasonEplTableComponent,
            wish.WishEditComponent,
            wish.WishListComponent,
            app_component_1.AppComponent,
            index_4.BreadcrumbComponent,
            index_3.EplTableComponent,
            index_2.ForumSectionListComponent,
            index_1.NewsListComponent,
            index_1.NewsDetailComponent,
            index_1.NewsEditComponent,
            user_detail_component_1.UserDetailComponent,
            user_list_component_1.UserListComponent
        ],
        bootstrap: [app_component_1.AppComponent],
        providers: [
            auth.AuthService,
            auth.RoleGuard,
            auth.UnSignedGuard,
            account.AccountService,
            chat.ChatMessageService,
            club.ClubService,
            forumMessage.ForumMessageService,
            forumSubsection.ForumSubsectionService,
            forumTheme.ForumThemeService,
            image.ImageService,
            match.MatchService,
            materialComment.MaterialCommentService,
            newsCategory.NewsCategoryService,
            pm.PmService,
            roleGroup.RoleGroupService,
            shared.HttpWrapper,
            shared.GlobalValidators,
            shared.LocalStorageService,
            shared.RolesCheckedService,
            wish.WishService,
            index_3.AdminService,
            { provide: core_1.LOCALE_ID, useValue: "ru-RU" },
            app_constants_1.Configuration,
            index_2.ForumSectionService,
            { provide: shared.LocalStorage, useFactory: function () { return (window) ? window.localStorage : {}; } },
            index_1.NewsService,
            platform_browser_1.Title,
            user_service_1.UserService
        ]
    }),
    __metadata("design:paramtypes", [])
], AppModule);
exports.AppModule = AppModule;


/***/ },
/* 61 */
/***/ function(module, exports) {

module.exports = require("angular2-universal-polyfills/node");

/***/ },
/* 62 */
/***/ function(module, exports) {

module.exports = require("aspnet-prerendering");

/***/ },
/* 63 */
/***/ function(module, exports) {

module.exports = require("zone.js");

/***/ },
/* 64 */
/***/ function(module, exports) {

module.exports = "<form name=\"loginForm1\" class=\"form-inline\" role=\"form\" style=\"margin-top: 8px;\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\r\n    <div class=\"form-group\">\r\n        <input class=\"form-control\" [formControl]=\"loginForm.controls['userName']\" placeholder=\"Логин\" type=\"text\" />\r\n      </div>\r\n    <div class=\"form-group\">\r\n        <input class=\"form-control\" [formControl]=\"loginForm.controls['password']\" placeholder=\"Пароль\" type=\"password\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input type=\"submit\" [disabled]=\"!loginForm.valid\" value=\"Войти\" class=\"btn btn-default\" />\r\n    </div>\r\n</form>";

/***/ },
/* 65 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-md-12 top20\">\r\n    <form class=\"form-horizontal\" *ngIf=\"!result\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" role=\"form\">\r\n        <div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Логин</label>\r\n            <div class=\"col-md-10\">\r\n                <!--    <input type=\"text\" name=\"userName\" [(ngModel)]=\"item.username\" id=\"userName\" debounce=\"5000\" validation=\"remote:vm.userNameUnique():alt=Пользователь с таким логином уже существует|min_len:3|max_len:30|required\" />\r\n                -->  <input class=\"form-control\" formControlName=\"userName\" type=\"text\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Почтовый адрес</label>\r\n            <div class=\"col-md-10\">\r\n                <!-- <input type=\"email\" name=\"email\" [(ngModel)]=\"item.email\" id=\"email\" debounce=\"5000\" validation=\"remote:vm.emailUnique():alt=Пользователь с таким адресом уже существуетrequired|email|min_len:6\" />\r\n                -->  <input class=\"form-control\" formControlName=\"email\" type=\"email\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Пароль</label>\r\n            <div class=\"col-md-10\">\r\n                <input class=\"form-control\"  formControlName=\"password\" type=\"password\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Подтверждение пароля</label>\r\n            <div class=\"col-md-10\">\r\n                <input class=\"form-control\" formControlName=\"confirmPassword\" type=\"password\"/>\r\n            </div>\r\n        </div>\r\n        <!--div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Полное имя</label>\r\n            <div class=\"col-md-10\">\r\n                <input class=\"form-control\" [formControlName]=\"registerForm.controls['fullName']\" type=\"text\"/>\r\n            </div>\r\n        </!--div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Дата рождения</label>\r\n            <div class=\"col-md-10\">\r\n                <!-- <datepicker  class=\"form-control\" [formControlName]=\"registerForm.controls['birthday']\"></datepicker> \r\n                <!-- <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" validation=\"required\" name=\"birthday\"\r\n                           ng-readonly=\"true\" show-button-bar=\"false\"\r\n                           uib-datepicker-popup=\"dd/MMMM/yyyy\" [(ngModel)]=\"item.birthday\"\r\n                           is-open=\"vm.status.opened\" datepicker-options=\"vm.dateOptions\" close-text=\"Закрыть\"\r\n                           alt-input-formats=\"altInputFormats\"/>\r\n                    span class=\"input-group-btn va-top\">\r\n                    <button type=\"button\" class=\"btn btn-default\" ng-click=\"vm.open()\"><i class=\"glyphicon glyphicon-calendar\"></i></button>\r\n                    </span\r\n                </div> ->\r\n                <input class=\"form-control\" [formControlName]=\"registerForm.controls['birthday']\" type=\"text\"/>\r\n            </div>\r\n        </div-->\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-offset-2 col-md-10\">\r\n                <button class=\"btn btn-default\" [disabled]=\"!registerForm.valid\" type=\"submit\">Зарегистрироваться</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <span *ngIf=\"result\">Регистрация прошла успешно, пожалуйста, подтвердите регистрацию. Письмо отправлено на введенную вами почту.</span>\r\n</div>";

/***/ },
/* 66 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <h1 class=\"text-center\">Изменение пароля</h1>\r\n    <div class=\"col-md-12\">\r\n        <form class=\"form-horizontal\" [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit(passwordForm.value)\" role=\"form\">\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\">Старый пароль</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"password\" name=\"oldPassword\" [formControl]=\"passwordForm.controls['oldPassword']\" class=\"form-control\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\">Новый пароль</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"password\" name=\"newPassword\" [formControl]=\"passwordForm.controls['newPassword']\" class=\"form-control\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\">Новый пароль</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"password\" name=\"confirmPassword\" [formControl]=\"passwordForm.controls['confirmPassword']\" class=\"form-control\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-offset-2 col-md-10\">\r\n                    <button class=\"btn btn-default\" [disabled]=\"!passwordForm.valid\" type=\"submit\">Изменить</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>";

/***/ },
/* 67 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <h1 class=\"text-center\">Забыли пароль?</h1>\r\n    <div class=\"col-md-12\">\r\n        <form class=\"form-horizontal\" name=\"forgotEmail\" role=\"form\" [formGroup]=\"forgotForm\" (ngSubmit)=\"onSubmit(forgotForm.value)\">\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\" for=\"emailAddress\">Адрес электронной почты</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"email\" id=\"emailAddress\" placeholder=\"\" [formControl]=\"forgotForm.controls['email']\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-offset-2 col-md-10\">\r\n                    <input type=\"submit\" class=\"btn btn-default\" [disabled]=\"!forgotForm.valid\" value=\"Отправить\" />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>";

/***/ },
/* 68 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <form class=\"form-horizontal\" name=\"resetForm\" role=\"form\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit(resetForm.value)\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"form-group\">\r\n                <pre *ngIf=\"resetForm.errors\">{{resetForm.errors | json}}</pre>\r\n                <label class=\"col-md-2 control-label\">Адрес электронной почты</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"email\" id=\"emailAddress\" placeholder=\"\" [formControl]=\"resetForm.controls['email']\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\">Новый пароль</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"\" [formControl]=\"resetForm.controls['password']\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\">Подтверждение нового пароля</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"password\" class=\"form-control\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"\" [formControl]=\"resetForm.controls['confirmPassword']\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-offset-2 col-md-10\">\r\n                    <button class=\"btn btn-default\" [disabled]=\"!resetForm.valid\" type=\"submit\">Поменять пароль</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n";

/***/ },
/* 69 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <h1 class=\"text-center\">Адрес электронной почты не подтвержден</h1>\r\n    <div class=\"col-md-12\">\r\n        <form class=\"form-horizontal\" name=\"unconfirmedForm\" role=\"form\" [formGroup]=\"unconfirmedForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!finish\">\r\n            <div class=\"form-group\">\r\n                <label class=\"col-md-2 control-label\" for=\"email\">Адрес электронной почты</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"\" [formControl]=\"unconfirmedForm.controls['email']\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-md-offset-2 col-md-10\">\r\n                    <button type=\"submit\" [disabled]=\"!unconfirmedForm.valid\" class=\"btn btn-default\">Переслать</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div *ngIf=\"finish\">Письмо успешно отправлено</div>\r\n    </div>\r\n</div>";

/***/ },
/* 70 */
/***/ function(module, exports) {

module.exports = "<table class=\"table table-condensed table-striped table-responsive col-xs-12 overflowable\">\r\n    <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>Команда</th>\r\n            <th>И</th>\r\n            <th>В</th>\r\n            <th>Н</th>\r\n            <th>П</th>\r\n            <th>+/-</th>\r\n            <th>О</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody><tr><td>1</td><td>Ливерпуль\n</td><td>11</td><td>8</td><td>2</td><td>1</td><td>16</td><td>26</td></tr>\r\n<tr><td>2</td><td>Челси\n</td><td>11</td><td>8</td><td>1</td><td>2</td><td>17</td><td>25</td></tr>\r\n<tr><td>3</td><td>Манчестер Сити\n</td><td>11</td><td>7</td><td>3</td><td>1</td><td>15</td><td>24</td></tr>\r\n<tr><td>4</td><td>Арсенал\n</td><td>11</td><td>7</td><td>3</td><td>1</td><td>13</td><td>24</td></tr>\r\n<tr><td>5</td><td>Тоттенхэм\n</td><td>11</td><td>5</td><td>6</td><td>0</td><td>9</td><td>21</td></tr>\r\n<tr><td>6</td><td>Манчестер Юнайтед\n</td><td>11</td><td>5</td><td>3</td><td>3</td><td>3</td><td>18</td></tr>\r\n<tr><td>7</td><td>Эвертон\n</td><td>11</td><td>5</td><td>3</td><td>3</td><td>2</td><td>18</td></tr>\r\n<tr><td>8</td><td>Уотфорд\n</td><td>11</td><td>4</td><td>3</td><td>4</td><td>-4</td><td>15</td></tr>\r\n<tr><td>9</td><td>Бернли\n</td><td>11</td><td>4</td><td>2</td><td>5</td><td>-4</td><td>14</td></tr>\r\n<tr><td>10</td><td>Саутгемптон\n</td><td>11</td><td>3</td><td>4</td><td>4</td><td>0</td><td>13</td></tr>\r\n<tr><td>11</td><td>Вест Бромвич\n</td><td>11</td><td>3</td><td>4</td><td>4</td><td>-3</td><td>13</td></tr>\r\n<tr><td>12</td><td>Сток Сити\n</td><td>11</td><td>3</td><td>4</td><td>4</td><td>-5</td><td>13</td></tr>\r\n<tr><td>13</td><td>Борнмут\n</td><td>11</td><td>3</td><td>3</td><td>5</td><td>-3</td><td>12</td></tr>\r\n<tr><td>14</td><td>Лестер\n</td><td>11</td><td>3</td><td>3</td><td>5</td><td>-5</td><td>12</td></tr>\r\n<tr><td>15</td><td>Мидлсбро\n</td><td>11</td><td>2</td><td>5</td><td>4</td><td>-2</td><td>11</td></tr>\r\n<tr><td>16</td><td>Кристал Пэлас\n</td><td>11</td><td>3</td><td>2</td><td>6</td><td>-3</td><td>11</td></tr>\r\n<tr><td>17</td><td>Вест Хэм\n</td><td>11</td><td>3</td><td>2</td><td>6</td><td>-9</td><td>11</td></tr>\r\n<tr><td>18</td><td>Халл\n</td><td>11</td><td>3</td><td>1</td><td>7</td><td>-14</td><td>10</td></tr>\r\n<tr><td>19</td><td>Суонси\n</td><td>11</td><td>1</td><td>2</td><td>8</td><td>-11</td><td>5</td></tr>\r\n<tr><td>20</td><td>Сандерленд\n</td><td>11</td><td>1</td><td>2</td><td>8</td><td>-12</td><td>5</td></tr>\r\n</tbody></table>";

/***/ },
/* 71 */
/***/ function(module, exports) {

module.exports = "<div class=\"container-fluid navbar navbar-inverse navbar-fixed-top \">\r\n    <ul class=\"nav navbar-nav col-xs-3 col-sm-3 list-inline\">\r\n        <li><a id=\"back-top\" href=\"#\" style=\"display: none;\">Вверх</a></li>\r\n        <li class=\"divider\"></li>\r\n        <li *ngIf=\"roles.isLogined\">\r\n            <a [routerLink]=\"['/pm']\"><span class=\"glyphicon glyphicon-envelope\"></span> Читать л/с <!--(<span ng-bind=\"vm.unreadPmCount\"></span>)--></a>\r\n        </li>\r\n        <li class=\"divider\"></li>\r\n    </ul>\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li *ngIf=\"!roles.isLogined\">\r\n            <account-signin></account-signin>\r\n        </li>\r\n        <li *ngIf=\"!roles.isLogined\">\r\n            <a [routerLink]=\"['/forgotPassword']\"><span class=\"glyphicon glyphicon-question-sign\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Забыли пароль?\"></span></a>\r\n        </li>\r\n        <li *ngIf=\"!roles.isLogined\">\r\n            <a [routerLink]=\"['/signup']\">Регистрация</a>\r\n        </li>\r\n        <li *ngIf=\"roles.isLogined\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <!--<li>\r\n                    <a ui-sref=\"userInfo({id: vm.userId()})\" class=\"padding0\">\r\n                        <img class=\"nav-avatar\" ng-src=\"{$root.userImage}}\"/>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a ui-sref=\"userInfo({id: vm.userId()})\">Мой профиль</a>\r\n                </li>-->\r\n                <li>\r\n                    <a (click)=\"logout()\">Выйти</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>\r\n<div class=\"col-xs-12 col-sm-12 top50\">\r\n    <header class=\"navbar navbar-default navbar-static-top row\">\r\n        <div class=\"navbar-header\">\r\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n            <a [routerLink]=\"['/']\" class=\"navbar-brand\">Название сайта</a>\r\n        </div>\r\n        <div class=\"navbar-collapse collapse\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <li><a [routerLink]=\"['/']\">Главная</a></li>\r\n                <!-- @if (User.IsInRole(\"AdminFull\"))\r\n                {\r\n                <li> @Html.ActionLink(CommonMessages.Roles, \"Index\", \"Role\") </li>\r\n                }*@-->\r\n                <li> <a [routerLink]=\"['/forum']\">Форум</a></li>\r\n                <li class=\"dropdown\">\r\n                    <a [routerLink]=\"['/news/list', 1]\" class=\"dropdown-toggle\" data-toggle=\"\">Новости<b class=\"caret\"></b></a>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li *ngIf=\"roles.isNewsmaker\"><a [routerLink]=\"['/news', 0, 'edit']\">Добавить</a></li>\r\n                        <li><a [routerLink]=\"['/newsCategory']\">Категории</a></li>\r\n                    </ul>\r\n                </li>\r\n                <!--li class=\"dropdown\">\r\n                    <a ui-sref=\"blog()\" href=\"#\" class=\"dropdown-toggle\" data-toggle=\"\">Блоги<b class=\"caret\"></b></a>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <!--<li ng-if=\"vm.isAuthor()\"><a ui-sref=\"blogEdit()\">Добавить</a></li>--\r\n                        <li><a ui-sref=\"blogCategories()\">Категории</a></li>\r\n                    </ul>\r\n                </li>-->\r\n                <li class=\"dropdown\">\r\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"\">ФК Ливерпуль<b class=\"caret\"></b></a>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li><a [routerLink]=\"['/clubHistory']\">История</a></li>\r\n                        <li><a [routerLink]=\"['/aboutClub']\">О Клубе</a></li>\r\n                        <li><a [routerLink]=\"['/coachTeam']\">Тренерский штаб</a></li>\r\n                        <li><a [routerLink]=\"['/squad']\">Cостав</a></li>\r\n                    </ul>\r\n                </li>          \r\n                      <li class=\"dropdown\">\r\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"\">Сезон<b class=\"caret\"></b></a>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li><a [routerLink]=\"['/calendar']\">Календарь</a></li>\r\n                        <li><a [routerLink]=\"['/season/eplTable']\">Полная таблица АПЛ</a></li>\r\n                        <li><a [routerLink]=\"['/player/statistics']\">Статистика игроков</a></li>\r\n                    </ul>\r\n                </li>\r\n\r\n                <li class=\"dropdown\">\r\n                    <!-- <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"\">Пользователи <b class=\"caret\"></b></a>\r\n                    <ul class=\"dropdown-menu\">\r\n\r\n                    <li-->\r\n                    <a [routerLink]=\"['/user/list', 1]\">Пользователи</a>\r\n                    <!--/li>\r\n                    </ul-->\r\n                </li>\r\n                <li> <a [routerLink]=\"['/materialComment']\">Комментарии</a></li>\r\n                <li> <a *ngIf=\"roles.isNewsmaker || roles.isAuthor\" [routerLink]=\"['/image']\">Изображения</a></li>\r\n                <li> <a [routerLink]=\"['/club']\">Клубы</a></li>\r\n                <li> <a [routerLink]=\"['/match']\">Матчи</a></li>\r\n                <li> <a [routerLink]=\"['/rules']\"><span class=\"text-danger\">Правила</span></a></li>\r\n                <li class=\"bg-success\"> <a [routerLink]=\"['/wish']\"><span class=\"text-info\">Пожелания</span></a></li>\r\n            </ul>\r\n        </div>\r\n        <!--<div class=\"col-xs-12 col-sm-12\">\r\n            temporary\r\n            <span ng-bind=\"$root.roles\"></span>\r\n        </div>-->\r\n    </header>\r\n    <div class=\"body-content row\">\r\n        <!--<breadcrumb></breadcrumb>-->\r\n        <div class=\"col-xs-12 col-sm-push-3 col-sm-6 container-fluid\" style=\"background-color: #f5deb3\">\r\n            <div class=\"\">\r\n                <!--<uib-alert class=\"row\" ng-repeat=\"alert in $root.alerts\" dismiss-on-timeout=\"5000\" type=\"{alert.type}}\" close=\"closeAlert($index)\" ng-bind=\"alert.msg\"></uib-alert>-->\r\n                <div class=\"\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-sm-pull-6 col-sm-3 container-fluid\">\r\n            <section class=\"col-md- alert-info row\">\r\n                <h2>Эксетер </h2>\r\n                <div class=\"col-md-6\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/ru/f/f7/Exeter_City_Logo.png\" />\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span style=\"text-align: center; font-size: 45pt\">3:0</span>\r\n                </div>\r\n            </section>\r\n            <section class=\"col-md- alert-danger row\">\r\n                <div class=\"col-md-12\"> Лучший игрок матча с Эксетером </div>\r\n                <div styleclass=\"col-md-12\">\r\n                    <img src=\"http://www.myliverpool.ru/images/Players/Squad12-13/Joe_Allen.png\" />\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    Джо Аллен\r\n                </div>\r\n            </section>\r\n            <section class=\"row\">\r\n                <mini-chat></mini-chat>\r\n            </section>\r\n        </div>\r\n        <right-sidebar></right-sidebar>\r\n    </div>\r\n    <hr />\r\n    <footer class=\"bottom container-fluid\">\r\n        <p>&copy; @DateTime.Now.Year - @CommonMessages.SiteTitleAddress</p>\r\n    </footer>\r\n</div>";

/***/ },
/* 72 */
/***/ function(module, exports) {

module.exports = "<div class=\"block\">\r\n    <div class=\"block-top\">\r\n    </div>\r\n    <div class=\"blocktitle\">\r\n        Мини-чат\r\n    </div>\r\n    <div class=\"blockcontent alert-success\">\r\n        <div class=\"blockcontent-inside\">\r\n            <div class=\"chatMessage-block\" style=\"white-space: normal\">\r\n                <div  style=\"padding: 0 4px 5px 2px; margin-bottom: 3px;\" *ngFor=\"let message of items\">\r\n                    <div style=\"float: right; font-size: 8px;\" [textContent]=\"message.additionTime | date:'medium'\"></div>\r\n                    <div style=\"text-align: left;\">\r\n                        <a [routerLink]=\"['/user', message.authorId]\" [textContent]=\"message.authorUserName\"><img alt=\"\" src=\"http://s1.ucoz.net/img/icon/profile.png\" width=\"13\" border=\"0\" style=\"vertical-align: -2px\"></a>\r\n                    </div>\r\n                    <div class=\"cMessage\" style=\"text-align: left;\" [textContent]=\"message.message\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form *ngIf=\"roles.isLogined\" class=\"form-horizontal\" name=\"messageForm\" role=\"form\" [formGroup]=\"messageForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                        <div class=\"checkbox\">\r\n                            <label class=\"control-label\">\r\n                                <input class=\"\" name=\"message\" formControlName=\"message\" type=\"text\" />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-10\">\r\n                        <button type=\"submit\" [disabled]=\"!messageForm.valid\" class=\"btn btn-default\">Добавить</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n                <!--<script type=\"text/javascript\">\r\n        function sbtFrmMC991(f){$('#mchatBtn').css({display:'none'});$('#mchatAjax').css({display:''});_uPostForm('MCaddFrm',{type:'POST',url:'/mchat/?879107719.957613'});}\r\n        function countMessLength(){var rst = 500-$('#mchatMsgF').val().length;if (rst<0){rst=0;$('#mchatMsgF').val($('#mchatMsgF').val().substr(0,500));}$('#jeuwu28').html(rst);}\r\n        var tID7174=-1;var tAct7174=false;\r\n        function setT7174(s){var v=parseInt(s.options[s.selectedIndex].value);document.cookie=\"mcrtd=\"+s.selectedIndex+\"; path=/\";if(tAct7174){clearInterval(tID7174);tAct7174=false;}if(v>0){tID7174=setInterval(\"document.getElementById('mchatIfm2').src='/mchat/?'+Math.random();\",v*1000);tAct7174=true;}}\r\n        function initSel7174() {var res=document.cookie.match(/(\\W|^)mcrtd=([0-9]+)/);if(res){s=$(\"#mchatRSel\")[0];;s.selectedIndex=parseInt(res[2]);setT7174(s);}$(\"#mchatMsgF\").bind(\"keydown\",function(e){if(e.keyCode==13 && e.ctrlKey && !e.shiftKey){e.preventDefault();sbtFrmMC991();}})}\r\n                    </script>\r\n                    <form style=\"margin:0;padding:0;\" id=\"MCaddFrm\" onsubmit=\"sbtFrmMC991();return false;\">\r\n\r\n                        <table border=\"0\" cellpadding=\"1\" cellspacing=\"1\" width=\"100%\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td><select id=\"mchatRSel\" onchange=\"setT7174(this);\" class=\"mchat\" title=\"Автообновление\" style=\"font-size:7pt;\"><option value=\"0\">--</option><option value=\"15\">15 сек</option><option value=\"30\">30 сек</option><option value=\"60\">1 мин</option><option value=\"120\">2 мин</option></select></td>\r\n                                <td width=\"70%\" align=\"right\">\r\n                                    <a href=\"javascript://\" rel=\"nofollow\" onclick=\"document.getElementById('mchatIfm2').src='/mchat/?'+Math.random();return false;\" title=\"Обновить\"><img alt=\"\" border=\"0\" align=\"absmiddle\" src=\"http://s1.ucoz.net/img/fr/mcr.gif\" width=\"13\" height=\"15\"></a>\r\n                                    &nbsp;<a href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('Sml',' ',-250,-350,{autosize:0,closeonesc:1,resize:0},{url:'/index/35-0-2'});return false;\" title=\"Вставить смайл\"><img alt=\"\" border=\"0\" align=\"absmiddle\" src=\"http://s1.ucoz.net/img/fr/mcs.gif\" width=\"13\" height=\"15\"></a>\r\n                                    &nbsp;<a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/17','cbbcodes','scrollbars=1,width=550,height=450,left=0,top=0');return false;\" title=\"BB-Коды\"><img alt=\"\" border=\"0\" align=\"absmiddle\" src=\"http://s1.ucoz.net/img/fr/mcb.gif\" width=\"13\" height=\"15\"></a>\r\n                                    &nbsp;<a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/mchat/0-1','mchatCtrl','scrollbars=1,width=550,height=550,left=0,top=0');return false;\" title=\"Управление сообщениями\"><img alt=\"\" border=\"0\" align=\"absmiddle\" src=\"http://s1.ucoz.net/img/fr/mcm.gif\" width=\"15\" height=\"15\"></a>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table border=\"0\" cellpadding=\"1\" cellspacing=\"1\" width=\"100%\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td width=\"95%\" rowspan=\"2\"><textarea name=\"mcmessage\" class=\"mchat\" id=\"mchatMsgF\" title=\"Сообщение\" onkeyup=\"countMessLength();\" onfocus=\"countMessLength();\" style=\"height:40px;width:100%;resize:none;\"></textarea></td>\r\n                                <td align=\"center\" valign=\"top\"><div style=\"font-size:10px;\"><b id=\"jeuwu28\">500</b></div></td>\r\n                            </tr>\r\n                            <tr><td align=\"center\" valign=\"bottom\"><div style=\"width:30px\"><input type=\"submit\" value=\"OK\" class=\"mchat\" id=\"mchatBtn\" style=\"width:30px;\"><img alt=\"\" style=\"display:none;\" id=\"mchatAjax\" src=\"/.s/img/fr/ajax3.gif\" border=\"0\" width=\"16\"></div></td></tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <input type=\"hidden\" name=\"numa\" id=\"numa832\" value=\"0\"><input type=\"hidden\" name=\"a\" value=\"18\"><input type=\"hidden\" id=\"ajaxFlag\" name=\"ajax\" value=\"1\">\r\n                    </form>\r\n                    <script type=\"text/javascript\">initSel7174();</script>-->\r\n</div>\r\n    </div>\r\n    <div class=\"blockbottom\">\r\n    </div>\r\n</div>";

/***/ },
/* 73 */
/***/ function(module, exports) {

module.exports = "<form class=\"form-horizontal\" name=\"editForm\" role=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(editForm.value)\">\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Соперник</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" name=\"title\" formControlName=\"name\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-2 col-sm-2\">\r\n            <img class=\"avatar\" src=\"{{editForm?.controls['logo'].value}}\" />\r\n        </div><div class=\"col-xs-10 col-sm-10\">\r\n                  <input formControlName=\"logo\" novalidate readonly />\r\n       <!--     <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" [disabled]=\"!editForm.controls['englishName'].valid\"/>-->\r\n            <button type=\"button\" [hidden]=\"!this.uploader?.queue\" (click)=\"upload()\">Загрузить</button>\r\n        </div>\r\n</div>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Название клуба на английском</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" name=\"title\" formControlName=\"englishName\"/>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Стадион</label>\r\n        <div class=\"col-md-10\">\r\n            <textarea class=\"form-control\" name=\"title\" formControlName=\"stadium\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-offset-2 col-md-10\">\r\n            <button type=\"submit\" [disabled]=\"!editForm.valid\" class=\"btn btn-default\">Сохранить</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n";

/***/ },
/* 74 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <div class=\"btn-group\">\r\n        <form class=\"form-inline btn-block\">\r\n            <!--<div class=\"form-group\">\r\n                <select class=\"form-control\"\r\n                        ng-model=\"vm.typeId\"\r\n                        ng-options=\"type.id as type.name for type in vm.types\" ng-change=\"vm.changeTypeId()\"></select>\r\n            </div>--\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control\" ng-model=\"vm.filterText\" ng-model-options=\"{debounce: 1000}\" ng-change=\"vm.filterByText()\" placeholder=\"Поиск в тексте пожеланий\" /> <!--todo magic number\r\n            </div>-->\r\n            <button type=\"button\" class=\"btn btn-success\" [routerLink]=\"['/club', 0, 'edit']\">Добавить</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"top20\" *ngFor=\"let item of items; let i = index;\">\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-heading\">\r\n                <h3 class=\"panel-title\">\r\n                    <a [routerLink]=\"['/club', item.id, 'edit']\"><span [textContent]=\"item.name\"></span></a>\r\n                    <span class=\"col-xs-1 col-sm-1 pull-right\">\r\n                        <a (click)=\"showDeleteModal(i)\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n                    </span>\r\n                </h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n                <div [textContent]=\"item.englishName\"></div>\r\n            </div>\r\n            <div class=\"panel-footer\">\r\n                <img class=\"avatar\" src=\"{{item.logo}}\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"pagination\">\r\n    <pagination *ngIf=\"items\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #deleteModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Удалить?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"delete()\">Удалить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 75 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-xs-12 col-sm-12\">\r\n    <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"commentForm\" (ngSubmit)=\"onSubmit(commentForm.value)\">\r\n        <div class=\"col-md-12\" *ngIf=\"roles.isLogined\">\r\n            <div class=\"col-md-12\">\r\n                <textarea mark-it-up class=\"col-md-offset-2 col-md-8\" rows=\"6\" name=\"message\" formControlName=\"message\"></textarea>\r\n            </div>\r\n            <div class=\"\">\r\n                <button class=\"btn btn-primary center-block\" [disabled]=\"!commentForm.valid\" type=\"submit\">Добавить</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>";

/***/ },
/* 76 */
/***/ function(module, exports) {

module.exports = "<table class=\"gTable\">\r\n    <tbody *ngFor=\"let section of items\">\r\n    <tr *ngIf=\"section.subsections.length > 0\"> <td class=\"gTableTop\" colspan=\"5\"><div style=\"float:right\" class=\"gTopCornerRight\"></div><a class=\"catLink\" href=\"/forum/1\" [textContent]=\"section.name\"></a></td></tr>\r\n    <tr *ngIf=\"section.subsections.length > 0\"><td width=\"5%\" class=\"gTableSubTop\">&nbsp;</td><td class=\"gTableSubTop\">Форум</td><td width=\"8%\" class=\"gTableSubTop\" align=\"center\">Темы</td><td width=\"8%\" class=\"gTableSubTop\" align=\"center\">Ответы</td><td width=\"30%\" class=\"gTableSubTop\">Обновления</td></tr>\r\n        \r\n    <tr *ngFor=\"let subsection of section.subsections\">  \r\n          <td class=\"forumIcoTd\" align=\"center\">\r\n                <img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" src=\"http://www.myliverpool.ru/images/ico/ava_ico.php.jpg\" title=\"Нет новых сообщений\">\r\n            </td>\r\n            <td class=\"forumNameTd\">\r\n                <a class=\"forum\" [routerLink]=\"['/forum', subsection.id]\">\r\n                    <span [textContent]=\"subsection.name\"></span></a>\r\n                <div class=\"forumDescr\" [textContent]=\"subsection.description\"></div>\r\n            </td>\r\n            <td class=\"forumThreadTd\" align=\"center\"[textContent]=\"subsection.themesCount\"></td>\r\n            <td class=\"forumPostTd\" align=\"center\">-</td>\r\n            <td class=\"forumLastPostTd\">\r\n\r\n                <script type=\"text/javascript\">document.write('<a title=\"К последнему сообщению\" class=\"forumLastPostLink\" hr'+'ef=\"/forum/5-1400-0-17\">Среда, 19.10.2016, 13:37:37</a>')</script><a title=\"К последнему сообщению\" class=\"forumLastPostLink\" href=\"/forum/5-1400-0-17\">Среда, 19.10.2016, 13:37:37</a>\r\n                <script type=\"text/javascript\">document.write('<a hr' + 'ef=\"/forum/5-1400-0-17-1\"><img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" title=\"К первому непрочитанному сообщению\" src=\"http://myliverpool.ru/.s/img/fr/ic/2/lastpost.gif\" /></a>')</script><a href=\"/forum/5-1400-0-17-1\"><img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" title=\"К первому непрочитанному сообщению\" src=\"http://myliverpool.ru/.s/img/fr/ic/2/lastpost.gif\"></a>\r\n                <br>Тема: <a class=\"forumLastPostLink\" href=\"/forum/5-1400-1\">Брендан Роджерс</a>\r\n                <br>Сообщение от: <span class=\"lastPostUser\"><a class=\"lastPostUserLink\" href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/8-0-icebergstollikcs','up67','scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">icebergstollikcs</a></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<!--div class=\"col-md-12\">\r\n    <div class=\"container-fluid\" *ngFor=\"let section of items\">\r\n        <div class=\"panel panel-danger\" *ngIf=\"section.subsections.length > 0 || roles.isAdminAssistant\">\r\n            <div class=\"panel-heading\">\r\n                <span [textContent]=\"section.name\"></span>\r\n                <span *ngIf=\"roles.isAdminAssistant\">\r\n                    <a [routerLink]=\"['/forum', 0, 'edit']\">Добавить подсекцию</a>\r\n                    <a class=\"pull-right\" [hidden]=\"section.subsections.length != 0\" ng-click=\"vm.removeSection($index)\">\r\n                        <span class=\"glyphicon glyphicon-remove\">\r\n                        </span>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n            <!--div class=\"panel-body\"></!--div>->\r\n            <ul class=\"list-group\" *ngFor=\"let subsection of section.subsections\">\r\n                <li class=\"list-group-item list\">\r\n                    <a [routerLink]=\"['/forum', subsection.id]\">\r\n                        <span [textContent]=\"subsection.name\"></span>\r\n                        <span class=\"small\" [textContent]=\"subsection.description\"></span>\r\n                    </a>\r\n                    <span class=\"pull-right\">\r\n                        <a [routerLink]=\"['/forum', subsection.id, 'edit']\"><span class=\"glyphicon glyphicon-pencil\"></span></a>\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <a ng-click=\"vm.addSection()\">Добавить секцию</a>\r\n\r\n</!--div>\r\n\r\n<script type=\"text/ng-template\" id=\"addSection.html\">\r\n    <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\">@CommonMessages.AddSection</h3>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" name=\"addSection\" role=\"form\">    \r\n            <div class=\"form-group\">\r\n                <label for=\"newSectionName\" class=\"col-md-2 control-label\">@ColonsMessages.SectionName</label>\r\n                <div class=\"col-md-10\">\r\n                    <input type=\"text\" name=\"newSectionName\" ng-model=\"vm.sectionName\" validation=\"required\" class=\"form-control\" />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button class=\"btn btn-primary\" ng-disabled=\"addSection.$invalid\" type=\"button\" ng-click=\"vm.ok()\">@CommonMessages.Add</button>\r\n        <button class=\"btn btn-default\" type=\"button\" ng-click=\"vm.cancel()\">@CommonMessages.Cancel</button>\r\n    </div>\r\n</script>\r\n\r\n<script type=\"text/ng-template\" id=\"modalDeleteConfirmation.html\">\r\n    <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\">@CommonMessages.DeleteConfirmation</h3>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        @CommonMessages.Delete?\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button class=\"btn btn-primary\" type=\"button\" ng-click=\"vm.ok()\">@CommonMessages.Delete</button>\r\n        <button class=\"btn btn-default\" type=\"button\" ng-click=\"vm.cancel()\">@CommonMessages.Cancel</button>\r\n    </div>\r\n</script>\r\n    -->";

/***/ },
/* 77 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-xs-12 col-sm-12\">\r\n    <form class=\"form-horizontal\" name=\"editForm\" role=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(editForm.value)\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Секция:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <select class=\"form-control\" name=\"categoryId\" formControlName=\"sectionId\">\r\n                    <option *ngFor=\"let section of forumSections\" value=\"{{section.id}}\">{{section.name}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Имя:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"name\" formControlName=\"name\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Описание:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"description\" formControlName=\"description\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <button type=\"submit\" [disabled]=\"!editForm.valid\" class=\"btn btn-default\">Сохранить</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n";

/***/ },
/* 78 */
/***/ function(module, exports) {

module.exports = "<table border=\"0\" width=\"100%\" bgcolor=\"#FFFFFF\" cellspacing=\"1\" cellpadding=\"0\" class=\"gTable\" *ngIf=\"item\">\r\n    <tbody>\r\n    <tr><td class=\"gTableTop\" colspan=\"7\" [textContent]=\"item.name\"><div style=\"float:right\" class=\"gTopCornerRight\"></div><div id=\"subscribe\">[ <a href=\"javascript://\" onclick=\"subscribe(this);return false;\" class=\"subscribe_forum\">Подписаться на форум</a> ]</div></td></tr>\r\n    <tr><td width=\"8%\" colspan=\"2\" class=\"gTableSubTop\">&nbsp;</td><td class=\"gTableSubTop\" align=\"left\"><a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.location.href='/forum/5-0-1-0-1';return false;\" class=\"topSortLink\">Тема</a></td><td width=\"7%\" class=\"gTableSubTop\" align=\"center\"><a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.location.href='/forum/5-0-1-0-4';return false;\" class=\"topSortLink\">Ответы</a></td><td width=\"6%\" class=\"gTableSubTop\" align=\"center\"><a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.location.href='/forum/5-0-1-0-6';return false;\" class=\"topSortLink\">Просмотры</a></td><td width=\"14%\" class=\"gTableSubTop\" align=\"center\"><a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.location.href='/forum/5-0-1-0-7';return false;\" class=\"topSortLink\">Автор темы</a></td><td width=\"21%\" class=\"gTableSubTop\" align=\"left\"><a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.location.href='/forum/5-0-1-0-9';return false;\" class=\"topSortLink\">Обновления</a><span class=\"sortArrDown\">v</span></td></tr>\r\n    <tr><td class=\"threadsType\" colspan=\"7\">Важные темы</td></tr>\r\n    <!--tr >\r\n    <td class=\"threadIcoTd\" align=\"center\" width=\"4%\">\r\n        <img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" src=\"/.s/img/fr/ic/2/f_norm_nonew.gif\" title=\"Нет новых сообщений\">\r\n    </td>\r\n    <td class=\"threadIcoTd\" align=\"center\" width=\"4%\">\r\n        <img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" src=\"/.s/img/fr/ic1/poll.gif\" title=\"Тема - опрос\">\r\n    </td>\r\n    <td class=\"threadNametd\">\r\n        <a class=\"threadPinnedLink\" href=\"/forum/5-1991-1\">Рубин Казань - Ливеруль 5 ноября 2015</a>\r\n        <span class=\"postpSwithces\">[ <a class=\"postPSwithcesLink\" href=\"/forum/5-1991-1\">1</a>  <a class=\"postPSwithcesLink\" href=\"/forum/5-1991-2\">2</a> ]</span>\r\n        <a class=\"modBut\" href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('Et','Изменить/переместить тему',-440,-150,{autosize:1,closeonesc:1,resize:1,align:'left'},{url:'/forum/5-1991-0-20-1'});return false;\" title=\"Изменить/переместить тему\"><img alt=\"\" border=\"0\" align=\"absmiddle\" src=\"/.s/img/fr/eb.gif\" width=\"12\" height=\"13\"></a>\r\n        <a class=\"modBut\" href=\"javascript://\" rel=\"nofollow\" onclick=\"thdel('5','1991');return false;\" title=\"Удалить тему\"><img alt=\"\" border=\"0\" id=\"dbth1991\" align=\"absmiddle\" src=\"/.s/img/fr/db.gif\" width=\"10\" height=\"13\"></a>\r\n    </td>\r\n\r\n    <td class=\"threadPostTd\" align=\"center\">24</td>\r\n    <td class=\"threadViewTd\" align=\"center\">8539</td>\r\n    <td class=\"threadAuthTd\" align=\"center\"><span class=\"threadAuthor\"><a class=\"threadAuthorLink\" href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/8-1','up1','scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">XaNDeR</a></span></td>\r\n    <td class=\"threadLastPostTd\">\r\n        <script type=\"text/javascript\">document.write('<a title=\"К последнему сообщению\" class=\"forumLastPostLink\" hr'+'ef=\"/forum/5-1991-0-17\">09.02.2016, 17:45:15</a>')</script><a title=\"К последнему сообщению\" class=\"forumLastPostLink\" href=\"/forum/5-1991-0-17\">09.02.2016, 17:45:15</a>\r\n        <script type=\"text/javascript\">document.write('<a hr'+'ef=\"/forum/5-1991-0-17-1\"><img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" title=\"К первому непрочитанному сообщению\" src=\"/.s/img/fr/ic/2/lastpost.gif\" /></a>')</script><a href=\"/forum/5-1991-0-17-1\"><img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" title=\"К первому непрочитанному сообщению\" src=\"/.s/img/fr/ic/2/lastpost.gif\"></a>\r\n        <br>Сообщение от: <span class=\"lastPostGuest\"><a class=\"lastPostUserLink\" href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/8-0-LSLiv52','up27','scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">LSLiv52</a></span>\r\n    </td>\r\n    </tr-->\r\n\r\n    <tr><td class=\"threadsType\" colspan=\"7\">Темы форума</td></tr>\r\n    <tr *ngFor=\"let theme of item.themes.list\">\r\n        <td class=\"threadIcoTd\" align=\"center\" width=\"4%\">\r\n            <img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" src=\"http://www.myliverpool.ru/.s/img/fr/ic/2/f_norm_nonew.gif\" title=\"Нет новых сообщений\">\r\n        </td>\r\n        <td class=\"threadIcoTd\" align=\"center\" width=\"4%\">\r\n            <img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" src=\"http://www.myliverpool.ru/.s/img/fr/ic1/hot.gif\" title=\"Горячая тема\">\r\n        </td>\r\n        <td class=\"threadNametd\">\r\n            <a class=\"threadLink\" [routerLink]=\"['/forum/theme', theme.id]\" [textContent]=\"theme.name\"></a>\r\n            <!--span class=\"postpSwithces\">[ <a class=\"postPSwithcesLink\" href=\"/forum/5-1400-1\">1</a>  \r\n            <a class=\"postPSwithcesLink\" href=\"/forum/5-1400-2\">2</a> \r\n             <a class=\"postPSwithcesLink\" href=\"/forum/5-1400-3\">3</a> \r\n             <a class=\"postPSwithcesLink\" href=\"/forum/5-1400-4\">4</a>  \r\n            <a class=\"postPSwithcesLink\" href=\"/forum/5-1400-5\">5</a> ]</!--span>-->\r\n            <a class=\"modBut\" [routerLink]=\"['/forum/theme', theme.id, 'edit']\" title=\"Изменить/переместить тему\"><span class=\"glyphicon glyphicon-pencil\" align=\"absmiddle\"></span></a>\r\n            <!--*ngIf=\"section.themes.length == 0\"-->   <a class=\"modBut\"  title=\"Удалить тему\"  ng-click=\"vm.removeSection($index)\"><span class=\"glyphicon glyphicon-remove\"></span></a>\r\n        </td>\r\n\r\n        <td class=\"threadPostTd\" align=\"center\" [textContent]=\"theme.answers\"></td>\r\n        <td class=\"threadViewTd\" align=\"center\">-</td>\r\n        <td class=\"threadAuthTd\" align=\"center\"><span class=\"threadAuthor\"><a class=\"threadAuthorLink\" [routerLink]=\"['/user', theme.authorId]\" [textContent]=\"theme.authorUserName\"></a></span></td>\r\n        <td class=\"threadLastPostTd\">\r\n            <script type=\"text/javascript\">document.write('<a title=\"К последнему сообщению\" class=\"forumLastPostLink\" hr'+'ef=\"/forum/5-1400-0-17\">19.10.2016, 13:37:37</a>')</script><a title=\"К последнему сообщению\" class=\"forumLastPostLink\" href=\"/forum/5-1400-0-17\">19.10.2016, 13:37:37</a>\r\n            <script type=\"text/javascript\">document.write('<a hr' + 'ef=\"/forum/5-1400-0-17-1\"><img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" title=\"К первому непрочитанному сообщению\" src=\"http://www.myliverpool.ru.s/img/fr/ic/2/lastpost.gif\" /></a>')</script><a href=\"/forum/5-1400-0-17-1\"><img alt=\"\" style=\"margin:0;padding:0;vertical-align:middle;border:0;max-width:60px;max-height:60px;\" title=\"К первому непрочитанному сообщению\" src=\"http://www.myliverpool.ru/.s/img/fr/ic/2/lastpost.gif\"></a>\r\n            <br>Сообщение от: <span class=\"lastPostGuest\"><a class=\"lastPostUserLink\" href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/8-0-icebergstollikcs','up27','scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">icebergstollikcs</a></span>\r\n        </td>\r\n    </tr>\r\n\r\n\r\n    <tr><td class=\"threadsDetails\" colspan=\"7\">В этом форуме тем: <b [textContent]=\"totalItems\"></b>. На странице показано тем: <b [textContent]=\"items.length\"></b>.</td></tr>\r\n    <!--->tr><td class=\"forumOnlineBar\" colspan=\"7\">Форум просматривают: <a class=\"groupAdmin\" href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/8-10147','up10147','scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">parys</a></td></tr-->\r\n    </tbody>\r\n</table>\r\n<!--div class=\"container-fluid\" *ngIf=\"item\">\r\n    <div class=\"panel panel-danger\">\r\n        <div class=\"panel-heading\">\r\n            <span [textContent]=\"item.name\"></span>\r\n            <span [textContent]=\"item.description\"></span>\r\n            <a [routerLink]=\"['/forum/theme', 0, 'edit']\">Добавить тему</a>\r\n        </div>\r\n        <!--  <div class=\"panel-body\"></div>->\r\n        <ul class=\"list-group\" *ngFor=\"let theme of item.themes.list\">\r\n            <li class=\"list-group-item list\">\r\n                <span><a [routerLink]=\"['/forum/theme', theme.id]\" [textContent]=\"theme.name\"></a></span>\r\n                <span [textContent]=\"theme.description\"></span>\r\n                <span class=\"pull-right\">\r\n                    <a [routerLink]=\"['/forum/theme', theme.id, 'edit']\"><span class=\"glyphicon glyphicon-pencil\"></span></a>\r\n                    <a class=\"pull-right\" ng-show=\"section.subsections.length == 0\" ng-click=\"vm.removeSection($index)\">\r\n                        <span class=\"glyphicon glyphicon-remove\"></span>\r\n                    </a>\r\n                </span>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n    <div>Всего тем:<span [textContent]=\"item.themes.totalItems\"></span></div>\r\n    <div class=\"pagination\">\r\n        <pagination *ngIf=\"items\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n    </div>\r\n</!--div>-->\r\n";

/***/ },
/* 79 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-sx-12 col-sm-12\">\r\n    <form class=\"form-horizontal\" name=\"editForm\" role=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(editForm.value)\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Подсекция:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <select class=\"form-control\" name=\"subsectionId\" formControlName=\"subsectionId\">\r\n                    <option *ngFor=\"let subsection of forumSubsections\" value=\"{{subsection.id}}\">{{subsection.name}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Имя:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"name\" formControlName=\"name\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Описание:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"description\" formControlName=\"description\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <button type=\"submit\" [disabled]=\"!editForm.valid\" class=\"btn btn-default\">Сохранить</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>";

/***/ },
/* 80 */
/***/ function(module, exports) {

module.exports = "<table class=\"gTable\" *ngIf=\"item\">\r\n    <tbody>\r\n    <tr>\r\n        <td class=\"gTableTop\">\r\n            <div style=\"float:left\" class=\"gTopCornerRight\" [textContent]=\"item.name\"></div>\r\n            \r\n            <!--div id=\"subscribe\">[ <a href=\"javascript://\" onclick=\"subscribe(this);return false;\" class=\"thread_subscribe\">Подписаться на тему</a> ]</!--div>-->\r\n        </td>\r\n    </tr>\r\n    <tr *ngFor=\"let message of items\">\r\n        <td class=\"\">\r\n            <table class=\"postTable\">\r\n                <tbody>\r\n                <tr>\r\n                    <td width=\"23%\" class=\"postTdTop\" align=\"center\">\r\n                        <a class=\"postUser\" [routerLink]=\"['/user', message.authorId]\" [textContent]=\"message.authorUserName\"></a>\r\n                    </td>\r\n                    <td class=\"postTdTop\">\r\n                        <div class=\"h6\" style=\"float: right\">\r\n                            <a tooltip=\"Хороший пост\">\r\n                                <span class=\"glyphicon glyphicon-thumbs-up\"></span>\r\n                            </a> \r\n                            <a tooltip=\"Плохой пост\">\r\n                                <span class=\"glyphicon glyphicon-thumbs-down\"></span>\r\n                            </a>\r\n                        </div>Дата: <span [textContent]=\"message.additionTime | date:'medium'\"></span> | Сообщение # N/A\r\n                        <!--<a name=\"100821\" class=\"postNumberLink\" href=\"javascript://\" rel=\"nofollow\" onclick=\"prompt('Прямая ссылка к сообщению', 'http://www.myliverpool.ru/forum/44-1667-100821-16-1369831384');return false;\">1</a>-->\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"postTdInfo\" valign=\"top\">\r\n                        <img [title]=\"message.authorUserName\" class=\"userAvatar margin-auto\" [src]=\"message.photo\" [alt]=\"message.authorUserName\">\r\n                        <div class=\"postRankName\">Fields of Anfield Road</div>\r\n                        <div class=\"postRankIco\">\r\n                            <b>Знатоки</b>\r\n                        </div>\r\n                        <div class=\"numposts\">Сообщений: <span>N/A</span></div>\r\n\r\n\r\n                        <!--<div class=\"postUserGroup\">Страна: Российская Федерация</div>\r\n                        <div class=\"postUserGroup\">Город: Rostov on Don</div>\r\n                        <div class=\"reputation\">Подарки: <a href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('AwL', 'Список наград', 380, 200, {autosize:1, closeonesc:1, maxh:300, minh:100},{url:'/index/54-2733'});return false;\" title=\"Список наград\"><span class=\"repNums\"><b>38</b></span></a> &nbsp;<a href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('AwD','Вручить награду',380,200,{autosize:1,closeonesc:1,maxh:300,minh:100},{url:'/index/55-2733'});return false;\"><span style=\"font-size:10pt\" title=\"Вручить награду\"><b>+</b></span></a>\r\n                        <div class=\"reputation\">Репутация: <a title=\"Смотреть историю репутации\" class=\"repHistory\" href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('Rh',' ',400,250,{autosize:1,closeonesc:1,maxh:300,minh:100},{url:'/index/9-2733'});return false;\"><b>824</b></a>  &nbsp;<a class=\"reputationDo\" title=\"Изменить репутацию\" href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('Rd',' ',380,200,{autosize:1,closeonesc:1},{url:'/index/',type:'post',data:{a:'23',s:'2733',c:'/forum/44-1667-100821-16-1369831384'}});return false;\"><span style=\"font-size:10pt\"><b>&#177;</b></span></a></div>-->\r\n                        <div *ngIf=\"roles.isAdminAssist\" class=\"userBan\">Замечания:\r\n                            <a class=\"banPercent\" title=\"Смотреть историю замечаний\" href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('Bh',' ',400,250,{autosize:1,closeonesc:1,maxh:300,minh:100},{url:'/index/21-2733'});return false;\">0%</a>  &nbsp;\r\n                            <a title=\"Изменить уровень замечаний\" class=\"banDo\" href=\"javascript://\" rel=\"nofollow\" onclick=\"new _uWnd('Bd',' ',400,250,{autosize:1,closeonesc:1,maxh:300,minh:100},{url:'/index/22-2733-1'});return false;\">±</a>\r\n                        </div>\r\n                    </td>\r\n                    <td class=\"posttdMessage\" valign=\"top\">\r\n                        <span class=\"ucoz-forum-post\" [innerHTML]=\"message.message\"></span>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"postBottom\" align=\"center\">\r\n                        <div class=\"postip\"> \r\n                            <a *ngIf=\"roles.isAdminAssist\" class=\"postIpLink\" href=\"http://www.ripe.net/perl/whois?91.220.155.248\" target=\"_blank\">91.220.155.248</a>\r\n                            <!--   (<a href=\"javascript://\" onclick=\"prompt( & quot;&quot;,&quot;Российская Федерация & quot;);return false;\">RU</a>) ]--> \r\n                            <span class=\"statusOffline\">Оффлайн</span>\r\n                        </div>\r\n                    </td>\r\n                    <td class=\"postBottom\">\r\n                        <span>\r\n                                    <!--<a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/8-2733', 'up2733', 'scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">\r\n                                        <img class=\"inline\" alt=\"\" style=\"margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_profile.gif\" title=\"Профиль пользователя\">\r\n                                    </a>--> \r\n                                    <a href=\"javascript://\" rel=\"nofollow\" onclick=\"window.open('/index/14-2733-0-1', 'userpm', 'scrollbars=1,top=0,left=0,resizable=1,width=680,height=350');return false;\">\r\n                                        <img class=\"inline\" alt=\"\" style=\"margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_pm.gif\" title=\"Личное сообщение\">\r\n                                    </a>\r\n                            <a>\r\n                                    <img class=\"inline\" alt=\"\" style=\"cursor: pointer; margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_icq.gif\" title=\"ICQ: 575285688\" onclick=\"prompt('ICQ number', '575285688');\">\r\n                                    </a>\r\n                             <a href=\"\" target=\"_blank\">\r\n                                        <img class=\"inline\" src=\"http://myliverpool.ru/desighn/vk.jpg\" border=\"0\" alt=\"\">\r\n                                    </a>\r\n                                    <a onmouseover=\"get_selection()\" class=\"postQuote\">\r\n                                        <img class=\"inline\" alt=\"\" style=\"margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_quote.gif\" title=\"Цитировать\">\r\n                                    </a>\r\n                                    <a href=\"/forum/44-1667-100821-9-1\">\r\n                                        <img class=\"inline\" alt=\"\" style=\"margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_edit.gif\" title=\"Изменить сообщение\">\r\n                                    </a>\r\n                                    <a href=\"/forum/44-1667-0-21\">\r\n                                        <img class=\"inline\"alt=\"\" id=\"dbo100821\" style=\"margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_delete.gif\" title=\"Удалить тему\">\r\n                                    </a>\r\n                                    <a class=\"inline goOnTop\" href=\"javascript:scroll(0,0);\">\r\n                                        <img class=\"inline\" alt=\"\" style=\"margin: 0; padding: 0; border: 0;\" src=\"http://myliverpool.ru/.s/img/fr/bt/16/p_up.gif\" title=\"Вверх\">\r\n                                    </a>\r\n                                    <input class=\"inline\" type=\"checkbox\" title=\"Пометить на удаление\" disabled=\"\" style=\"display: none;\">\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </td>\r\n    </tr>\r\n    <tr>\r\n        <td class=\"postSeparator\"></td>\r\n    </tr>\r\n    <tr id=\"delPtBut\" style=\"display:none;\"><td colspan=\"2\" class=\"gTableSubTop\" align=\"right\"><div align=\"right\" style=\"padding:1px;\"><form style=\"margin:0;padding:0;\" method=\"post\" name=\"delposts\" action=\"/forum/\" onsubmit=\"return chdel(this);\"><input class=\"delPostsSubmit\" id=\"delPsSbm\" type=\"submit\" value=\"Удалить отмеченные сообщения\" style=\"font-size:7pt;\"><input type=\"hidden\" name=\"fid\" value=\"44\"><input type=\"hidden\" name=\"tid\" value=\"1667\"><input type=\"hidden\" name=\"a\" value=\"8\"><input type=\"hidden\" name=\"ss\" value=\"gOKI9nKk\"><input type=\"hidden\" name=\"t\" value=\"1\"><input type=\"hidden\" name=\"pg\" value=\"1\"><input type=\"hidden\" id=\"pids\" name=\"pids\" value=\"0\"></form></div></td></tr>\r\n    </tbody>\r\n    <forumMessage-addition [themeId]=\"item.id\"></forumMessage-addition>\r\n</table>\r\n\r\n\r\n<!--<div *ngIf=\"item\">\r\n<h2 [textContent]=\"item.name\"></h2>\r\n<h3 [textContent]=\"item.description\"></h3>\r\n<div class=\"container-fluid forum-message col-sm-12\" *ngFor=\"let message of items\">\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading col-sm-12\">\r\n            <span class=\"col-sm-3\"><a [routerLink]=\"['/user', message.authorId]\" [textContent]=\"message.authorUserName\"></a></span>\r\n            <span class=\"col-sm-9 pull-right\" [textContent]=\"message.additionTime | date:'medium'\"></span>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <div class=\"col-sm-3\"> <img class=\"flex-vertical-center width50p\" src=\"{{message.photo}}\" /></div>\r\n            <div class=\"col-sm-9\" [innerHTML]=\"message.message\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n        <forumMessage-addition [themeId]=\"item.id\"></forumMessage-addition>\r\n    <div class=\"pagination\">\r\n        <pagination *ngIf=\"items\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n    </div>\r\n</div>-->\r\n    <!--style>\r\n          .flex-container-row {\r\n              display: flex;\r\n              flex-direction: row;\r\n              flex-wrap: nowrap;\r\n              justify-content: flex-start;\r\n              align-content: flex-start;\r\n              align-items: flex-start;\r\n              background-color: #000080;\r\n               min-height: 100px;\r\n               margin-bottom: 10px;\r\n              }\r\n          .flex-container-column {\r\n              display: flex;\r\n              flex-direction: column;\r\n              flex-wrap: nowrap;\r\n              justify-content: flex-start;\r\n              align-content: stretch;\r\n              align-items: center;\r\n              background-color: #ffff00;\r\n              }\r\n\r\n\r\n          .flex-item-1 {\r\n              background-color: #2f4f4f;\r\n              order: 0;\r\n              flex: 3 0 auto;\r\n              flex-direction: column;\r\n              align-self: stretch;\r\n          }\r\n          .flex-item-2 {\r\n              background-color: #9400d3;\r\n              order: 0;\r\n              flex: 10 0 auto;\r\n              flex-direction: column;\r\n              align-self: stretch;\r\n          }\r\n          .flex-item {\r\n               order: 0;\r\n              flex: 0 1 auto;\r\n              flex-direction: column;\r\n          }\r\n          .flex-item.name {\r\n               order: 0;\r\n              flex: 1 1 auto;\r\n              flex-direction: column;\r\n          }\r\n          .flex-item.photo {\r\n               order: 0;\r\n              flex: 5 1 auto;\r\n              flex-direction: row;\r\n                background-color: #008080;\r\n            }\r\n          .flex-item.date {\r\n              order: 0;\r\n              flex: 1 1 auto;\r\n              flex-direction: row;\r\n           }\r\n          .flex-item.message {\r\n              order: 0;\r\n              flex: 5 1 auto;\r\n              flex-direction: row;\r\n                 align-self: flex-start;\r\n                 background-color: #00bfff;\r\n             }\r\n      </style>\r\n    <div class=\"flex-container-row message\" ng-repeat=\"message in vm.messages\">\r\n          <div class=\"flex-container-column flex-item-1\">\r\n              <div class=\"flex-item name\">\r\n                  <a ui-sref=\"userInfo({id: message.authorId})\" ng-bind=\"message.authorUserName\"></a>\r\n              </div>\r\n              <div class=\"flex-item photo\">\r\n                  <img ng-src=\"message.photo}}\"/>\r\n              </div>\r\n          </div>\r\n          <div class=\"flex-container-column flex-item-2 \">\r\n              <span class=\"flex-item date\" ng-bind=\"message.additionTime | date:'medium'\"></span>\r\n              <div class=\"flex-item message\" ng-bind-html=\"message.message | rawHtml\">\r\n              </div>\r\n          </div>\r\n      </div-->\r\n\r\n";

/***/ },
/* 81 */
/***/ function(module, exports) {

module.exports = "<table align=\"center\" celpadding=\"20px\" style=\"border: 2px double #EFF0F2; box-shadow: 0 0 10px rgba(0,0,0,0.5);\" >\r\n    <tbody>\r\n        <tr>\r\n            <td><img padding=\"20px\" src=\"http://www.myliverpool.ru/images/history/Liverpool_FC-n_logo.png\" td=\"\" /></td>\r\n            <td>\r\n                <table >\r\n                    <tbody>\r\n                        <tr class=\"CldrOdd\">\r\n                            <td class=\"TextStatTab\"><b>Название:</b></td>\r\n                            <td class=\"TextStatTab\">Футбольный Клуб &quot;Ливерпуль&quot;</td>\r\n                        </tr>\r\n                        <tr class=\"CldrEven\">\r\n                            <td class=\"TextStatTab\"><b>Прозвище:</b></td>\r\n                            <td class=\"TextStatTab\">&quot;Красные&quot; (The Reds)</td>\r\n                        </tr>\r\n                        <tr class=\"CldrOdd\">\r\n                            <td class=\"TextStatTab\"><b>Год основания:</b></td>\r\n                            <td class=\"TextStatTab\">1892</td>\r\n                        </tr>\r\n                        <tr class=\"CldrEven\">\r\n                            <td class=\"TextStatTab\"><b>Основатель:</b></td>\r\n                            <td class=\"TextStatTab\">Джон Холдинг</td>\r\n                        </tr>\r\n                        <tr class=\"CldrOdd\">\r\n                            <td class=\"TextStatTab\"><b>Домашний стадион:</b></td>\r\n                            <td class=\"TextStatTab\">&quot;Энфилд&quot;</td>\r\n                        </tr>\r\n                        <tr class=\"CldrEven\">\r\n                            <td class=\"TextStatTab\"><b>Владелец:</b></td>\r\n                            <td class=\"TextStatTab\">Fenway Sports Group</td>\r\n                        </tr>\r\n                        <tr class=\"CldrOdd\">\r\n                            <td class=\"TextStatTab\"><b>Директорский состав:</b></td>\r\n                            <td class=\"TextStatTab\">\r\n                                Дж. Генри (основной владелец),<br />\r\n                                Т. Вернер (президент),<br />\r\n                                Д. Гинзберг (вицепрезидент),<br />\r\n                                И. Эйр (управляющий директор),<br />\r\n                                М. Гордон\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"CldrEven\">\r\n                            <td class=\"TextStatTab\"><b>Главный тренер:</b></td>\r\n                            <td class=\"TextStatTab\">Юрген Клопп</td>\r\n                        </tr>\r\n                        <tr class=\"CldrOdd\">\r\n                            <td class=\"TextStatTab\"><b>Официальный сайт:</b></td>\r\n                            <td class=\"TextStatTab\">liverpoolfc.com</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"eMessage\">\r\n    Футбольный клуб &quot;Ливерпуль&quot; может похвастаться красочным и прославленным прошлым. Это одна из самых уважаемых и признанных команд английского спорта. Если вернуться к моменту возникновения клуба, окажется, что свою роль в этом событии сыграл главный соперник &quot;красных&quot; - &quot;Эвертон&quot;.<br />\r\n    <br />\r\n    В 1878 году у &quot;Эвертона&quot; возникли разногласия по арендной плате с Джоном Холдингом, владельцем поля. В 1892 году они окончательно покинули &quot;Энфилд&quot;, а Холдинг основал новый футбольный клуб - &quot;Ливерпуль&quot;.<br />\r\n    <br />\r\n    Холдинг назначил главным тренером своего друга Джона Маккену, который сразу отправился в Шотландию на поиски новых талантов. К сожалению, появление новой команды не впечатлило местных жителей, они продолжали поддерживать &quot;Эвертон&quot;. Это огорчало Холдинга, не никак не умерило его амбиции, и уже через год можно было наблюдать первые успехи новоиспеченного клуба. &quot;Ливерпуль&quot; был принят в Футбольную Лигу.<br />\r\n    <br />\r\n    Это стало началом настоящего &quot;Ливерпуля&quot;. Никто не мог предсказать, что после всех взлетов и падений, клуб превратится в один из самых престижных в английском футболе, что за время своего существования он выиграет восемь Кубков Лиги, семь Кубков Англии, три кубка УЕФА, пять Кубов Европейских чемпионов (Лиги Чемпионов) и восемнадцать раз станет чемпионом своей страны.\r\n</div>\r\n\r\n<hr />\r\n\r\n<div align=\"right\"><i>Источник: lfcnews.co.uk</i></div>";

/***/ },
/* 82 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-md-12\">\r\n    <div class=\"\">\r\n        <img alt=\"\" style=\"border: 3px solid #ccc;margin:0 15px 15px 0;\" src=\"http://pictures.footymad.net/upload/342/69050-1.jpg\" align=\"left\" width=\"250px\">Главный соперник \"Ливерпуля\", \"Эвертон\", был сформирован в 1878 году Джоном Холдингом, местным предпринимателем и будущим мэром Ливерпуля.\r\n\r\n        Они начали играть на \"Энфилд Роуд\" — поле, арендованном у пивовара по имени Джон Оррелл. Как только \"Эвертон\" встал на ноги Холдинг приступил к строительству футбольных трибун на \"Энфилде\". Однако после возникших в 1892 году разногласий клуб распался на две группы. Одна из групп приняла решение переехать на \"Гудисон Парк\", в то время как оставшиеся, во главе с Холдингом, основали на \"Энфилд Роуд\" новый футбольный клуб - \"Ливерпуль\". Холдинг назначил главным тренером своего друга, Джона Маккену, который сразу отправился в Шотландию набирать команду игроков. После года работы Маккена решил, что настало время подать заявку на вступление в Футбольную лигу.\r\n\r\n        Уже после первого сезона в лиге \"Ливерпуль\" поднялся в высший дивизион, однако он по-прежнему оставался в тени своих соседей из \"Эвертона\", а большинство местных жителей отказывались ходить на матчи команды, все игроки которой были шотландцами. Первый сезон прошел неудачно, и клуб выбыл во Второй дивизион. Маккена поклялся вернуться в высшую лигу через двенадцать месяцев, что и произошло благодаря его целеустремленности и настойчивости, \"Ливерпуль\" вновь становится чемпионом второго дивизиона и продвигается в первый. На этот раз они завершили сезон на надежном пятом месте, выше \"Эвертона\".\r\n\r\n        Первый чемпионский титул \"Ливерпуль\" выиграл в сезоне 1900/01. Через два года после этого \"красные\" выбыли из высшей лиги, но вернулись туда спустя год и в том сезоне вновь стали победителями чемпионата. В качестве награды руководство клуба приняло решение построить для болельщиков новую трибуну, \"Спион Коп\", позже ставшую легендарной. Такое название трибуна получила в честь холма, расположенного в южно-африканской провинции Натал, где во время второй англо-бурской войны мерсисайдский полк понес большие потери. В переводе с африкаанс \"спион коп\" означает \"место, дающее хороший обзор\". В 1928 году трибуна была расширена и обрела крышу, надежно защищавшую от непогоды 30 000 болельщиков.\r\n\r\n        После Первой мировой войны \"Ливерпуль\" стал обладателем еще двух чемпионских титулов, но после Второй мировой начался спад игровой формы, хотя в 1950 году \"красным\" все же удалось выйти в финал Кубка Англии, где они уступили \"Арсеналу\". Сезон 1953/54 \"Ливерпуль\" завершил на последнем месте и выбыл из первого дивизиона. После нескольких неудачных лет на помощь клубу пришел Билл Шенкли. Он был назначен главным тренером в 1959 году и за следующие четырнадцать лет своей работы превратил \"Ливерпуль\" в величайший клуб английского футбола. За первые двенадцать месяцев его руководства двадцать четыре игрока покинули команду. В сезоне 1963/64 \"Ливерпуль\" в шестой раз стал чемпионом высшей лиги, а в следующем году коллекция трофеев пополнилась кубком Англии, благодаря победе над \"Лидс\" в финале соревнования. Но победная серия на этом не закончилась, в сезоне 1965/66 \"красные\" вновь выиграли главный титул лиги.\r\n\r\n        Следующий трофей \"Ливерпуль\" получил лишь спустя семь лет, в сезоне 1972/73, на этот раз Кубок УЕФА, а спустя еще год \"красные\" вновь стали обладателями кубка Англии. После этого Шенкли неожиданно решил завершить карьеру и передал полномочия своей правой руке — Бобу Пейсли. Громких побед не пришлось долго ждать, уже на второй год работы нового тренера, в сезоне 1975/76, \"Ливерпуль\" выиграл чемпионат и Кубок УЕФА. Через год \"красные\" вновь стали чемпионами лиги, завоевали Кубок европейских чемпионов, обыграв в финале \"Боруссию Менхенгладбах\", но в финальном матче Кубка Англии уступили \"Манчестер Юнайтед\" со счетом 2:1. В сезоне 1977/78 \"Ливерпуль\" стал первым британским клубом, кому удалось подтвердить звание европейского чемпиона, одержав победу в финале соревнования над бельгийским клубом \"Брюгге\" со счетом 1:0.\r\n\r\n        Затем два года подряд, в сезонах 1978/79 и 1979/80, \"Ливерпуль\" становится чемпионом страны. 1981 год стал очередной яркой страницей в истории клуба, в третий раз в своей истории \"красные\" становятся обладателями Кубка европейских чемпионов, одержав победу над мадридским \"Реалом\" в финале турнира, а также выигрывают Кубок Лиги. В сезонах 1981/82 и 1982/83 \"Ливерпуль\" завоевывает еще два главных футбольных трофея страны, после чего Пейсли принимает решение уйти на пенсию. За девять лет его руководства клубом ему шесть раз присуждалось звание \"Лучший тренер года\".\r\n\r\n        На пост главного тренера заступил Джо Фэган, и в первый же год под его руководством клуб выиграл чемпионат Англии, Кубок Лиги и Кубок европейских чемпионов, обыграв \"Рому\" в Италии. Следующий сезон был омрачен страшной трагедией. Во время финала Кубка европейских чемпионов против \"Ювентуса\" на стадионе \"Эйзель\" возникли беспорядки. Перекрытие на стадионе рухнуло и унесло с собой жизни 38 болельщиков итальянского клуба. В конечном счете обладателем трофея стал \"Ювентус\", а английским клубам на неопределенный срок запретили участвовать в европейских соревнованиях.\r\n\r\n        В 1986 году Кенни Далглиш был назначен играющим тренером. В этом же сезоне \"Ливерпуль\" выиграл чемпионат и Кубок Англии. В сезоне 1987/88 \"красные\" вновь становятся чемпионами страны, однако в финале Кубка Англии уступают \"Уимблдону\". Сезон 1988/89 стал худшим в истории \"Ливерпуля\". Во время полуфинального матча Кубка Англии против \"Ноттингем Форест\" на стадионе \"Хиллсборо\" 96 болельщиков \"Ливерпуля\" погибли в результате переполнения трибуны \"Леппинг Лейн\". Позже \"Красные\" вышли в финал, где встретились с \"Эвертоном\". Перед началом матча болельщики обеих команд пели \"You will never walk alone\" и провели минуту молчания, в память о погибших на \"Хиллсборо\". \"Ливерпуль\" победил со счетом 3:2 благодаря двум голам, забитым вышедшим на замену Ианом Рашем. Главный трофей лиги также был практически в руках у \"красных\", чтобы этому помешать \"Арсеналу\" нужно было выиграть на \"Энфилде\" с преимуществом в два мяча. К концу решающего матча \"Арсенал\" вел в счете 1:0, но гол Майкла Томаса, забитый уже в добавленное время, похоронил надежды \"Ливерпуля\" на очередной трофейный дубль. После окончания сезона Кенни Далглиш оставил свой пост, объяснив это шокировавшее многих решение нервным перенапряжением.\r\n\r\n        Временно заменить Далглиша был призван Ронни Моран, прежде чем в апреле 1991 года на пост главного тренера не был назначен Грэм Сунесс. Он привел в команду множество новых игроков, но его строгий стиль работы не пользовался популярностью и не помог команде повторить успех прошлых лет. Начиная с эры Суннеса и до сих пор клуб преследует множество проблем.\r\n\r\n        Рой Эванс в свой первый полный сезон у руля клуба, в 1995 году, выиграл Кубок Лиги. Несмотря на то, что ему удалось построить интересную команду молодых игроков, многие из которых пришли из юношеской команды \"Ливерпуля\", никаких серьезных побед ему одержать не удалось. Болельщики и руководство требовали громких успехов, и в 1998 году в клуб был приглашен Жерар Улье, который должен был разделить тренерское кресло с Роем Эвансом. Опыт совместной работы оказался неудачным, и Эванс покинул клуб, положив тем самым конец 35 периоду преданной службы \"Ливерпулю\".\r\n\r\n        Улье начал развивать состав клманды, приглашая относительно неизвестных игроков, при этом его совершенно не пугали критические отзывы средств массовой информации. Ему удалось значительно улучшить игру команды в обороне, за что в 2001 году он был вознагражден пятью трофеями, а \"Ливерпуль\" не потерпел ни одного поражения в кубковых соревнованиях того сезона и квалифицировался в Лигу Чемпионов.\r\n\r\n        На следующий год \"Ливерпуль\" серьезно претендовал на победу в Премьер-лиге и в то же время неплохо себя проявил в Лиге чемпионов, добравшись до четвертьфинала соревнования, где уступил леверкузенскому \"Байеру\", вышедшему в итоге в финал турнира.\r\n\r\n        Из-за проблем со здоровьем Жерара Улье, большую часть следующего сезона командой фактически руководил Фил Томпсон, но благодаря своем бутрумовскому прошлому ему удалось успешно справиться с этой задачей. В Премьер-лиге \"Ливерпуль\" занял второе место, уступив лишь \"Арсеналу\", и вновь получил путевку в Лигу Чемпионов.\r\n\r\n        Сезон 2003/04 \"Ливерпуль\" завершил на четвертом месте, получив тем самым возможность принять участие в Лиге Чемпионов следующего сезона. Руководство клуба решило, что настала пора перемен. Новым главным тренером был назначен Рафаэль Бенитес, а Улье согласился покинуть клуб.\r\n\r\n        Бенитес не стал тратить время на поиски для себя новых помощников, а оставил на своих должностях Фила Томпсона, Сэмми Ли и Джо Корригана. Внезапно \"Ливерпуль\" вернулся к атакующему стилю игры с большим количеством передач, на радость болельщикам и критикам, и стал проявлять намеки на многообещающее будущее. В конце сезона \"Ливерпуль\" выиграл Лигу Чемпионов в одном из самых захватывающих финалов в истории турнира.\r\n\r\n        Руководство клуба, в лице американских владельцев Джоржа Жиллетта и Тома Хикса, давило на Бенитеса с требованием немедленного успеха в Премьер-лиге. Раскол произошел, когда тренеру было отказано в средствах на усиление состава.\r\n\r\n        Летом 2010 года Бенитеса сменил Рой Ходжсон, которому за то непродолжительное время, что он пробыл у руля клуба, так не удалось завоевать любовь болельщиков. Клуб, тем временем, пытался разорвать все связи с американскими хозяевами.\r\n\r\n        В конце концов, благодаря усилиям президента клуба, Мартина Бротона, появился новый покупатель, и сделка по продаже \"Ливерпуля\" состоялась, несмотря на все судебные иски, пытавшиеся помешать ее осуществлению. В октябре 2010 клуб попрощался с Хиксом и Жиллеттом и встретил нового владельца, Джона Генри, чья компания NEVS уже имела успешный опыт работы с бостонской бейсбольной командой \"Ред Сокс\".\r\n\r\n        Ходжсон не надолго задержался в клубе, после ужасного начала сезона 2010/11, в январе он согласился покинуть свой пост, и его место временно занял Кенни Далглтш, чье имя к тому времени все чаще стали вспоминать болельщики.\r\n\r\n        Далглиш быстро вселил уверенность в команду, избавился от ненужных игроков, включая и спорный переход Фернандо Торреса в \"Челси\", приобрел Луиса Суареса и Энди Кэрролла для построения новой линии атаки. Клуб словно заново родился и взлетел на крыльях. В конце сезона Далглиш подписал с \"Ливерпулем\" трехлетний контракт.\r\n\r\n        Основной целью клуба было возвращение в Лигу Чемпионов, за свой первый полный сезон в клубе Далгдишу достичь ее не удалось, из-за достаточно нестабильных выступлений команды в Премьер-лиге. В итоге клуб финишировал на восьмом месте в таблице, ниже своего основного конкурента, \"Эвертона\".\r\n\r\n        Тем не менее, \"Ливерпуль\" хорошо проявил себя в кубковых соревнованиях. В феврале 2012 года \"красные\" выиграли Кубок Лиги, обыграв \"Кардифф\" в серии пенальти, благодаря чему получил путевку в Лигу Европы. А в мае \"Ливерпуль\" и \"Челси\" встретились в финале Кубка Англии, однако удача оказалась на стороне лондонского клуба.\r\n\r\n        Несмотря на успехи в кубковых турнирах, в конце сезона Далглиш был уволен, а его место занял молодой североирландский тренер, Брендан Роджерс, покоривший к тому времени всех своей работой с достаточно скромным \"Суонси Сити\".\r\n\r\n        Роджерс пришел с решимостью установить в клубе новую философию, привить команде новый стиль игры, при этом не теряя, как он утверждал, связи с историей. С собой из \"Суонси\" он захватил своих ассистентов и полузащитника Джо Аллена. Однако, из-за проводившегося в то время чемпионата Европы, тренер впервые увидел всю свою команду в сборе только к началу сезона. В сезоне 2012/13 \"Ливерпуль\" выступал крайне нестабильно, показав худший за последние сто лет старт сезона. Крупные победы сменяли неожиданные безвольные поражения. Во время зимнего трансферного окна Роджерсу удалось усилить команду двумя приобретениями: английским нападающим Дэниелом Старриджем и блазильцем Филлиппе Коутиньо. В итоге команда завершила сезон на седьмом месте, вновь ниже \"Эвертона\".\r\n\r\n        Зимой 2013 ветеран клуба Джейми Каррагер объявил о завершении своей карьеры на \"Энфилде\". 19 мая он провел свой последний официальный матч в красной футболке в победном для \"Ливерпуля\" матче против \"Куинз Парк Рейнджерс\".\r\n    </div><hr /><i>\r\n        Источник: lfconline.com\r\n        Перевод: tas-n-r\r\n    </i>\r\n</div>\r\n";

/***/ },
/* 83 */
/***/ function(module, exports) {

module.exports = "<!-- FIRST TEAM -->\r\n<div align=\"left\">\r\n    <table align=\"left\" class=\"SquadList1\">\r\n        <tbody>\r\n            <tr class=\"squadEvenTab\">\r\n                <th class=\"StaffTab\" colspan=\"2\">Первая команда</th>\r\n            </tr>\r\n        </tbody>\r\n        <tbody>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Jurgen Klopp\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Jurgen_Klopp.jpg\" title=\"Jurgen Klopp\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Юрген Клопп</p>\r\n\r\n                    <p class=\"JobTitle\">Главный тренер</p>\r\n                </td>\r\n            </tr>\r\n            <!--tr class=\"squadEven\">\r\n            <td class=\"SquadPhoto\"><img alt=\"Sean O'Driscoll\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Sean_ODriscoll.jpg\" title=\"Sean O'Driscoll\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Шон О&#39;Дрисколл</p>\r\n\r\n            <p class=\"JobTitle\">Ассистент главного тренера</p>\r\n            </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n            <td class=\"SquadPhoto\"><img alt=\"Gary McAllister\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Gary_McAllister.jpg\" title=\"Gary McAllister\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Гари МакАллистер</p>\r\n\r\n            <p class=\"JobTitle\">Тренер первой команды</p>\r\n            </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n            <td class=\"SquadPhoto\"><img alt=\"Glen Driscoll\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Glen_Driscoll.png\" title=\"Glen Driscoll\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Глен Дрисколл</p>\r\n\r\n            <p class=\"JobTitle\">Глава отдела спортивной медицины и науки</p>\r\n            </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n            <td class=\"SquadPhoto\"><img alt=\"Ryland Morgans\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Ryland_Morgans.png\" title=\"Ryland Morgans\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Риланд Морганс</p>\r\n\r\n            <p class=\"JobTitle\">Глава отдела физической подготовки</p>\r\n            </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n            <td class=\"SquadPhoto\"><img alt=\"Chris Davies\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Chris_Davies.jpg\" title=\"Chris Davies\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Крис Дэвис</p>\r\n\r\n            <p class=\"JobTitle\">Глава аналитического отдела</p>\r\n            </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n            <td class=\"SquadPhoto\"><img alt=\"John Achterberg\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/John_Achterberg.png\" title=\"John Achterberg\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Джон Ахтерберг</p>\r\n\r\n            <p class=\"JobTitle\">Тренер вратарей</p>\r\n            </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n            <td class=\"SquadPhoto\"><img alt=\"Zafar Iqbal\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Dr-Zafar_Iqbal.jpg\" title=\"Zafar Iqbal\" /></td>\r\n            <td class=\"StaffTable\">\r\n            <p class=\"StaffName\">Заф Икбал</p>\r\n\r\n            <p class=\"JobTitle\">врач</p>\r\n            </td>\r\n            </tr-->\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Chris Morgan\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Chris_Morgan.png\" title=\"Chris Morgan\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Крис Морган</p>\r\n\r\n                    <p class=\"JobTitle\">Глава физиотерапии</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Jordan Milsom\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Jordan_Milsom.png\" title=\"Jordan Milsom\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Джордан Милсом</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер по реабилитации</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Paul Small\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Paul_Small.png\" title=\"Paul Small\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Пол Смол</p>\r\n\r\n                    <p class=\"JobTitle\">Массажист</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Sylvan Richardson\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Sylvan_Richardson.jpg\" title=\"Sylvan Richardson\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Силван Ричардсон</p>\r\n\r\n                    <p class=\"JobTitle\">Массажист</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Lee Radcliffe\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Lee_Radcliffe.png\" title=\"Lee Radcliffe\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Ли Рэдклиф</p>\r\n\r\n                    <p class=\"JobTitle\">Администратор</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Graham Carter\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Graham_Carter.png\" title=\"Graham Carter\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Грэм Картер</p>\r\n\r\n                    <p class=\"JobTitle\">Администратор</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Barry Drust\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Barry_Drust.jpg\" title=\"Barry Drust\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Барри Драст</p>\r\n\r\n                    <p class=\"JobTitle\">Консультант отдела спортивной науки</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"James Morton\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/James_Morton.jpg\" title=\"James Morton\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Джеймс Мортон</p>\r\n\r\n                    <p class=\"JobTitle\">Диетолог</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Alec Scott\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Alec_Scott.png\" title=\"Alec Scott\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Алек Скотт</p>\r\n\r\n                    <p class=\"JobTitle\">Ассистент-аналитик</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"David Rydings\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/David_Rydings.png\" title=\"David Rydings\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Дэвид Ридингз</p>\r\n\r\n                    <p class=\"JobTitle\">Ассистент по реабилитации</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Paulo Barreira\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Paulo_Barreira.png\" title=\"Paulo Barreira\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Пауло Баррейра</p>\r\n\r\n                    <p class=\"JobTitle\">Физиотерапевт</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Matt Konopinski\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Matt_Konopinski.png\" title=\"Matt Konopinski\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Мэтт Конопински</p>\r\n\r\n                    <p class=\"JobTitle\">Физиотерапевт</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Pedro Philippou\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/firstteam/Pedro_Philippou.png\" title=\"Pedro Philippou\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Педро Филлиппо</p>\r\n\r\n                    <p class=\"JobTitle\">Спортивный терапевт</p>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n<!-- ACADEMY -->\r\n\r\n<div align=\"right\">\r\n    <table align=\"right\" class=\"SquadList1\">\r\n        <tbody>\r\n            <tr class=\"squadEvenTab\">\r\n                <th class=\"StaffTab\" colspan=\"2\">Резерв и Академия</th>\r\n            </tr>\r\n        </tbody>\r\n        <tbody>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Frank McParland\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Frank_McParland.png\" title=\"Frank McParland\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Фрэнк Макпарлэнд</p>\r\n\r\n                    <p class=\"JobTitle\">Директор Академии</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Rodolfo Borrell\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Rodolfo_Borrell.png\" title=\"Rodolfo Borrell\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Родолфо Боррелл</p>\r\n\r\n                    <p class=\"JobTitle\">Технический директор Академии</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Alex Inglethorpe\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Alex_Inglethorpe.png\" title=\"Alex Inglethorpe\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Алекс Инглторп</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер резервной команды</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Phil Roscoe\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Phil_Roscoe.png\" title=\"Phil Roscoe\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Фил Роско</p>\r\n\r\n                    <p class=\"JobTitle\">Глава отдела образования и социального обеспечения</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Andy O'Boyle\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Andy_O-Boyle.png\" title=\"Andy O'Boyle\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Энди О&#39;Бойл</p>\r\n\r\n                    <p class=\"JobTitle\">Глава отдела физической подготовки/ тренер по физподготовке команды U21</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Andy Renshaw\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Andy_Renshaw.png\" title=\"Andy Renshaw\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Энди Реншоу</p>\r\n\r\n                    <p class=\"JobTitle\">Глава отдела физиотерапии/ физиотерапевт команды U21</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Mark Morris\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Mark_Morris.png\" title=\"Mark Morris\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Марк Моррис</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер вратарей команды U21</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Tim Jenkins\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Tim_Jenkins.png\" title=\"Tim Jenkins\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Тим Дженкинс</p>\r\n\r\n                    <p class=\"JobTitle\">Глава отдела анализа развития</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Richie Partridge \" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Richie_Partridge.png\" title=\"Richie Partridge \" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Ричи Партридж</p>\r\n\r\n                    <p class=\"JobTitle\">Физиотерапевт команды U21</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Dave Moss\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Dave_Moss.png\" title=\"Dave Moss\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Дэйв Мосс</p>\r\n\r\n                    <p class=\"JobTitle\">Главный скаут Академии</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Matthew Newberry\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Matthew_Newberry.png\" title=\"Matthew Newberry\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Мэтью Ньюберри</p>\r\n\r\n                    <p class=\"JobTitle\">Скаут</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Neil Critchley\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Neil_Critchley.png\" title=\"Neil Critchley\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Нил Критчли</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер команды U18</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Remy Tang\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Remy_Tang.png\" title=\"Remy Tang\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Реми Тан</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер по физической подготовке команды U18</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Liam Kershaw\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Liam_Kershaw.png\" title=\"Liam Kershaw\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Лиам Кершоу</p>\r\n\r\n                    <p class=\"JobTitle\">Физиотерапевт команды U18</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Mike Garrity\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Mike_Garrity.png\" title=\"Mike Garrity\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Майк Гаррити</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер команд U6-U11</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Neil Edwards\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Neil_Edwards.png\" title=\"Neil Edwards\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Нил Эдвардс</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер вратарей команды U18</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Gary Lewis\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Gary_Lewis.png\" title=\"Gary Lewis\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Гэри Льюис</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер команд U12-U14</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Stephen Torpey\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Stephen_Torpey.png\" title=\"Stephen Torpey\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Стивен Торпи</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер команды U9-11</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Michael Beale\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Michael_Beale.png\" title=\"Michael Beale\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Майкл Бил</p>\r\n\r\n                    <p class=\"JobTitle\">Тренер команд U15-U16</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Joe Lewis\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Joe_Lewis.png\" title=\"Joe Lewis\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Джо Льюис</p>\r\n\r\n                    <p class=\"JobTitle\">Спортивный терапевт</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Clive Cook\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Clive_Cook.png\" title=\"Clive Cook\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Клайв Кук</p>\r\n\r\n                    <p class=\"JobTitle\">Сотрудник отдела образования и соц. обеспечения</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Oliver Morgan\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Oliver_Morgan.png\" title=\"Oliver Morgan\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Оливер Морган</p>\r\n\r\n                    <p class=\"JobTitle\">Ассистент отдела спортивной науки</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Ian Barrigan\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Ian_Barrigan.png\" title=\"Ian Barrigan\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Иан Барригэн</p>\r\n\r\n                    <p class=\"JobTitle\">Глава местной скаутской службы</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Scott Redwood\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Scott_Redwood.png\" title=\"Scott Redwood\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Скотт Рэдвуд</p>\r\n\r\n                    <p class=\"JobTitle\">Администратор</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Kyle Wiffen\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Kyle_Wiffen.png\" title=\"Kyle Wiffen\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Кайл Уиффен</p>\r\n\r\n                    <p class=\"JobTitle\">Аналитик команды U18</p>\r\n                </td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"SquadPhoto\"><img alt=\"Scott Mason\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/staff/academy/Scott_Mason.png\" title=\"Scott Mason\" /></td>\r\n                <td class=\"StaffTable\">\r\n                    <p class=\"StaffName\">Скотт Рэдвуд</p>\r\n\r\n                    <p class=\"JobTitle\">Аналитик команд U15-U16</p>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n";

/***/ },
/* 84 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-xs-6 col-sm-3 container-fluid\" ui-view=\"rightContainer\">\r\n    <span class=\"col-sx-12\" *ngIf=\"roles.isAdminAssistant\"><a (click)=\"updateEplTable()\">Обновить таблицу</a></span>\r\n    <epl-table></epl-table>\r\n</div>";

/***/ },
/* 85 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-md-12\">\r\n    <p><font color=\"red\"><b>Данные правила не подлежат обсуждению и обязательны для выполнения всеми без исключения пользователями портала рангом от простого пользователя до модератора (Администраторы - как лица, эти правила устанавливающие - поступают по своему усмотрению). Если вам не нравятся эти правила и вы хотите для себя другие правила - вы всегда можете создать свой собственный сайт и делать там все, что вам нравится.</b></font> </p>\r\n    <p>Правила вводятся для создания комфортной и конструктивной атмосферы общения. Если Вас не устраивает установленная форма общения, воздержитесь от участия в данной конференции.</p>\r\n    <p><b>I. Регистрация пользователей.</b></p>\r\n    <ol>\r\n        <li>Регистрируясь на форуме, пользователь соглашается выполнять данные Правила.</li>\r\n        <li>Для регистрации на форуме пользователь должен предоставить действующий адрес электронной почты. Мы гарантируем конфиденциальность указанной информации.</li>\r\n        <li>Выбор имени пользователя (nickname) является вашим исключительным правом. Администрация оставляет за собой право принять меры к прекращению использования nickname, если его использование нарушает общепринятые моральные и этические нормы или является оскорбительным для других пользователей форума. Запрещена регистрация nickname, схожих с уже существующими до степени, которые могут ввести в заблуждение других пользователей форума.</li>\r\n        <li>Запрещена неоднократная регистрация одним пользователем, вне зависимости от целей, с которыми такая регистрация проводится. Данное нарушение является крайне серьезным и ведет к блокированию всех учетных записей. Если вам не нравится ник, напишите в соответствующий раздел форума или администратору.</li>\r\n        <li>Если вы не проявляете активность на форуме в течение длительного времени, ваша учетная запись может быть удалена.</li>\r\n    </ol>\r\n    <p><b>II. На Форуме <font color=\"red\">запрещено</font>:</b></p>\r\n    <ol>\r\n        <li>Использовать ненормативную лексику в любых её проявлениях, в том числе сокращенную или замененную «звездочками» (или другими символами), на русском, английском языке, либо транслите. </li>\r\n        <li>Создавать темы, ранее обсуждавшиеся в Форуме. </li>\r\n        <li>Создавать сообщения, не имеющие отношения к обсуждаемой теме (оффтопик). </li>\r\n        <li>Создавать темы и сообщения, в которых более половины всей информации написано ЗАГЛАВНЫМИ БУКВАМИ. </li>\r\n        <li>Создавать темы, имеющие в названии украшения («===---Моя тема---===»), не отражающие суть вопроса («Посмотри сюда» или «fdgl;fjdgl;fdjglgfd»). </li>\r\n        <li>Создавать темы с обращением к конкретному участнику Форума. </li>\r\n        <li>Дублировать темы, то есть размещать одинаковые сообщения в разных разделах Форума. </li>\r\n        <li>Чрезмерное использование графических смайликов в сообщении (более трех подряд) или полностью состоящее только из смайлов. </li>\r\n        <li>Публикация постов, не несущих значительной смысловой нагрузки (флуд). Запрещается писать короткие бессмысленные посты типа \"ЖЖОШЬ\" или \"ПИШИ ЕЩО\", а также, состоящие из одних смайлов. </li>\r\n        <li>Использовать в сообщениях большое количество повторяющихся символов. </li>\r\n        <li>Использование в сообщениях красного цвета – это привилегия модераторов и администраторов. </li>\r\n        <li>Язык сайта-РУССКИЙ.Будьте добры,пишите на нем.Коверкание слов и преднамеренное извращение орфографии русского языка, а также использование латиницы (транслита). </li>\r\n        <li>Цитирование предыдущих сообщений, если в этом нет необходимости (флейм). </li>\r\n        <li>Использовать грубые, нецензурные выражения и оскорбления в любой форме. </li>\r\n        <li>Создавать темы и сообщения, содержащие рекламную, антирекламную или коммерческую информацию, а так же ссылки на сайты с целью повышения их посещаемости. </li>\r\n        <li>Продолжать обсуждать вопросы из тем, закрытых или удаленных администрацией. </li>\r\n        <li>Провоцировать конфликты с пользователями Форума. </li>\r\n        <li>Создавать темы и сообщения, противоречащие Конституции и законодательству РФ. </li>\r\n        <li>Использовать в качестве статуса или подписи нецензурные или ругательные слова, а так же заведомо недостоверную информацию. (Например, писать в статусе «Модератор», когда на самом деле Вы таковым не являетесь). </li>\r\n        <li>\r\n            Максимальный размер подписи должен быть не более 2-х строчек и не более 200 символов. Максимальный размер шрифта - \"2\". Подпись не должна содержать текста, выделенного красным цветом. Размер картинки в вашей подписи должен удовлетворять следующим требованиям:\r\n            - размер - не более 350х60 пикселей суммарно\r\n            - объем - не более 40 кб суммарно\r\n        </li>\r\n        <li>Использовать в качестве аватара, фотографии или в качестве вложение в сообщения картинки порнографического, экстремистского или оскорбительного характера. </li>\r\n        <li>Пропагандировать любые наркотические и психотропные вещества и образ жизни, связанный с употреблением данных веществ, а так же пропагандировать суицид, расовую и религиозную ненависть, фашизм и нацизм. </li>\r\n        <li>Использование заведомо похожих ников. </li>\r\n        <li>Выпрашивание прибавления репутации, а так же поднимать или снижать репутацию без причины. </li>\r\n        <li>Обсуждать действия администрации в разделах Форума. Если Вы недовольны действиями администрации, то высказывайте свои претензии в соответствии с п. 4.1-4.2 настоящих Правил. </li>\r\n        <li>Использовать ПС (Персональные Сообщения) для массовой рассылки информации любого рода (реклама, \"письма счастья\" и т.п.) </li>\r\n        <li>Нарушать авторские права (указывайте ссылки на АВТОРА (источник), откуда были взяты выложенные статьи) или хотя бы пишите, что авторство принадлежит не Вам. </li>\r\n        <li>Указание в имени пользователя, подписи, и других полях URL адресов коммерческих интернет-проектов, с целью рекламы и повышения индекса цитирования, за исключением особой договоренности с Администрацией портала. </li>\r\n        <li>Оскорбление игроков клуба,тренерского штаба,а также других клубов и их игроков.Выражение своей неприязни допустимо,но в рамках допустимого </li>\r\n\r\n        <li>Публично предъявлять претензии и обсуждать действия переводчиков и редакторов сайта. Пользователи ресурса, несогласные с публикациями переводов статей и материалов могут высказать своё несогласие в личном сообщении или в теме на форуме сайта - <b>Жалобы</b>. </li>\r\n    </ol>\r\n    <p><b>III. Общие рекомендации о советы. </b></p>\r\n    <ol>\r\n        <li>Не обращайте внимания на хулиганов. Не отвечайте им, даже если Вы считаете, что Вас оскорбили, не поддавайтесь на провокации. Достаточно сообщить администрации об оскорблении и виновные будут наказаны. </li>\r\n        <li>В том случае, если Вы считаете, что нарушены Правила Форума, постарайтесь сразу же сообщить об этом администрации Форума. </li>\r\n        <li>Старайтесь не использовать в сообщениях жаргон, т.к. некоторые пользователи могут не правильно его растолковать.</li>\r\n        <li>Постарайтесь не писать безосновательные утверждения, а так же сообщения типа «выкинь эту бяку, поставь хорошую вещь». Если это Ваше лично мнение, не забудьте сообщить об этом заранее – простого «ИМХО» (от англ. “imho”, что в переводе означает «по моему скромному мнению») будет достаточно. Помните, что после нескольких неаргументированных утверждений, пользователи просто перестанут Вам доверять. </li>\r\n        <li>Прежде чем создавать тему, убедитесь, что Вы создаете её в нужном Разделе Форума. Помните, что темы, не соответствующие тематике Раздела, будут либо удалены, либо перенесены в другой Раздел Форума. </li>\r\n        <li>Прочтите тему целиком! Посты в середине темы - \"А о чем это вы, а? \" или \"Так я не понял - откуда качать?\" запрещены. </li>\r\n        <li>Старайтесь не делать грамматических ошибок в сообщениях – это создаст негативное впечатление о вас.</li>\r\n    </ol>\r\n    <p><b>IV. Отношения между пользователями и администрацией.</b></p>\r\n    <ol>\r\n        <li>В своих действиях администрация форума руководствуется здравым смыслом и внутренними правилами управления форумом.</li>\r\n        <li>\r\n            Обсуждение действий администрации (администраторов и модераторов форума) категорически запрещается в любых форумах и темах, за исключением специализированного форума - <b>Жалобы</b>.<br>\r\n        </li>\r\n    </ol>\r\n    <p>Администрация оставляет за собой право изменять правила без уведомлением об этом пользователей форума. Все изменения и новации на форуме производятся с учетом мнений и интересов пользователей.</p>\r\n    <p align=\"right\"><b>С уважением, администрация сайта.</b></p>\r\n</div>";

/***/ },
/* 86 */
/***/ function(module, exports) {

module.exports = "<div align=\"center\">\r\n    &nbsp;\r\n    <table class=\"SquadList\">\r\n        <tbody>\r\n            <tr>\r\n                <th class=\"SquadFirst\">№</th>\r\n                <th class=\"SquadFirst\">Фото</th>\r\n                <th class=\"SquadFirst\">Имя</th>\r\n                <th class=\"SquadFirst\">Гражданство</th>\r\n                <th class=\"SquadFirst\">Аренда</th>\r\n                <th class=\"SquadFirst\">Дата рождения</th>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"playerPossition\" colspan=\"6\">Голкиперы:</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">1</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/24/88bd9693f8b41b25edff902642d34ac9d7c8ba6a.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Лорис Карриус&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Германия\" src=\"http://www.myliverpool.ru/Team/Germany.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Германия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">22.06.1993</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">13</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/87e90bac4a6cc490713aba58df7474d6f2cc9a23.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Алекс Маннингер&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Австрия\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Flag_of_Austria.svg/20px-Flag_of_Austria.svg.png\" title=\"Австрия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">04.06.1977</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">22</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/86b2c7ab6039e2b716a37168dbca51b2f3b2016f.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Симон Миньоле&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Бельгия\" src=\"http://www.myliverpool.ru/Team/Belgium-30.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Бельгия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">06.03.1988</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">34</td>\r\n                <td class=\"SquadPhoto\"><img alt=\"Adam Bogdan\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/Players/Squad/Adam_Bogdan.jpg\" style=\"height:90px\" title=\"Adam Bogdan\" /></td>\r\n                <td class=\"squadName\">Адам Богдан&nbsp;&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Венгрия\" src=\"http://www.myliverpool.ru/Team/Hungary.png\" title=\"Венгрия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &nbsp;&quot;Уиган&quot;&nbsp;</td>\r\n                <td class=\"PlayerDOB\">27.09.1987</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">39</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/19/f87e94c7b91170f1f172815a60f543be05cfb217.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Райан Фултон&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &quot;Честерфилд&quot;</td>\r\n                <td class=\"PlayerDOB\">23.05.1996</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">52</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcstage.com/symfony2/uploads/media/default/0001/10/85279f28ecf888652f0855e511bd9b2db117cf97.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Дэни Уорд&nbsp;&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Уэльс\" src=\"http://www.myliverpool.ru/Team/Wales.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Уэльс\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &nbsp;&quot;Хаддерсфилд Таун&quot;</td>\r\n                <td class=\"PlayerDOB\">22.06.1993</td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"playerPossition\" colspan=\"6\">Защитники:</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">2</td>\r\n                <td class=\"SquadPhoto\"><img alt=\"Nathaniel Clyne\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/Players/Squad/Nathaniel_Clyne.jpg\" style=\"height:90px\" title=\"Nathaniel Clyne\" /></td>\r\n                <td class=\"squadName\">Натаниэль Клайн&nbsp;&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">05.04.1991</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">3</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/26/01121a0b101ced203c7c7041656c18e3ae769d7b.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Мамаду Сако&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Франция\" src=\"http://www.myliverpool.ru/Team/France-30.png\" title=\"Франция\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">13.02.1990</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">6</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/9248f114ab7be3f8678205fb7b8c37e959b16bbf.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Деян Ловрен&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Хорватия\" src=\"http://abali.ru/wp-content/uploads/2011/09/croatia_round_icon_512.png\" style=\"width:30px\" title=\"Хорватия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">05.07.1989</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">12</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/26/5c3fd775b9f52d93c908ef7faa4d14366471ef0f.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джо Гомез&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">23.05.1997</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">17</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/26/6a78d3740fcbe2687784bb6bdd148714a9810089.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Рагнар Клаван&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Эстония\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Flag_of_Estonia.svg/20px-Flag_of_Estonia.svg.png\" title=\"Эстония\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">30.10.1985</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">18</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/3fb69ebb21a3cb6771eb7d0c1eacd487854edf2f.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Альберто Морено&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Испания\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Flag_of_Spain.svg/20px-Flag_of_Spain.svg.png\" title=\"Испания\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">05.07.1992</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">26</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcstage.com/symfony2/uploads/media/default/0001/10/67bb9344583806a1013fa564bce9032d87146529.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Тиагу Илори&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Португалия\" src=\"http://www.myliverpool.ru/Team/portugal.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Португалия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">26.02.1993</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">32</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/f0071a2b740266e8391950a0001e19ab2d7432bc.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Жоэль Матип&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Камерун\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Flag_of_Cameroon.svg/20px-Flag_of_Cameroon.svg.png\" title=\"Камерун\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">08.08.1991</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">38</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/24/0ced040215067709125ff8c13b7719cafd6c4576.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джон Флэнаган&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &nbsp;&quot;Бернли&quot;</td>\r\n                <td class=\"PlayerDOB\">01.01.1993</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">47</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/25f745066101943a9d126ec4095f24e327dbffcb.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Андре Уиздом&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &quot;Зальцбург&quot;</td>\r\n                <td class=\"PlayerDOB\">09.05.1993</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">51</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/eb1e9427f9248f306d2097c7bf94087f0f0f56a4.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Ллойд Джонс&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &nbsp;&quot;Суиндон Таун&quot;</td>\r\n                <td class=\"PlayerDOB\">07.10.1995</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">56</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/e308134162726dfe5868954125aaea53c21e30cd.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Коннор Рэндалл&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">21.10.1995</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">57</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/90a68dbca0710f112b79ea3c69ca57bdb76cb183.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джо Магуайр&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">18.01.1996</td>\r\n            </tr>\r\n            <!--tr class=\"squadEven\">\r\n            <td class=\"PlayerNum\">58</td>\r\n            <td class=\"squadName\">&nbsp;</td>\r\n            <td class=\"squadName\"><span style=\"color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\">Дэниел Клири&nbsp;</span></td>\r\n            <td class=\"countryName\"><img alt=\"Ирландия\" src=\"http://ncse.com/files/images/irish%20flag_0.thumbnail.png\" title=\"Ирландия\" /></td>\r\n            <td class=\"bplPlayer\">&nbsp;</td>\r\n            <td class=\"PlayerDOB\">09.03.1996</td>\r\n            </tr-->\r\n            <tr>\r\n                <td class=\"playerPossition\" colspan=\"6\">Полузащитники:</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">5</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/26/b0150d2a1e5ec953e6fda3f83bb16aaa1b0aded0.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джорджиньо Вейналдум&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Нидерланды\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Flag_of_the_Netherlands.svg/20px-Flag_of_the_Netherlands.svg.png\" title=\"Нидерланды\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">11.11.1990</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">7</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/fad573aa50c8cb36a6620018373f647d75a8c910.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джеймс Милнер&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">04.01.1986</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">10</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/63e88372ffcfacf66c2608cd48b32ef91ccb064d.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Филиппе Коутиньо&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Бразилия\" src=\"http://www.myliverpool.ru/Team/brazil.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Бразилия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">12.06.1992</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">14</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/43562c981f4a157cea535c2c0e96dd7f824f0b3c.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джордан Хендерсон&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">17.23.1990</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">16</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/b4a06b0b5b2e49adb97ad422b545c0c2343481b0.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Марко Груич&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Сербия\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Flag_of_Serbia.svg/20px-Flag_of_Serbia.svg.png\" title=\"Сербия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">13.04.1996</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">20</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/97aebf125e7fc0fd5ee2ff017856cf18c9c776ac.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Адам Лаллана&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">10.05.1988</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">21</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/b2200276a740480ca610e4c9b00f99f79dc292d9.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Лукас Лейва&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Бразилия\" src=\"http://www.myliverpool.ru/Team/brazil.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Бразилия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">09.01.1987</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">23</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcstage.com/symfony2/uploads/media/default/0001/10/4fda272e97430aa4abdea7a449c5df3c97c68f39.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Эмре Джан&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Германия\" src=\"http://www.myliverpool.ru/Team/Germany.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Германия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">12.01.1994</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">32</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/f91e6358f9737e3ee520a892ad74c9a48714bf0f.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Кэмерон Брэннаган&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">09.05.1996</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">35</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/d67d9e510017fa0f35553073b4472effbb7f7004.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Кевин Стюарт&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">07.09.1993</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">40</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/24/cca9fae7db7d093998770c99161742bedd4c17bc.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Райан Кент&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &quot;Барнсли&quot;</td>\r\n                <td class=\"PlayerDOB\">11.11.1996</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">41</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/67ddf6e407850f6d964cf2294e08f0e8e0c7b4bc.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джек Данн&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">19.11.1994</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">49</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/647621fc6db3bd0c98f4aa3599a80af45ea69a4e.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Джордан Уильямс&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Уэльс\" src=\"http://www.myliverpool.ru/Team/Wales.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Уэльс\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">06.11.1995</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">50</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/70fe631537b8d346aa0f8299b84bcf85073a6066.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Лазар Маркович&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Сербия\" src=\"http://www.myliverpool.ru/Team/serbia.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Сербия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &quot;Спортинг&quot;</td>\r\n                <td class=\"PlayerDOB\">02.03.1994</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">54</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/26/d9f75915be0bcaad011e588a59f503bd1ad6e91d.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Шейи Оджо</td>\r\n                <td class=\"countryName\">&nbsp;<img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">19.06.1997</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">68</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/a7f3ec8f87e0b32770837c930138b5bcdb121b4f.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Педро Чиривелла&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Испания\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Flag_of_Spain.svg/20px-Flag_of_Spain.svg.png\" title=\"Испания\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">23.05.1997</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">&nbsp;</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"https://pp.vk.me/c637117/v637117668/ad2c/JR0ncg4qDIM.jpg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Аллан де Соуза&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Бразилия\" src=\"http://www.myliverpool.ru/Team/brazil.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Бразилия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &nbsp;&quot;Герта&quot;</td>\r\n                <td class=\"PlayerDOB\">03.03.1997</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">&nbsp;</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/97613797e93937bd617a3e8d2303450ba1c14c40.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Харри Уилсон&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Уэльс\" src=\"http://www.myliverpool.ru/Team/Wales.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Уэльс\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">22.03.1997</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">&nbsp;</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/5547de4201197e0301ef4b2ae89d3a7f00fc5261.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Бобби Адеканье&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Нигерия\" src=\"http://cdn.modernghana.com/images/content/drapeau_nigeria1300x150.jpg\" style=\"width:30px\" title=\"Нигерия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">16.02.1999</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">&nbsp;</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/33a666bd19cc17d0d99e7d441782ba94cf18bd36.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Трент Александр-Арнольд&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">07.10.1998</td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"playerPossition\" colspan=\"6\">Нападающие:</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">11</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/c01e344a5c6e6ff629d86142efa1fa5c8b6c1104.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Роберто Фирмино&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Бразилия\" src=\"http://www.myliverpool.ru/Team/brazil.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Бразилия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">02.10.1991</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">15</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/028b8e230d9de467d9251e3e582633344c1dd5b1.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Дэниел Старридж&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">01.09.1989</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">19</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/misc/0001/26/a9b8791397ba21c49fa02106f5ae2c9ca4c1d28e.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Садио Мане&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Сенегал\" src=\"http://www.worldstatesmen.org/sn.gif\" style=\"width:30px\" title=\"Сенегал\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">10.04.1992</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">27</td>\r\n                <td class=\"SquadPhoto\"><img alt=\"Divock Origi\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/Players/Squad/Divock_Origi.jpg\" style=\"height:90px\" title=\"Divock Origi\" /></td>\r\n                <td class=\"squadName\">Дивок Ориги&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Бельгия\" src=\"http://www.myliverpool.ru/Team/Belgium-30.png\" style=\"cursor: default; color: rgb(51, 51, 51); font-family: sans-serif, Arial, Verdana; font-size: 13px; line-height: 20.8px; background-color: rgb(255, 255, 255);\" title=\"Бельгия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">18.04.1995</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">28</td>\r\n                <td class=\"SquadPhoto\"><img alt=\"Danny Ings\" class=\"SquadPhoto\" src=\"http://www.myliverpool.ru/images/Players/Squad/Danny_Ings.jpg\" style=\"height:90px\" title=\"Danny Ings\" /></td>\r\n                <td class=\"squadName\">Дэнни Ингс&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Англия\" src=\"http://www.myliverpool.ru/Team/England.png\" title=\"Англия\" /></td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">23.07.1992</td>\r\n            </tr>\r\n            <tr class=\"squadEven\">\r\n                <td class=\"PlayerNum\">&nbsp;</td>\r\n                <td class=\"SquadPhoto\">&nbsp;</td>\r\n                <td class=\"squadName\">&nbsp;</td>\r\n                <td class=\"countryName\">&nbsp;</td>\r\n                <td class=\"bplPlayer\">&nbsp;</td>\r\n                <td class=\"PlayerDOB\">&nbsp;</td>\r\n            </tr>\r\n            <tr class=\"squadOdd\">\r\n                <td class=\"PlayerNum\">&nbsp;</td>\r\n                <td class=\"SquadPhoto\"><img class=\"SquadPhoto\" src=\"http://assets.lfcimages.com/v2/uploads/media/default/0001/19/1ff0ad889717c7243970122389a8666698eeffa5.jpeg\" style=\"height:90px\" title=\"\" /></td>\r\n                <td class=\"squadName\">Тайво Авонийи&nbsp;</td>\r\n                <td class=\"countryName\"><img alt=\"Нигерия\" src=\"http://cdn.modernghana.com/images/content/drapeau_nigeria1300x150.jpg\" style=\"width:30px\" title=\"Нигерия\" /></td>\r\n                <td class=\"bplPlayer\">Отдан в аренду &quot;НЕК&quot;</td>\r\n                <td class=\"PlayerDOB\">12.08.1997</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>";

/***/ },
/* 87 */
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <div class=\"col-xs-10 col-sm-10\">\r\n            <label for=\"upload-image\"\r\n                   class=\"btn btn-info\">Загрузить изображениЯ</label>\r\n            <input type=\"file\"\r\n                   class=\"hidden\"\r\n                   accept=\"image/*\"\r\n                   [multiple]=\"isMultiple\"\r\n                   (change)=\"onUploadImage($event)\"\r\n                   id=\"upload-image\" />\r\n        <div *ngFor=\"let file of uploadedFiles\">\r\n            <img [src]=\"file\" alt=\"\" />\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 88 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <img class=\"center-block\" [src]=\"item.path\" [alt]=\"item.path\"/>\r\n    <br />\r\n    <input class=\"col-xs-offset-1 col-xs-10\" readonly value=\"{{item.path}}\" />\r\n</div>";

/***/ },
/* 89 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <a role=\"button\" *ngIf=\"defaultPath != path\" (click)=\"goUp()\">Вернуться назад</a>\r\n    <a class=\"btn btn-info\" [routerLink]=\"['/image/add']\">Добавить</a>\r\n    <a role=\"button\" class=\"pull-right\" *ngIf=\"selectedItem\" (click)=\"removeSelection()\">Отменить выбор</a>\r\n    <image-detail *ngIf=\"selectedItem\" [item]=\"selectedItem\"></image-detail>\r\n    <div *ngFor=\"let file of items\">\r\n        <a (click)=\"updateFolder(file.path)\">\r\n            <div role=\"button\" *ngIf=\"file.isFolder\" class=\"col-xs-2 bg-danger\" style=\"height: 50px; margin: 10px\" [textContent]=\"file.name\"></div>\r\n        </a>\r\n        <a>\r\n            <img role=\"button\" class=\"col-xs-2\" *ngIf=\"!file.isFolder\" [src]=\"file.path\" style=\"height: 50px; margin: 10px\" (click)=\"showDetails(file)\" [alt]=\"file.path\"/>\r\n        </a>\r\n    </div>\r\n</div>";

/***/ },
/* 90 */
/***/ function(module, exports) {

module.exports = "<p><img alt=\"\" src=\"http://www.myliverpool.ru/images/bplfacapone1.png\" style=\"height: 90px;\" /></p>\r\n\r\n<hr />\r\n<table class=\"table table-striped table-condensed\" align=\"center\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">\r\n    <tbody>\r\n        <tr>\r\n            <td>П1</td>\r\n            <td>18.07.16</td>\r\n            <td>Транмир Роверс</td>\r\n            <td style=\"width: 38px;\">0 : 1</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Прентон Парк</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/tranmer_rovers_liverpul/2016-07-08-17797\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-07-09-17798\">Фото</a> <a href=\"http://vk.com/video-108388618_456239520\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П2</td>\r\n            <td>13.07.16</td>\r\n            <td>Флитвуд Таун</td>\r\n            <td>0 : 5</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Хайбери</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/flitvud_taun_liverpul/2016-07-13-17822\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-07-14-17824\">Фото</a> <a href=\"http://vk.com/video-76470207_456244602\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П3</td>\r\n            <td>17.07.16</td>\r\n            <td>Уиган Атлетик</td>\r\n            <td>0 : 2</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Ди-дабл-ю</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/uigan_atletik_liverpul/2016-07-17-17842\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-07-18-17844\">Фото</a> <a href=\"http://vk.com/video-28639294_456242179\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П4</td>\r\n            <td>20.07.16</td>\r\n            <td>Хаддерсфилд Таун</td>\r\n            <td>0 : 2</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Гэлфарм</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/myliverpool_ru/2016-07-20-17862\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-07-20-17863\">Фото</a> <a href=\"https://vk.com/video-76470207_456244744\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П5</td>\r\n            <td>28.07.16</td>\r\n            <td>Челси</td>\r\n            <td>1 : 0</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Пассадена</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_chelsi/2016-07-27-17897\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-07-28-17901\">Фото</a> <a href=\"https://vk.com/video-104770729_456239578\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П6</td>\r\n            <td>31.07.16</td>\r\n            <td>Милан</td>\r\n            <td>0 : 2</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Леви</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_milan/2016-07-31-17908\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-07-31-17910\">Фото</a> <a href=\"https://vk.com/video-28639294_456242262\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П7</td>\r\n            <td>02.08.16</td>\r\n            <td>Рома</td>\r\n            <td>2 : 1</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Стадион Буша</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_roma/2016-08-01-17915\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-08-02-17916\">Фото</a> <a href=\"https://vk.com/video-120962911_456241005\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П8</td>\r\n            <td>06.08.16</td>\r\n            <td>Барселона</td>\r\n            <td>0 : 4</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Уэмбли</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/barselona_liverpul/2016-08-06-17933\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-08-06-17934\">Фото</a> <a href=\"https://vk.com/video-28639294_456242350\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>П9</td>\r\n            <td>07.08.16</td>\r\n            <td>Майнц</td>\r\n            <td>4 : 0</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Кофас Арена</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/majnc_liverpul/2016-08-07-17937\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_majnc_4_0_liverpul/2016-08-07-17938\">Фото</a> <a href=\"https://vk.com/video-76470207_456245195\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ1</td>\r\n            <td>14.08.16</td>\r\n            <td>Арсенал</td>\r\n            <td>3 : 4</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Эмирейтс</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/arsenal_liverpul/2016-08-14-17964\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-08-14-17969\">Фото</a> <a href=\"https://vk.com/video-28639294_456242546\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ2</td>\r\n            <td>20.08.16</td>\r\n            <td>Бернли</td>\r\n            <td>2 : 0</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Терф Мур</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/bernli_liverpul/2016-08-20-18006\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-08-20-18007\">Фото</a> <a href=\"https://vk.com/video-28639294_456242678\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>КЛ</td>\r\n            <td>23.08.16</td>\r\n            <td>Бертон Альбион</td>\r\n            <td>0 : 5</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Пирелли Стэдиум</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/berton_albion_liverpul/2016-08-23-18022\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-08-23-18023\">Фото</a> <a href=\"https://vk.com/video-28639294_456242789\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ3</td>\r\n            <td>27.08.16</td>\r\n            <td>Тоттенхэм</td>\r\n            <td>1 : 1</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Уайт Харт Лейн</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/tottenkhehm_liverpul/2016-08-27-18041\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-08-27-18043\">Фото</a> <a href=\"https://vk.com/video359017891_456239493\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ4</td>\r\n            <td>10.09.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>4 : 1</td>\r\n            <td>Лестер</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_lester_siti/2016-09-10-18103\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-09-10-18104\">Фото</a> <a href=\"https://vk.com/video-74938883_456239476\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ5</td>\r\n            <td>16.09.16</td>\r\n            <td>Челси</td>\r\n            <td>1 : 2</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Стэмфорд Бридж</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/chelsi_liverpul/2016-09-16-18126\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-09-17-18127\">Фото</a> <a href=\"https://vk.com/video-28639294_456243399\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>КЛ</td>\r\n            <td>20.09.16</td>\r\n            <td>Дерби</td>\r\n            <td>0 : 3</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Прайд Парк</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/derbi_kaunti_liverpul/2016-09-20-18142\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-09-20-18143\">Фото</a> <a href=\"https://vk.com/video-108388618_456239700\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ6</td>\r\n            <td>24.09.16</td>\r\n            <td><span>Ливерпуль</span></td>\r\n            <td>5 : 1</td>\r\n            <td>Халл Сити</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_khall_siti/2016-09-24-18159\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-09-24-18160\">Фото</a> <a href=\"https://ok.ru/video/96957500017\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ7</td>\r\n            <td>01.10.16</td>\r\n            <td>Суонси</td>\r\n            <td>1 : 2</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Либерти</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/suonsi_liverpul/2016-10-01-18183\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-10-01-18185\">Фото</a> <a href=\"https://vk.com/video-22893032_456240266\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ8</td>\r\n            <td>17.10.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>0 : 0</td>\r\n            <td><span>Манчестер Юнайтед</span></td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_manchester_junajted/2016-10-17-18225\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-10-18-18226\">Фото</a> <a href=\"https://vk.com/video-128973102_456239954\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ9</td>\r\n            <td>22.10.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>2 : 1</td>\r\n            <td>Вест Бромвич Альбион</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_vest_bromvich_albion/2016-10-22-18238\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-10-22-18239\">Фото</a> <a href=\"https://vk.com/video-128973102_456240157\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>КЛ</td>\r\n            <td>25.10.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>2 : 1</td>\r\n            <td>Тоттенхэм</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_tottenkhehm_khotspur/2016-10-25-18251\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-10-25-18252\">Фото</a> <a href=\"https://vk.com/video-96235813_456239635\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ10</td>\r\n            <td>29.10.16</td>\r\n            <td>Кристал Пэлас</td>\r\n            <td>2 : 4</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Селхерст Парк</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/kristal_pehlas_liverpul/2016-10-29-18277\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-10-29-18278\">Фото</a> <a href=\"https://youtu.be/fNxtFgivvY4\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ11</td>\r\n            <td>06.11.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>6 : 1</td>\r\n            <td><span>Уотфорд</span></td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_0_0_uotford/2016-11-06-18316\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-11-06-18318\">Фото</a> <a href=\"https://www.youtube.com/watch?v=WVSRNjcwd4U\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ12</td>\r\n            <td>19.11.16</td>\r\n            <td>Саутгемптон</td>\r\n            <td>0 : 0</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Сент-Мэрис</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/sautgempton_liverpul/2016-11-19-18379\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha_sautgempton_vs_liverpul/2016-11-19-18380\">Фото</a> <a href=\"https://vk.com/video-132522472_456239041\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ13</td>\r\n            <td>26.11.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>2 : 0</td>\r\n            <td>Сандерленд</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_sanderlend/2016-11-26-18401\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-11-26-18402\">Фото</a> <a href=\"https://vk.com/video-128021824_456239280\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>КЛ1/4</td>\r\n            <td>29.11.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>2 : 0</td>\r\n            <td>Лидс Юнайтед</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_lids_junajted/2016-11-30-18416\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-11-30-18417\">Фото</a> <a href=\"https://vk.com/video-28639294_456245200\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ14</td>\r\n            <td>04.12.16</td>\r\n            <td>Борнмут</td>\r\n            <td>4 : 3</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Дин Корт</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/bornmut_4_3_liverpul/2016-12-04-18432\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh/2016-12-04-18433\">Фото</a> <a href=\"https://vk.com/video-1029342_456240282\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ15</td>\r\n            <td>11.12.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>2 : 2</td>\r\n            <td>Вест Хэм</td>\r\n            <td>Энфилд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/liverpul_vest_khehm/2016-12-11-18461\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-12-11-18462\">Фото</a> <a href=\"https://vk.com/video-122493044_456240479\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ16</td>\r\n            <td>14.12.16</td>\r\n            <td>Миддлсбро</td>\r\n            <td>0 : 3</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Риверсайд</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/midlsbro_liverpul/2016-12-15-18472\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/foto_midlsbro_liverpul/2016-12-15-18473\">Фото</a> <a href=\"https://vk.com/video-117835363_456240480\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ17</td>\r\n            <td>19.12.16</td>\r\n            <td>Эвертон</td>\r\n            <td>0 : 1</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Гудиссон</td>\r\n            <td><a href=\"http://www.myliverpool.ru/news/ehverton_liverpul/2016-12-20-18488\">Отчет</a> <a href=\"http://www.myliverpool.ru/news/fotoreportazh_matcha/2016-12-20-18489\">Фото</a> <a href=\"https://vk.com/video-125580692_456239341\">Видео</a></td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ18</td>\r\n            <td>27.12.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>- : -</td>\r\n            <td>Сток Сити</td>\r\n            <td>Энфилд</td>\r\n            <td>20:15 МСК</td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ19</td>\r\n            <td>31.12.16</td>\r\n            <td>Ливерпуль</td>\r\n            <td>- : -</td>\r\n            <td>Манчестер Сити</td>\r\n            <td>Энфилд</td>\r\n            <td>20:30 МСК</td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ20</td>\r\n            <td>02.01.17</td>\r\n            <td>Сандерленд</td>\r\n            <td>- : -</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Стэдиум Оф Лайт</td>\r\n            <td>18:00 МСК</td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ21</td>\r\n            <td>15.01.17</td>\r\n            <td>Манчестер Юнайтед</td>\r\n            <td>- : -</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Олд Траффорд</td>\r\n            <td>19:00 МСК</td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ22</td>\r\n            <td>21.01.17</td>\r\n            <td>Ливерпуль</td>\r\n            <td>- : -</td>\r\n            <td>Суонси</td>\r\n            <td>Энфилд</td>\r\n            <td>22:45 МСК</td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ23</td>\r\n            <td>31.01.17</td>\r\n            <td>Ливерпуль</td>\r\n            <td>- : -</td>\r\n            <td>Челси</td>\r\n            <td>Энфилд</td>\r\n            <td>23:00 МСК</td>\r\n        </tr>\r\n        <tr>\r\n            <td>АПЛ24</td>\r\n            <td>04.02.17</td>\r\n            <td>Халл Сити</td>\r\n            <td>- : -</td>\r\n            <td>Ливерпуль</td>\r\n            <td>Кингстон</td>\r\n            <td>18:00 МСК</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<div style=\"padding: 20px;\">\r\n    <form action=\"../\">\r\n        <select onchange=\"window.open(this.options[this.selectedIndex].value, '_top')\">\r\n            <option selected=\"selected\" value=\"http://www.myliverpool.ru/index/kalendar_sezona_2016_2017/0-263\">Сезон 2016/17</option>\r\n            <option value=\"http://www.myliverpool.ru/index/kalendar_igry_2015_16/0-262\">Сезон 2015/16</option>\r\n            <option value=\"http://www.myliverpool.ru/index/kalendar_igr_2014_15/0-229\">Сезон 2014/15</option>\r\n            <option value=\"http://www.myliverpool.ru/index/kalendar_igr/0-56\">Сезон 2013/14</option>\r\n        </select>\r\n    </form>\r\n</div>\r\n";

/***/ },
/* 91 */
/***/ function(module, exports) {

module.exports = "<form class=\"form-horizontal\" name=\"editForm\" role=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(editForm.value)\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-md-2\">Cоперник</label>\r\n            <div class=\"col-md-10\">\r\n                <!--<autocomplete ng-model=\"vm.item.clubName\" name=\"clubName\" attr-placeholder=\"Введите клуб...\" click-activation=\"true\" data=\"vm.clubs\"\r\n                                  on-type=\"vm.updateClubs\" validation=\"max_len:30|required\"></autocomplete>-->\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Категория:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <select class=\"form-control\" name=\"categoryId\" ng-model=\"vm.item.typeId\" ng-options=\"type.id as type.name for type in vm.types\" validation=\"required\"></select>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <div class=\"checkbox\">\r\n                    <label class=\"control-label\">\r\n                        <input class=\"checkbox\" name=\"onTop\" formControlName=\"isHome\" type=\"checkbox\" /> Дома <!--todo add switcher--> \r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-md-2 control-label\">Дата</label>\r\n            <div class=\"col-md-5\">\r\n                <div class=\"input-group\">\r\n                    <!--<input type=\"text\" class=\"form-control\" validation=\"required\" name=\"date\"\r\n                           ng-readonly=\"true\" show-button-bar=\"false\"\r\n                           uib-datepicker-popup=\"dd/MMMM/yyyy\" ng-model=\"vm.item.date\"\r\n                           is-open=\"vm.status.opened\" datepicker-options=\"vm.dateOptions\" close-text=\"Закрыть\"\r\n                           alt-input-formats=\"altInputFormats\" ng-click=\"vm.open()\">-->\r\n                    <span class=\"input-group-btn va-top\">\r\n                        <button type=\"button\" class=\"btn btn-default\" ng-click=\"vm.open()\"><i class=\"glyphicon glyphicon-calendar\"></i></button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <div class=\"input-group\">\r\n                    <!--<div uib-timepicker ng-model=\"vm.item.time\" ng-change=\"vm.timeChanged()\"\r\n                         hour-step=\"1\" minute-step=\"1\" show-meridian=\"false\" show-spinners=\"false\" ng-disabled=\"!vm.item.date\"></div>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-offset-2 col-md-10\">\r\n                <button type=\"submit\" [disabled]=\"!editForm.valid\" class=\"btn btn-default\">Сохранить</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n";

/***/ },
/* 92 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <div class=\"btn-group\">\r\n        <form class=\"form-inline btn-block\">\r\n            <!--<div class=\"form-group\">\r\n                <select class=\"form-control\"\r\n                        ng-model=\"vm.typeId\"\r\n                        ng-options=\"type.id as type.name for type in vm.types\" ng-change=\"vm.changeTypeId()\"></select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control\" ng-model=\"vm.filterText\" ng-model-options=\"{debounce: 1000}\" ng-change=\"vm.filterByText()\" placeholder=\"Поиск в тексте пожеланий\" /> <!-todo magic number->\r\n            </div>-->\r\n            <button class=\"btn btn-success\" type=\"button\" [routerLink]=\"['/match', 0, 'edit' ]\">Добавить</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"top20\" *ngFor=\"let item of items\">\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-heading\">\r\n                <h3 class=\"panel-title\">\r\n                    <a ui-sref=\"clubEdit({id: item.id})\"><span [textContent]=\"item.name\"></span></a>\r\n                    <span class=\"col-xs-1 col-sm-1 pull-right\">\r\n                        <a ng-click=\"vm.delete($index)\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n                    </span>\r\n                </h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n                <div [textContent]=\"item.englishName\"></div>\r\n            </div>\r\n            <div class=\"panel-footer\">\r\n                <img src=\"{{item.logo}}\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"pagination\">\r\n    <!--<uib-pagination ng-show=\"vm.totalItems > vm.itemPerPage\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.goToPage()\"></uib-pagination>-->\r\n</div>";

/***/ },
/* 93 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-xs-offset-{{deep}} col-sm-offset-{{deep}} comment container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-9 col-sm-9\">\r\n            <a [routerLink]=\"['/user', item.authorId]\" [textContent]=\"item.authorUserName\"></a>\r\n            <span class=\"small\" [textContent]=\"item.additionTime | date:'medium'\"></span>\r\n        </div>\r\n        <div class=\"col-xs-3 col-sm-3\">\r\n            <span class=\"pull-right\">\r\n                    <a *ngIf=\"roles.isModerator || roles.isSelf(item.authorId)\" (click)=\"showEditModal()\"><span class=\"glyphicon glyphicon-pencil\"> </span></a>\r\n                    <a *ngIf=\"roles.isModerator\" (click)=\"delete()\"><span class=\"glyphicon glyphicon-trash\"> </span></a>\r\n                </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-2 col-sm-2\">\r\n            <img class=\"avatar-medium\" [src]=\"item.photo\" [alt]=\"item.authorUserName\"/>\r\n        </div>\r\n        <div class=\"col-xs-10 col-sm-10\">\r\n            <p [textContent]=\"item.message\"></p>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"item.answer\">\r\n        <div class=\"col-xs-3 col-sm-3\">Ответ:</div>\r\n        <div class=\"col-xs-9 col-sm-9\">\r\n            <i [textContent]=\"item.answer\"></i>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xs-12 col-sm-12\" *ngIf=\"!roles.isSelf(item.authorId) && canCommentary\">\r\n        <a (click)=\"showAddCommentModal()\">Ответить</a>\r\n    </div>\r\n</div>\r\n<div *ngFor=\"let child of item.children\">\r\n    <materialComment-detail [item]=\"child\" [deep]=\"deep > 6 ? 7 : deep+1\" [materialId]=\"materialId\" [canCommentary]=\"canCommentary\" [parent]=\"item\"></materialComment-detail>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #addCommentModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Добавить комментарий</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <textarea [formControl]=\"commentForm.controls['message']\"></textarea>\r\n            </div>    \r\n            <div class=\"modal-footer\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"addComment()\">Добавить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #editCommentModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Редактировать комментарий</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div>\r\n                    <textarea [formControl]=\"commentForm.controls['message']\"></textarea>\r\n                </div>\r\n                <div *ngIf=\"roles.isEditor\">\r\n                    <textarea [formControl]=\"commentForm.controls['answer']\"></textarea>\r\n                </div>\r\n            </div>    \r\n            <div class=\"modal-footer\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"edit()\">Обновить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #deleteModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Удалить?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"delete()\">Удалить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 94 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <!--div class=\"btn-group\">\r\n        <form class=\"form-inline btn-block\">\r\n            <div class=\"form-group\">\r\n                <select class=\"form-control\"\r\n                        ng-model=\"vm.typeId\"\r\n                        ng-options=\"type.id as type.name for type in vm.types\" ng-change=\"vm.changeTypeId()\"></select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control\" ng-model=\"vm.filterText\" ng-model-options=\"{debounce: 1000}\" ng-change=\"vm.filterByText()\" placeholder=\"Поиск в тексте пожеланий\" />\r\n            </div>\r\n            <button class=\"btn btn-success\" ui-sref=\"wishEdit()\">Добавить</button>\r\n        </form>\r\n    </div-->\r\n    <div class=\"top20\" *ngFor=\"let comment of items; let i = index;\">\r\n        <div class=\"panel\" ng-class=\"\">\r\n            <div class=\"panel-heading panel-default\">\r\n                <h3 class=\"panel-title\">\r\n                    <a [routerLink]=\"['/user', comment.authorId]\"><span [textContent]=\"comment.authorUserName\"></span></a>\r\n                    <span class=\"col-xs-1 col-sm-1 pull-right\" *ngIf=\"roles.isModerator\">\r\n                        <a [hidden]=\"comment.isVerified\" (click)=\"verify(i)\"><span class=\"glyphicon glyphicon-ok\"></span></a>\r\n                        <a (click)=\"showDeleteModal(i)\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n                    </span>\r\n                </h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n                <div [textContent]=\"comment.message\"></div>\r\n            </div>\r\n            <div class=\"panel-footer\">\r\n                <div [textContent]=\"comment.additionTime | date:'medium'\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"pagination\">\r\n    <pagination *ngIf=\"items\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #deleteModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Удалить?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"delete()\">Удалить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 95 */
/***/ function(module, exports) {

module.exports = "<div>Комментарии: <span [textContent]=\"totalItems\"></span></div>\r\n\r\n<div class=\"\" *ngFor=\"let comment of items\">\r\n    <materialComment-detail [item]=\"comment\" [deep]=\"0\" [materialId]=\"materialId\" [canCommentary]=\"canCommentary\"></materialComment-detail>\r\n</div>\r\n\r\n<form class=\"form-horizontal\" role=\"form\" [formGroup]=\"commentForm\" (ngSubmit)=\"onSubmit(commentForm.value)\">\r\n    <div class=\"col-md-12\" *ngIf=\"canCommentary && roles.isLogined\">\r\n        <div class=\"col-md-12\">\r\n            <textarea mark-it-up class=\"col-md-offset-2 col-md-8\" rows=\"6\" name=\"message\" formControlName=\"message\"></textarea>\r\n        </div>\r\n        <div class=\"\">\r\n            <button class=\"btn btn-primary center-block\" [disabled]=\"!commentForm.valid\" type=\"submit\">Добавить</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"pagination\">\r\n    <pagination *ngIf=\"items && totalItems > itemsPerPage\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n</div>";

/***/ },
/* 96 */
/***/ function(module, exports) {

module.exports = "<div class=\"top20\">\r\n    <form class=\"form-horizontal\" name=\"editForm\" role=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Название</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"title\" formControlName=\"name\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\">Описание</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <textarea mark-it-up class=\"form-control\" name=\"brief\" rows=\"4\" formControlName=\"description\"> </textarea>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <input type=\"submit\" [disabled]=\"!editForm.valid\" value=\"Отправить\" class=\"btn btn-default\" />\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n";

/***/ },
/* 97 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <a *ngIf=\"roles.isEditor\" [routerLink]=\"['/newsCategory', 0, 'edit']\">Создать категорию</a>\r\n    <ul *ngFor=\"let category of items; let i = index;\">\r\n        <li *ngIf=\"roles.isEditor || category.itemsCount != 0\">\r\n            <a [routerLink]=\"['/news/list', 1, category.id ]\">\r\n                <span [textContent]=\"category.name\"></span> [<span [textContent]=\"category.itemsCount\"></span>]\r\n            </a>\r\n            <span *ngIf=\"roles.isEditor\">\r\n                <a [routerLink]=\"['/newsCategory', category.id, 'edit']\"> <span class=\"glyphicon glyphicon-pencil\"></span></a>\r\n                <a *ngIf=\"category.itemsCount == 0\" (click)=\"delete(i)\"> <span class=\"glyphicon glyphicon-trash\"></span></a>\r\n            </span>\r\n        </li>\r\n    </ul>\r\n</div>";

/***/ },
/* 98 */
/***/ function(module, exports) {

module.exports = "<div class=\"\" *ngIf=\"item\">\r\n    <div class=\"alert-danger flex-vertical-center\">\r\n        <h3 class=\"col-xs-12 col-sm-12\">\r\n            <span class=\"col-xs-9 col-sm-9\" [textContent]=\"item.title\"></span>\r\n            <span class=\"col-xs-3 col-sm-3 pull-right\" *ngIf=\"roles.isEditor || roles.isSelf(item.userId)\">\r\n                <a [hidden]=\"!item.pending || !roles.isEditor\" (click)=\"showActivateModal(i)\"><span class=\"glyphicon glyphicon-ok\"></span></a>\r\n                <a [routerLink]=\"['/news', item.id, 'edit']\"><span class=\"glyphicon glyphicon-pencil\"></span></a>\r\n                <a (click)=\"showDeleteModal(i)\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n            </span>\r\n        </h3>\r\n    </div>\r\n    <div class=\"\">\r\n        <article [innerHTML]=\"item.message\"></article>\r\n        <div class=\"alert-warning\">\r\n            <ul class=\"list-inline\">\r\n                <li><label>Просмотры:</label> <span [textContent]=\"item.reads\"></span></li>\r\n                <li><label>Источник:</label> <span [textContent]=\"item.source\"></span></li>\r\n                <li><label>Дата добавления:</label> <span [textContent]=\"item.additionTime | date:'medium'\"></span></li>\r\n                <li><label>Категория:</label> <a [routerLink]=\"['/news/list', 1, item.categoryId ]\"> <span [textContent]=\"item.categoryName\"></span> </a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <comments [materialId]=\"item.id\" [canCommentary]=\"item.canCommentary\"></comments>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #activateModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Активировать?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"activate()\">Активировать</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #deleteModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Удалить?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"delete()\">Удалить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 99 */
/***/ function(module, exports) {

module.exports = "<div class=\"top20\">\r\n    <form class=\"form-horizontal\" name=\"editForm\" role=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(editForm.value)\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Категория:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <select class=\"form-control\" name=\"categoryId\" formControlName=\"categoryId\">\r\n                    <option *ngFor=\"let category of categories\" [value]=\"category.id\" [textContent]=\"category.name\"></option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Название:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"title\" formControlName=\"title\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Краткое описание:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <!--<textarea class=\"form-control\" name=\"brief\" rows=\"4\" formControlName=\"brief\"> </textarea>-->\r\n                <tinymce [initVal]=\"this.item.brief\" formControlName=\"brief\"></tinymce>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Текст новости:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <!--<textarea class=\"form-control\" tinymce name=\"message\" rows=\"6\" formControlName=\"message\"> </textarea>-->\r\n                <tinymce [initVal]=\"this.item.message\" formControlName=\"message\"></tinymce>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Источник:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"source\" formControlName=\"source\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label col-xs-2 col-sm-2\"> Главное фото:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <input class=\"form-control\" name=\"photoPath\" formControlName=\"photo\" />\r\n            </div>\r\n            <image-addition [isMultiple]=\"false\" (loadedImage)=\"updateImage($event)\"></image-addition>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <div class=\"checkbox\">\r\n                    <label class=\"control-label\">\r\n                        <input class=\"checkbox\" name=\"canCommentary\" formControlName=\"canCommentary\" type=\"checkbox\" checked /> Разрешить комментарии\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <div class=\"checkbox\">\r\n                    <label class=\"control-label\">\r\n                        <input class=\"checkbox\" name=\"onTop\" formControlName=\"onTop\" type=\"checkbox\" /> Наверху\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"roles.isEditor\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <div class=\"checkbox\">\r\n                    <label class=\"control-label\">\r\n                        <input class=\"checkbox\" name=\"pending\" formControlName=\"pending\" type=\"checkbox\" /> Отложена\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <div class=\"col-xs-offset-2 col-sm-offset-2 col-xs-10 col-sm-10\">\r\n                <button type=\"button\" (click)=\"cli()\" class=\"btn btn-default\">Сохрани342143ть</button>\r\n                <button type=\"submit\" [disabled]=\"!editForm.valid\" class=\"btn btn-default\">Сохранить</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n";

/***/ },
/* 100 */
/***/ function(module, exports) {

module.exports = "<div class=\"container-fluid\">\r\n    <div>\r\n        <!--ng-if=\"vm.page > 0\">-->\r\n        <!--form class=\"form-inline\">\r\n        <div class=\"form-group\">\r\n            <select class=\"form-control\"\r\n                    ng-model=\"vm.categoryId\"\r\n                    ng-options=\"category.id as category.name for category in vm.categories\" ng-change=\"vm.changeCategoryId()\"></select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n        <input class=\"form-control\" ng-model=\"vm.userName\" ng-model-options=\"{debounce: 1000}\" ng-change=\"vm.filterByUserName()\" placeholder=\"Логин\"/>\r\n        </div>\r\n        </form-->\r\n    </div>\r\n    <div class=\"row\" *ngFor=\"let item of items; let i = index;\">\r\n        <div class=\"\" *ngIf=\"!item.pending || roles.isEditor\">\r\n            <div class=\"flex-vertical-center\">\r\n                <a [routerLink]=\"['/news', item.id]\" class=\"col-xs-9 col-sm-9\"><h4 [textContent]=\"item.title\"></h4></a>\r\n                <span class=\"col-xs-3 col-sm-3 pull-right\" *ngIf=\"roles.isEditor || roles.isSelf(item.userId)\">\r\n                    <a [hidden]=\"!item.pending || !roles.isEditor\" (click)=\"showActivateModal(i)\"><span class=\"glyphicon glyphicon-ok\"></span></a>\r\n                    <a [routerLink]=\"['/news', item.id, 'edit']\"><span class=\"glyphicon glyphicon-pencil\"></span></a>\r\n                    <a (click)=\"showDeleteModal(i)\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n                </span>\r\n            </div>\r\n            <div class=\"\">\r\n                <img class=\"img-thumbnail news-mini center-block\" alt=\"\" [src]=\"item.photoPath\" />\r\n            </div>\r\n            <div class=\"\">\r\n                <i> <span [innerHTML]=\"item.brief\"></span></i>\r\n            </div>\r\n            <div class=\"col-xs-12 col-sm-12\">\r\n                <ul class=\"list-inline small small-offset\">\r\n                    <li class=\"\">Категория:</li>\r\n                    <li class=\"\"><a [routerLink]=\"['/news/list', page]\" [queryParams]=\"{categoryId: item.categoryId, userName: userName}\" [textContent]=\"item.categoryName\"></a></li>\r\n                    <li class=\"\">|</li>\r\n                    <li class=\"\">Время добавления:</li> \r\n                    <li class=\"\" [textContent]=\"item.additionTime | date:'medium'\"></li>\r\n                    <li class=\"\">|</li>\r\n                    <li class=\"\">Просмотры</li>\r\n                    <li class=\"\" [textContent]=\"item.reads\"></li>\r\n                    <li class=\"\">|</li>\r\n                    <li class=\"\">Автор:</li>\r\n                    <li class=\"\"><a [routerLink]=\"['/user', item.userId ]\" [textContent]=\"item.userName\"></a></li>\r\n                    <li *ngIf=\"item.canCommentary\" class=\"\">| Комментарии: <span [textContent]=\"item.commentsCount\"></span></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"pagination\">\r\n        <pagination *ngIf=\"items\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #activateModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Активировать?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"activate()\">Активировать</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #deleteModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 class=\"modal-title\">Удалить?</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <button class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"hideModal()\" type=\"button\">Отмена</button>\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"delete()\">Удалить</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 101 */
/***/ function(module, exports) {

module.exports = "<table class=\"table table-condensed table-bordered table-striped\">\r\n    <tbody>\r\n        <tr>\r\n            <th colspan=\"7\" class=\"StaffTab\">ТАБЛИЦА БОМБАРДИРОВ 2016/17</th>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"SquadFirst\" width=\"10%\">№</td>\r\n            <td class=\"SquadFirst\" width=\"26%\">Имя игрока</td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Английская Премьер-Лига\">АПЛ</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Лига Чемпионов\">ЛЧ</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Кубок Англии\">КА</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Кубок английской лиги\">КЛ</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"14%\">Всего</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>19</td>\r\n            <td class=\"TextStatTab\">Садио Мане</td>\r\n            <td>8</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>8</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>27</td>\r\n            <td class=\"TextStatTab\">Дивок Ориги</td>\r\n            <td>4</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>3</td>\r\n            <td>7</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>11</td>\r\n            <td class=\"TextStatTab\">Роберто Фирмино</td>\r\n            <td>5</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>10</td>\r\n            <td class=\"TextStatTab\">Филиппе Коутиньо</td>\r\n            <td>5</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>20</td>\r\n            <td class=\"TextStatTab\">Адам Лаллана</td>\r\n            <td>6</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>7</td>\r\n            <td class=\"TextStatTab\">Джеймс Милнер</td>\r\n            <td>5</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>5</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>15</td>\r\n            <td class=\"TextStatTab\">Дэниел Старридж</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>4</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>23</td>\r\n            <td class=\"TextStatTab\"><span style=\"line-height: 20.8px;\">Эмре Джан</span></td>\r\n            <td>3</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>3</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>6</td>\r\n            <td class=\"TextStatTab\">Деян Ловрен</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>17</td>\r\n            <td class=\"TextStatTab\"><span style=\"line-height: 20.8px;\">Рагнар Клаван</span></td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>14</td>\r\n            <td class=\"TextStatTab\">Джордан Хендерсон</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>32</td>\r\n            <td class=\"TextStatTab\"><span style=\"line-height: 20.8px;\">Жоэль Матип</span></td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>5</td>\r\n            <td class=\"TextStatTab\">Джорджиньо Вейналдум</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>58</td>\r\n            <td class=\"TextStatTab\">Бенджамин Вудберн</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<table class=\"table table-condensed table-bordered table-striped\">\r\n    <tbody>\r\n        <tr>\r\n            <th colspan=\"7\" class=\"StaffTab\">ТАБЛИЦА АССИСТЕНТОВ 2016/17</th>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"SquadFirst\" width=\"10%\">№</td>\r\n            <td class=\"SquadFirst\" width=\"26%\">Имя игрока</td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Английская Премьер-Лига\">АПЛ</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Лига Чемпионов\">ЛЧ</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Кубок Англии\">КА</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"10%\"><abbr title=\"Кубок английской лиги\">КЛ</abbr></td>\r\n            <td class=\"SquadFirst\" width=\"14%\">Всего</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>10</td>\r\n            <td class=\"TextStatTab\">Филиппе Коутиньо</td>\r\n            <td>5</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>20</td>\r\n            <td class=\"TextStatTab\">Адам Лаллана</td>\r\n            <td>6</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>19</td>\r\n            <td class=\"TextStatTab\">Садио Мане</td>\r\n            <td>4</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>11</td>\r\n            <td class=\"TextStatTab\">Роберто Фирмино</td>\r\n            <td>3</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>5</td>\r\n            <td class=\"TextStatTab\">Джорджиньо Вейналдум</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>14</td>\r\n            <td class=\"TextStatTab\">Джордан Хендерсон</td>\r\n            <td>4</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>7</td>\r\n            <td class=\"TextStatTab\">Джеймс Милнер</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>2</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>2</td>\r\n            <td class=\"TextStatTab\">Натаниэль Клайн</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>3</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>15</td>\r\n            <td class=\"TextStatTab\">Дэниел Старридж</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>18</td>\r\n            <td class=\"TextStatTab\">Альберто Морено</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>66</td>\r\n            <td class=\"TextStatTab\">Трент Александр- Арнольд</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>23</td>\r\n            <td class=\"TextStatTab\">Эмре Джан</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>27</td>\r\n            <td class=\"TextStatTab\">Дивок Ориги</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<table class=\"table table-condensed table-bordered table-striped\">\r\n    <tbody>\r\n        <tr>\r\n            <th colspan=\"12\" class=\"StaffTab\"><span style=\"font-weight: normal;\">КАРТОЧКИ ИГРОКОВ 2016/17</span></th>\r\n        </tr>\r\n        <tr>\r\n            <td class=\"SquadFirst\" width=\"10%\">№</td>\r\n            <td class=\"SquadFirst\" width=\"26%\">Имя игрока</td>\r\n            <td class=\"SquadFirst\" colspan=\"2\" width=\"10%\"><abbr title=\"Английская Премьер-Лига\">АПЛ</abbr></td>\r\n            <td class=\"SquadFirst\" colspan=\"2\" width=\"10%\"><abbr title=\"Лига Чемпионов\">ЛЧ</abbr></td>\r\n            <td class=\"SquadFirst\" colspan=\"2\" width=\"10%\"><abbr title=\"Кубок Англии\">КА</abbr></td>\r\n            <td class=\"SquadFirst\" colspan=\"2\" width=\"10%\"><abbr title=\"Кубок английской лиги\">КЛ</abbr></td>\r\n            <td class=\"SquadFirst\" colspan=\"2\" width=\"14%\">Всего</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>&nbsp;</td>\r\n            <td class=\"TextStatTab\">&nbsp;</td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: yellow; text-shadow: 1px 1px 2px black\"><span style=\"color:#FFFF00;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: red; text-shadow: 1px 1px 2px black\"><span style=\"color:#FF0000;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: yellow; text-shadow: 1px 1px 2px black\"><span style=\"color:#FFFF00;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: red; text-shadow: 1px 1px 2px black\"><span style=\"color:#FF0000;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: yellow; text-shadow: 1px 1px 2px black\"><span style=\"color:#FFFF00;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: red; text-shadow: 1px 1px 2px black\"><span style=\"color:#FF0000;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: yellow; text-shadow: 1px 1px 2px black\"><span style=\"color:#FFFF00;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: red; text-shadow: 1px 1px 2px black\"><span style=\"color:#FF0000;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: yellow; text-shadow: 1px 1px 2px black\"><span style=\"color:#FFFF00;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n            <td>\r\n                <p style=\"font-size: 120%; color: red; text-shadow: 1px 1px 2px black\"><span style=\"color:#FF0000;\"><span style=\"font-size: 13px;\">▊</span></span></p>\r\n            </td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>14</td>\r\n            <td class=\"TextStatTab\">Джордан Хендерсон</td>\r\n            <td>6</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>6</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>6</td>\r\n            <td class=\"TextStatTab\">Деян Ловрен</td>\r\n            <td>4</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>4</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>32</td>\r\n            <td class=\"TextStatTab\">Жоэль Матип</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>10</td>\r\n            <td class=\"TextStatTab\"><span style=\"line-height: 20.8px;\">Филиппе Коутиньо</span></td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>19</td>\r\n            <td class=\"TextStatTab\"><span style=\"line-height: 20.8px;\">Садио Мане</span></td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>21</td>\r\n            <td class=\"TextStatTab\">Лукас Лейва</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>18</td>\r\n            <td class=\"TextStatTab\">Альберто Морено</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrOdd\">\r\n            <td>16</td>\r\n            <td class=\"TextStatTab\">Марко Груич</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>7</td>\r\n            <td class=\"TextStatTab\">Джеймс Милнер</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>15</td>\r\n            <td class=\"TextStatTab\">Дэниел Старридж</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>28</td>\r\n            <td class=\"TextStatTab\">Дэнни Ингс</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>66</td>\r\n            <td class=\"TextStatTab\">Трент Александр- Арнольд</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>23</td>\r\n            <td class=\"TextStatTab\">Эмре Джан</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>11</td>\r\n            <td class=\"TextStatTab\">Роберто Фирмино</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>2</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>5</td>\r\n            <td class=\"TextStatTab\">Джорджиньо Вейналдум</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n        <tr class=\"CldrEven\">\r\n            <td>27</td>\r\n            <td class=\"TextStatTab\">Дивок Ориги</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n        </tr>\r\n    </tbody>\r\n</table>";

/***/ },
/* 102 */
/***/ function(module, exports) {

module.exports = "<div class=\"col-md-12 form-horizontal margin-top-middle\" *ngIf=\"item\">\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Получатель</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" disabled [value]=\"item.receiver\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Заголовок</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" disabled [value]=\"item.title\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Сообщение</label>\r\n        <div class=\"col-md-10\">\r\n            <textarea class=\"form-control\" disabled rows=\"4\" [textContent]=\"item.message\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-offset-2 col-md-10\">\r\n            <!--a [routerLink]=\"['/pm', 0, 'edit', {username: item.receiver, userId: item.id}]\" >Ответить</!a-->\r\n            <!--<a *ngIf=\"roles.isSelf(item.receiverId)\" [routerLink]=\"['/pm', 0, 'edit']\" >Ответить</a>-->\r\n            <a *ngIf=\"roles.isSelf(item.receiverId)\" (click)=\"writePm()\">Ответить</a>\r\n        </div>\r\n    </div>\r\n    <pm-reply *ngIf=\"selectedUserId\" [userId]=\"item.receiverId\" (close)=\"closePmWindow($event);\" [userName]=\"item.receiver\" [title]=\"item.title\"></pm-reply>\r\n</div>";

/***/ },
/* 103 */
/***/ function(module, exports) {

module.exports = "<form class=\"form-horizontal col-md-12\" role=\"form\" name=\"writePm\"  [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h2>Написать сообщение</h2>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Получатель</label>\r\n        <div class=\"col-md-10\">\r\n            <!--p class=\"text-danger col-md-offset-2\" ng-if=\"vm.errorMessage\">\r\n            <i ng-bind=\"vm.errorMessage\"></i>\r\n            </!p-->\r\n            <input\r\n                (valueChanged)=\"updateUsername($event)\"\r\n                attr-placeholder=\"Введите логин...\"\r\n                auto-complete class=\"form-control\"\r\n                display-property-name=\"username\"\r\n                formControlName=\"receiver\"\r\n                loading-text=\"Загрузочка\"\r\n                min-chars=\"2\"\r\n                name=\"receiver\"\r\n                type=\"text\"\r\n                [source]=\"users\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Заголовок</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" name=\"title\" formControlName=\"title\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Сообщение</label>\r\n        <div class=\"col-md-10\">\r\n            <textarea class=\"form-control\" name=\"message\" rows=\"4\" formControlName=\"message\"> </textarea>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-offset-2 col-md-10\">\r\n            <button [disabled]=\"!editForm.valid\" type=\"submit\" class=\"btn btn-default\">Отправить</button>\r\n        </div>\r\n    </div>\r\n</form>";

/***/ },
/* 104 */
/***/ function(module, exports) {

module.exports = "<div class=\"container-fluid\">\r\n    <tabset>\r\n        <tab heading=\"Полученные\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <td>#</td>\r\n                    <td>Заголовок</td>\r\n                    <td>Отправитель</td>\r\n                    <td>Дата получения</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let message of received; let i = index\">\r\n                <tr>\r\n                    <td [textContent]=\"i + 1\"></td>\r\n                    <td>\r\n                        <a [routerLink]=\"['/pm', message.id]\">\r\n                            <b *ngIf=\"!message.isRead\" [textContent]=\"message.title\"></b>\r\n                            <span *ngIf=\"message.isRead\" [textContent]=\"message.title\"></span>\r\n                        </a>\r\n                    </td>\r\n                    <td><a [routerLink]=\"['/user', message.senderId]\" [textContent]=\"message.sender\"></a></td>\r\n                    <td [textContent]=\"message.sentTime | date:'medium'\"></td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </tab>\r\n        <tab heading=\"Отправленные\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <td>#</td>\r\n                    <td>Заголовок</td>\r\n                    <td>Получатель</td>\r\n                    <td>Дата отправки</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let message of sent; let i = index\">\r\n                <tr>\r\n                    <td [textContent]=\"i + 1\"></td>\r\n                    <td>\r\n                        <a [routerLink]=\"['/pm', message.id]\">\r\n                            <b *ngIf=\"!message.isRead\" [textContent]=\"message.title\"></b>\r\n                            <span *ngIf=\"message.isRead\" [textContent]=\"message.title\"></span>\r\n                        </a>\r\n                    </td>\r\n                    <td><a [routerLink]=\"['/user', message.receiverId]\" [textContent]=\"message.receiver\"></a></td>\r\n                    <td [textContent]=\"message.sentTime | date:'medium'\"></td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </tab>\r\n        <tab heading=\"Написать сообщеньку\">\r\n            <pm-edit></pm-edit>\r\n        </tab> <!--(select)=\"writePm()\"-->\r\n    </tabset>\r\n</div>";

/***/ },
/* 105 */
/***/ function(module, exports) {

module.exports = "<form class=\"form-horizontal col-md-12\" role=\"form\" name=\"writePm\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h2>Написать сообщение</h2>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Получатель</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" readonly\r\n                   [value]=\"userName\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Заголовок</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" name=\"title\" formControlName=\"title\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Сообщение</label>\r\n        <div class=\"col-md-10\">\r\n            <textarea class=\"form-control\" name=\"message\" rows=\"4\" formControlName=\"message\"> </textarea>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-offset-2 col-md-10\">\r\n            <button [disabled]=\"!editForm.valid\" type=\"submit\" class=\"btn btn-default\">Отправить</button>\r\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"closeWindow()\">Отмена</button>\r\n        </div>\r\n    </div>\r\n</form>";

/***/ },
/* 106 */
/***/ function(module, exports) {

module.exports = "<!-- BEGIN of Soccerway widget HTML fragment --><!-- Personal code for this widget: 0fssvo76bgEyX1ifo -->\r\n<iframe frameborder=\"0\"\r\n        height=\"520\"\r\n        marginheight=\"0\"\r\n        marginwidth=\"0\"\r\n        scrolling=\"no\" \r\n        src=\"http://widgets.soccerway.com/widget/free/classic/competition/8/#d=650x600&amp;f=table,table_colmp,table_colmw,table_colmd,table_colml,table_colgf,table_colga,table_colgd,results,fixtures,scroll&amp;cbackground=FFFFFF&amp;ctext=000000&amp;ctitle=F81900&amp;cshadow=E8E8E8&amp;cbutton=C0C0C0&amp;cbuttontext=000000&amp;chighlight=FF0000&amp;tbody_family=Tahoma,sans-serif&amp;tbody_size=12&amp;tbody_weight=normal&amp;tbody_style=normal&amp;tbody_decoration=none&amp;tbody_transform=none&amp;ttitle_family=Impact,sans-serif&amp;ttitle_size=13&amp;ttitle_weight=normal&amp;ttitle_style=normal&amp;ttitle_decoration=none&amp;ttitle_transform=none&amp;ttab_family=Tahoma,sans-serif&amp;ttab_size=12&amp;ttab_weight=normal&amp;ttab_style=normal&amp;ttab_decoration=none&amp;ttab_transform=none\"\r\n         width=\"650\">\r\n    \r\n</iframe><!-- END of Soccerway widget HTML fragment -->\r\n<!--<br/><br/>\r\n[b]<a href=\"http://www.myliverpool.ru/index/barclays_premier_league/0-7\">Сезон 12/13</a>[/b]\r\n<br/><br/>\r\n[b]<a href=\"http://www.myliverpool.ru/index/turnirnaja_tablica_sezona_09_10/0-60\">Сезон 09/10</a>[/b]-->\r\n\r\n<div style=\"padding: 20px;\">\r\n    <form action=\"../\"><select onchange=\"window.open(this.options[this.selectedIndex].value, '_top')\">\r\n        <option selected=\"selected\" value=\"http://www.myliverpool.ru/index/premer_liga_2013_2014_polozhenie_komand/0-153\">Сезон 2013/14</option>\r\n        <option value=\"http://www.myliverpool.ru/index/barclays_premier_league/0-7\">Сезон 2012/13</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2011_2012_polozhenie_komand/0-189\">Сезон 2011/12</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2010_2011_polozhenie_komand/0-190\">Сезон 2010/11</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2009_2010_polozhenie_komand/0-193\">Сезон 2009/10</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2008_2008_polozhenie_komand/0-194\">Сезон 2008/09</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2007_2008_polozhenie_komand/0-209\">Сезон 2007/08</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2006_2007_polozhenie_komand/0-210\">Сезон 2006/07</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2005_2006_polozhenie_komand/0-213\">Сезон 2005/06</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2004_2005_polozhenie_komand/0-214\">Сезон 2004/05</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2003_2004_polozhenie_komand/0-215\">Сезон 2003/04</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2002_2003_polozhenie_komand/0-216\">Сезон 2002/03</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2001_2002_polozhenie_komand/0-217\">Сезон 2001/02</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_2000_2001_polozhenie_komand/0-218\">Сезон 2000/01</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1999_2000_polozhenie_komand/0-219\">Сезон 1999/00</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1998_1999_polozhenie_komand/0-220\">Сезон 1998/99</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1997_1998_polozhenie_komand/0-221\">Сезон 1997/98</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1996_1997_polozhenie_komand/0-222\">Сезон 1996/97</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1995_1996_polozhenie_komand/0-223\">Сезон 1995/96</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1994_1995_polozhenie_komand/0-224\">Сезон 1994/95</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1993_1994_polozhenie_komand/0-225\">Сезон 1993/94</option>\r\n        <option value=\"http://www.myliverpool.ru/index/premer_liga_1992_1993_polozhenie_komand/0-226\">Сезон 1992/93</option>\r\n    </select></form>\r\n</div>";

/***/ },
/* 107 */
/***/ function(module, exports) {

module.exports = "<div class=\"container-fluid\" *ngIf=\"item\">\r\n    <h2>\r\n        <span [textContent]=\"item.userName\"></span>\r\n        <span *ngIf=\"roles.isLogined && !roles.isSelf(item.id)\">\r\n            <a role=\"button\" (click)=\"writePm()\"><span class=\"glyphicon glyphicon-envelope\"></span></a>\r\n        </span>\r\n    </h2>\r\n    <pm-reply *ngIf=\"selectedUserId\" [userId]=\"selectedUserId\" (close)=\"closePmWindow($event);\" [userName]=\"item.userName\"></pm-reply>\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-2 col-sm-2\">\r\n            <img class=\"avatar\" [src]=\"item.photo\" [alt]=\"item.userName\"/>\r\n        </div>\r\n        <div class=\"col-xs-10 col-sm-10\">\r\n            <div *ngIf=\"roles.isSelf(item.id) || roles.isModerator\">\r\n                <label for=\"update-avatar-input\" \r\n                       *ngIf=\"roles.isSelf(item.id)\"\r\n                       class=\"btn btn-info\">Обновить аватар</label>\r\n                <input type=\"file\"\r\n                       class=\"hidden\"\r\n                       accept=\"image/*\" \r\n                       (change)=\"onChangeAvatar($event)\"\r\n                       id=\"update-avatar-input\"/>\r\n                <button class=\"btn btn-warning\" (click)=\"resetAvatar()\">\r\n                    Сбросить аватар\r\n                </button>\r\n                <button *ngIf=\"roles.isSelf(item.id)\" class=\"btn btn-danger\" [routerLink]=\"['/changePassword']\">Изменить пароль</button>\r\n                <br><br>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-horizontal\" role=\"form\">\r\n        <div class=\"form-group\">\r\n            <label class=\"col-sm-2 control-label\">Логин</label>\r\n            <div class=\"col-sm-10\">\r\n                <span class=\"form-control\" [textContent]=\"item.userName\"></span>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"roles.isModerator && !roles.isSelf(item.id)\" class=\"form-group\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">Блокировка</label>\r\n            <div class=\"col-xs-10 col-sm-10\" >\r\n                <form *ngIf=\"!item.lockoutEnd\" class=\"form-inline\" name=\"banForm\" role=\"form\" [formGroup]=\"banForm\" (ngSubmit)=\"onSubmitBan()\">                    \r\n                        <input min=\"0\" type=\"number\" placeholder=\"Количество дней\" class=\"form-control\" formControlName=\"banDaysCount\" />\r\n                        <button class=\"btn btn-danger\" type=\"submit\" [disabled]=\"!banForm.valid\">Забанить</button>\r\n                </form>\r\n                <div class=\"col-xs-12 col-sm-12 flex-container\" *ngIf=\"item.lockoutEnd\">\r\n                    <span class=\"col-xs-10 col-sm-10 flex-vertical-center\">Активность заблокирована до &nbsp;<b [textContent]=\"item.lockoutEnd | date:'medium'\"></b></span>\r\n                    <button class=\"btn btn-success\" *ngIf=\"roles.isMainModerator\" (click)=\"unban()\">Снять бан</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">Группа:</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span *ngIf=\"!roles.isAdminAssistant || roles.isSelf(item.id)\" class=\"form-control\" [textContent]=\"item.roleGroupName\"></span>\r\n \r\n                <form *ngIf=\"roles.isAdminAssistant && !roles.isSelf(item.id)\" class=\"form-inline\" name=\"roleForm\" role=\"form\" [formGroup]=\"roleForm\" (ngSubmit)=\"onSubmit(roleForm.value)\">\r\n                    <select class=\"form-control\" name=\"roleGroup\" formControlName=\"roleGroupId\">\r\n                        <option *ngFor=\"let roleGroup of roleGroups\" [value]=\"roleGroup.id\" [textContent]=\"roleGroup.name\"></option>\r\n                    </select>\r\n                    <button type=\"submit\" [disabled]=\"!roleForm.valid\" class=\"btn btn-default\">Сохранить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"roles.isSelf || roles.isAdminAssistant\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\" [hidden]=\"!item.emailConfirmed\">Почта</label>\r\n            <label class=\"col-xs-2 col-sm-2 control-label text-danger\" uib-tooltip=\"Почта не подтверждена\" *ngIf=\"!item.emailConfirmed\">Почта</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span class=\"form-control\" [textContent]=\"item.email\"></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">Последний вход </label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span class=\"form-control\" [textContent]=\"item.lastModifiedOn | date:'medium'\"></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">Дата регистрации</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span class=\"form-control\" [textContent]=\"item.registrationDate | date:'medium'\"></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"item.fullName\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">Полное имя</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span class=\"form-control\" [textContent]=\"item.fullName\"></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"item.birthday\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">День рождения</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span class=\"form-control\" [textContent]=\"item.birthday | date:'longDate'\"></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"item.gender\">\r\n            <label class=\"col-xs-2 col-sm-2 control-label\">Пол</label>\r\n            <div class=\"col-xs-10 col-sm-10\">\r\n                <span class=\"form-control\" *ngIf=\"item.gender\">Девушка</span>\r\n                <span class=\"form-control\" *ngIf=\"!item.gender\">Парень</span>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <ul class=\"list-inline\">\r\n                <li *ngIf=\"item.newsCount > 0\"><a [routerLink]=\"['/news/list', 1]\" [queryParams]=\"{userName: item.userName}\">Новости(<span [textContent]=\"item.newsCount\"></span>)</a></li>\r\n                <li>|</li>\r\n                <li *ngIf=\"item.blogsCount > 0\"><a ui-sref=\"blog({page: 1, userName: item.userName})\">Блоги(<span [textContent]=\"item.blogsCount\"></span>)</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--script type=\"text/ng-template\" id=\"changeRoleConfirmation.html\">\r\n    <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\">Редактирование роли</h3>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        Изменить?\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button class=\"btn btn-primary\" type=\"button\" ng-click=\"vm.ok()\">Изменить</button>\r\n        <button class=\"btn btn-default\" type=\"button\" ng-click=\"vm.cancel()\">Отмена</button>\r\n    </div>\r\n</!--script>\r\n\r\n<script type=\"text/ng-template\" id=\"banConfirmation.html\">\r\n    <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\"></h3>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        Забанить?\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-default\" ng-click=\"vm.ok()\">Забанить</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" ng-click=\"vm.cancel()\">Отмена</button>\r\n    </div>\r\n</script>-->";

/***/ },
/* 108 */
/***/ function(module, exports) {

module.exports = "<div class=\"table-responsive\">\r\n    <pm-reply *ngIf=\"selectedUserId\" [userId]=\"items[selectedUserId].id\" (close)=\"closePmWindow($event);\" [userName]=\"items[selectedUserId].userName\"></pm-reply>\r\n    <table class=\"table table-striped table-condensed\">\r\n        <thead>\r\n            <tr>\r\n                <th>Последний вход</th>\r\n                <th>Логин</th>\r\n                <th>Дата регистрации</th>\r\n                <th>Группа</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody *ngFor=\"let user of items; let i = index;\">\r\n            <tr>\r\n                <td class=\"\" [textContent]=\"user.lastModified | date:'medium'\"></td>\r\n                <td class=\"\">\r\n                    <a [routerLink]=\"['/user', user.id ]\">\r\n                        <div class=\"col-md-3\">\r\n                            <img class=\"mini-avatar\" [src]=\"user.photo\" [alt]=\"user.userName\"/>\r\n                        </div>\r\n                        <span [textContent]=\"user.userName\"></span>\r\n                    </a>\r\n                    <span class=\"text-danger\" tooltip=\"Почта не подтверждена\" *ngIf=\"!user.emailConfirmed && (roles.isAdminAssist || roles.isSelf(user.id))\"> *</span>\r\n                    <a role=\"button\" *ngIf=\"roles.isLogined && !roles.isSelf(user.id)\" (click)=\"writePm(i)\"><span class=\"glyphicon glyphicon-envelope\"></span></a>\r\n                </td>\r\n                <td class=\"\" [textContent]=\"user.registrationDate | date:'medium'\"></td>\r\n                <td class=\"\" [textContent]=\"user.roleGroupName\"></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div>\r\n        <!--form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n                <select class=\"form-control\"\r\n                        ng-model=\"vm.chosenRoleGroupId\"\r\n                        ng-options=\"roleGroup.id as roleGroup.name for roleGroup in vm.roleGroups\" ng-change=\"vm.changeRoleId()\"></select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control\" ng-model=\"vm.filterUserName\" ng-model-options=\"{debounce: 1000}\" ng-change=\"vm.filterByUserName()\" placeholder=\"Логин\" />\r\n            </div>\r\n        </form-->\r\n    </div>\r\n</div>\r\n<div class=\"pagination\">\r\n    <pagination *ngIf=\"items\" [totalItems]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\" [(ngModel)]=\"page\" [maxSize]=\"7\" (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"1\" lastText=\"totalItems/itemsPerPage\"></pagination>\r\n</div>";

/***/ },
/* 109 */
/***/ function(module, exports) {

module.exports = "<form class=\"form-horizontal col-md-12\" role=\"form\" name=\"editWish\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Заголовок</label>\r\n        <div class=\"col-md-10\">\r\n            <input class=\"form-control\" name=\"title\" [formControl]=\"editForm.controls['title']\"/>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-md-2\">Сообщение</label>\r\n        <div class=\"col-md-10\">\r\n            <textarea class=\"form-control\" name=\"title\" [formControl]=\"editForm.controls['message']\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label col-xs-2 col-sm-2\">Тип:</label>\r\n        <div class=\"col-xs-10 col-sm-10\">\r\n            <!--<select class=\"form-control\" name=\"newsCategoryId\" [formControl]=\"editForm.controls['type']\"></select>-->\r\n            <select [formControl]=\"editForm.controls['type']\">\r\n                <option [value]=\"type.id\" *ngFor=\"let type of types\" [textContent]=\"type.name\"></option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-offset-2 col-md-10\">\r\n            <button [disabled]=\"!editForm.valid\" type=\"submit\" class=\"btn btn-default\">Создать</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n";

/***/ },
/* 110 */
/***/ function(module, exports) {

module.exports = "<div>\r\n    <div class=\"btn-group\">\r\n        <form class=\"form-inline btn-block\">\r\n            <!--<div class=\"form-group\">\r\n                <select class=\"form-control\"\r\n                        ng-model=\"vm.typeId\"\r\n                        ng-options=\"type.id as type.name for type in vm.types\" ng-change=\"vm.changeTypeId()\"></select>\r\n            </div>-->\r\n            <div class=\"form-group\">\r\n                <!--<input class=\"form-control\" ng-model=\"vm.filterText\" ng-model-options=\"{debounce: 1000}\" ng-change=\"vm.filterByText()\" placeholder=\"Поиск в тексте пожеланий\" />-->\r\n            </div>\r\n            <button class=\"btn btn-success\" [routerLink]=\"['/wish', 0, 'edit']\">Добавить</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"top20\" *ngFor=\"let wish of items; let i = index;\">\r\n        <div class=\"panel\" [ngClass]=\"getTypeClass(wish.type)\">\r\n            <div class=\"panel-heading\">\r\n                <h3 class=\"panel-title\">\r\n                    <a [routerLink]=\"['/wish', wish.id, 'edit']\">\r\n                        <span [textContent]=\"wish.title\"></span>\r\n                    </a>\r\n                    <span class=\"col-xs-1 col-sm-1 pull-right\" secured=\"AdminFull\">\r\n                        <a ng-click=\"vm.delete(i)\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n                    </span>\r\n                </h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n                <div [textContent]=\"wish.message\"></div>\r\n            </div>\r\n            <div class=\"panel-footer\">\r\n                <div [textContent]=\"wish.typeName\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"pagination\">\r\n    <!--uib-pagination ng-show=\"vm.totalItems > vm.itemPerPage\" total-items=\"vm.totalItems\" ng-model=\"vm.page\" ng-change=\"vm.goToPage()\"></!--uib-pagination-->\r\n</div>";

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var auth_service_1 = __webpack_require__(15);
var AccountSigninComponent = (function () {
    function AccountSigninComponent(authService, formBuilder) {
        this.authService = authService;
        this.formBuilder = formBuilder;
    }
    AccountSigninComponent.prototype.ngOnInit = function () {
        this.loginForm = this.formBuilder.group({
            'userName': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'password': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])]
        });
    };
    AccountSigninComponent.prototype.onSubmit = function (ra) {
        this.userName = this.loginForm.controls["userName"].value;
        this.password = this.loginForm.controls["password"].value;
        var result = this.authService.login(this.userName, this.password);
    };
    return AccountSigninComponent;
}());
AccountSigninComponent = __decorate([
    core_1.Component({
        selector: "account-signin",
        template: __webpack_require__(64)
    }),
    __metadata("design:paramtypes", [auth_service_1.AuthService, forms_1.FormBuilder])
], AccountSigninComponent);
exports.AccountSigninComponent = AccountSigninComponent;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var signup_model_1 = __webpack_require__(120);
var account_service_1 = __webpack_require__(8);
var index_1 = __webpack_require__(1);
var AccountSignupComponent = (function () {
    function AccountSignupComponent(accountService, formBuilder) {
        this.accountService = accountService;
        this.formBuilder = formBuilder;
        this.result = false;
    }
    AccountSignupComponent.prototype.ngOnInit = function () {
        this.registerForm = this.formBuilder.group({
            'userName': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(3)
                ])],
            'email': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6), index_1.GlobalValidators.mailFormat
                ])],
            'password': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])],
            'confirmPassword': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])],
        });
    };
    AccountSignupComponent.prototype.onSubmit = function () {
        var _this = this;
        var signup = new signup_model_1.Signup();
        signup.userName = this.registerForm.controls["userName"].value;
        signup.email = this.registerForm.controls["email"].value;
        signup.password = this.registerForm.controls["password"].value;
        signup.confirmPassword = this.registerForm.controls["confirmPassword"].value;
        this.accountService
            .create(signup)
            .subscribe(function (data) {
            if (data) {
                _this.result = true;
            }
        }, function (error) { return console.log(error); }, function () { });
    };
    return AccountSignupComponent;
}());
AccountSignupComponent = __decorate([
    core_1.Component({
        selector: "account-signup",
        template: __webpack_require__(65)
    }),
    __metadata("design:paramtypes", [account_service_1.AccountService, forms_1.FormBuilder])
], AccountSignupComponent);
exports.AccountSignupComponent = AccountSignupComponent;


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(31);
var index_2 = __webpack_require__(5);
exports.accountRoutes = [
    {
        path: "signup",
        component: index_1.AccountSignupComponent,
        data: { title: "Регистрация" },
        canActivate: [index_2.UnSignedGuard]
    },
    {
        path: "confirmEmail",
        component: index_1.ConfirmEmailComponent,
        data: { title: "Подтверждение пароля" }
    },
    {
        path: "forgotPassword",
        component: index_1.ForgotPasswordComponent,
        data: { title: "Восстановление забытого пароля" },
        canActivate: [index_2.UnSignedGuard]
    },
    {
        path: "unconfirmedEmail",
        component: index_1.UnconfirmedEmailComponent,
        data: { title: "Ваша почта не подтверждена" }
    },
    {
        path: "resetPassword",
        component: index_1.ResetPasswordComponent,
        data: { title: "Сброс пароля" },
        canActivate: [index_2.UnSignedGuard]
    },
    {
        path: "changePassword",
        component: index_1.ChangePasswordComponent,
        data: { title: "Изменение пароля" },
        canActivate: [index_2.RoleGuard]
    }
];


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var account_service_1 = __webpack_require__(8);
var index_1 = __webpack_require__(1);
var changePassword_model_1 = __webpack_require__(115);
var ChangePasswordComponent = (function () {
    function ChangePasswordComponent(service, formBuilder) {
        this.service = service;
        this.formBuilder = formBuilder;
    }
    ChangePasswordComponent.prototype.ngOnInit = function () {
        this.passwordForm = this.formBuilder.group({
            'oldPassword': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])],
            'newPassword': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])],
            'confirmPassword': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])]
        }, { validator: index_1.GlobalValidators.matchingPasswords("newPassword", "confirmPassword") });
    };
    ChangePasswordComponent.prototype.onSubmit = function (ra) {
        var model = new changePassword_model_1.ChangePassword();
        model.oldPassword = this.passwordForm.controls["oldPassword"].value;
        model.newPassword = this.passwordForm.controls["newPassword"].value;
        model.confirmPassword = this.passwordForm.controls["confirmPassword"].value;
        this.service.changePassword(model).subscribe(function (data) {
            if (data) {
                console.log("password changed");
            }
        }, function (error) { return console.log(error); }, function () { });
    };
    return ChangePasswordComponent;
}());
ChangePasswordComponent = __decorate([
    core_1.Component({
        selector: "change-password",
        template: __webpack_require__(66)
    }),
    __metadata("design:paramtypes", [account_service_1.AccountService, forms_1.FormBuilder])
], ChangePasswordComponent);
exports.ChangePasswordComponent = ChangePasswordComponent;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ChangePassword = (function () {
    function ChangePassword() {
    }
    return ChangePassword;
}());
exports.ChangePassword = ChangePassword;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var account_service_1 = __webpack_require__(8);
var ConfirmEmailComponent = (function () {
    function ConfirmEmailComponent(accountService, route, router) {
        this.accountService = accountService;
        this.route = route;
        this.router = router;
        this.result = false;
    }
    ConfirmEmailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.queryParams.subscribe(function (params) {
            var id = +params["userId"];
            var code = params["code"];
            _this.accountService.confirmEmail(id, code)
                .subscribe(function (data) { return _this.result = data; }, function (error) { return console.log(error); }, function () {
                if (_this.result) {
                }
            });
        });
    };
    ConfirmEmailComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    return ConfirmEmailComponent;
}());
ConfirmEmailComponent = __decorate([
    core_1.Component({
        selector: "email-confirmation",
        template: "<span [hidden]='!result'>Ваш адрес электронной почты успешно подтвержден. Можете войти и быть как дома.</span>"
    }),
    __metadata("design:paramtypes", [account_service_1.AccountService, router_1.ActivatedRoute, router_1.Router])
], ConfirmEmailComponent);
exports.ConfirmEmailComponent = ConfirmEmailComponent;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var account_service_1 = __webpack_require__(8);
var index_1 = __webpack_require__(1);
var ForgotPasswordComponent = (function () {
    function ForgotPasswordComponent(service, formBuilder) {
        this.service = service;
        this.formBuilder = formBuilder;
    }
    ForgotPasswordComponent.prototype.ngOnInit = function () {
        this.forgotForm = this.formBuilder.group({
            'email': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, index_1.GlobalValidators.mailFormat
                ])]
        });
    };
    ForgotPasswordComponent.prototype.onSubmit = function (ra) {
        this.email = this.forgotForm.controls["email"].value;
        this.service.forgotPassword(this.email).subscribe(function (data) { return data; }, function (error) { return console.log(error); }, function () { });
        this.finish = true;
    };
    return ForgotPasswordComponent;
}());
ForgotPasswordComponent = __decorate([
    core_1.Component({
        selector: "forgot-password",
        template: __webpack_require__(67)
    }),
    __metadata("design:paramtypes", [account_service_1.AccountService, forms_1.FormBuilder])
], ForgotPasswordComponent);
exports.ForgotPasswordComponent = ForgotPasswordComponent;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var account_service_1 = __webpack_require__(8);
var index_1 = __webpack_require__(1);
var resetPassword_model_1 = __webpack_require__(119);
var ResetPasswordComponent = (function () {
    function ResetPasswordComponent(service, route, router, formBuilder) {
        this.service = service;
        this.route = route;
        this.router = router;
        this.formBuilder = formBuilder;
    }
    ResetPasswordComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.queryParams.subscribe(function (params) {
            _this.code = params["code"];
        });
        this.resetForm = this.formBuilder.group({
            'email': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, index_1.GlobalValidators.mailFormat
                ])],
            'password': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])],
            'confirmPassword': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(6)
                ])],
        }, { validator: index_1.GlobalValidators.matchingPasswords("password", "confirmPassword") });
    };
    ResetPasswordComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    ResetPasswordComponent.prototype.onSubmit = function (ra) {
        var resetPassword = new resetPassword_model_1.ResetPassword();
        resetPassword.code = this.code;
        resetPassword.email = this.resetForm.controls["email"].value;
        resetPassword.password = this.resetForm.controls["password"].value;
        resetPassword.confirmPassword = this.resetForm.controls["confirmPassword"].value;
        this.service.resetPassword(resetPassword).subscribe(function (data) { return data; }, function (error) { return console.log(error); }, function () { });
        this.finish = true;
    };
    return ResetPasswordComponent;
}());
ResetPasswordComponent = __decorate([
    core_1.Component({
        selector: "reset-password",
        template: __webpack_require__(68)
    }),
    __metadata("design:paramtypes", [account_service_1.AccountService, router_1.ActivatedRoute, router_1.Router, forms_1.FormBuilder])
], ResetPasswordComponent);
exports.ResetPasswordComponent = ResetPasswordComponent;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ResetPassword = (function () {
    function ResetPassword() {
    }
    return ResetPassword;
}());
exports.ResetPassword = ResetPassword;


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Signup = (function () {
    function Signup() {
    }
    return Signup;
}());
exports.Signup = Signup;


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var account_service_1 = __webpack_require__(8);
var index_1 = __webpack_require__(1);
var UnconfirmedEmailComponent = (function () {
    function UnconfirmedEmailComponent(service, formBuilder) {
        this.service = service;
        this.formBuilder = formBuilder;
    }
    UnconfirmedEmailComponent.prototype.ngOnInit = function () {
        this.unconfirmedForm = this.formBuilder.group({
            'email': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, index_1.GlobalValidators.mailFormat
                ])]
        });
    };
    UnconfirmedEmailComponent.prototype.onSubmit = function () {
        var _this = this;
        console.log(1211);
        var email = this.unconfirmedForm.controls["email"].value;
        this.service.resendConfirmEmail(email).subscribe(function (data) {
            if (data) {
                _this.finish = true;
            }
        }, function (error) { return console.log(error); }, function () { });
    };
    return UnconfirmedEmailComponent;
}());
UnconfirmedEmailComponent = __decorate([
    core_1.Component({
        selector: "unconfirmedEmail",
        template: __webpack_require__(69)
    }),
    __metadata("design:paramtypes", [account_service_1.AccountService, forms_1.FormBuilder])
], UnconfirmedEmailComponent);
exports.UnconfirmedEmailComponent = UnconfirmedEmailComponent;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var EplTableComponent = (function () {
    function EplTableComponent() {
    }
    EplTableComponent.prototype.ngOnInit = function () {
    };
    return EplTableComponent;
}());
EplTableComponent = __decorate([
    core_1.Component({
        selector: "epl-table",
        template: __webpack_require__(70)
    }),
    __metadata("design:paramtypes", [])
], EplTableComponent);
exports.EplTableComponent = EplTableComponent;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(32));
__export(__webpack_require__(122));


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var platform_browser_1 = __webpack_require__(9);
var auth_service_1 = __webpack_require__(15);
var roles_checked_service_1 = __webpack_require__(53);
var AppComponent = (function () {
    function AppComponent(router, auth, rolesChecked, viewContainerRef, activatedRoute, titleService) {
        this.router = router;
        this.auth = auth;
        this.rolesChecked = rolesChecked;
        this.activatedRoute = activatedRoute;
        this.titleService = titleService;
        this.roles = this.rolesChecked.checkRoles();
        this.viewContainerRef = viewContainerRef;
        this.initTitleSubscriber();
    }
    AppComponent.prototype.setTitle = function (newTitle) {
        this.titleService.setTitle(newTitle);
    };
    AppComponent.prototype.logout = function () {
        this.auth.logout();
        this.roles = this.rolesChecked.checkRoles();
    };
    AppComponent.prototype.initTitleSubscriber = function () {
        var _this = this;
        this.router.events
            .filter(function (event) { return event instanceof router_1.NavigationEnd; })
            .map(function () { return _this.activatedRoute; })
            .map(function (route) {
            while (route.firstChild)
                route = route.firstChild;
            return route;
        })
            .filter(function (route) { return route.outlet === "primary"; })
            .mergeMap(function (route) { return route.data; })
            .subscribe(function (event) { return _this.titleService.setTitle(event["title"]); });
    };
    AppComponent.prototype.setUpBreadcrumbs = function () {
    };
    return AppComponent;
}());
AppComponent = __decorate([
    core_1.Component({
        selector: "app",
        template: __webpack_require__(71)
    }),
    __metadata("design:paramtypes", [router_1.Router,
        auth_service_1.AuthService,
        roles_checked_service_1.RolesCheckedService,
        core_1.ViewContainerRef,
        router_1.ActivatedRoute,
        platform_browser_1.Title])
], AppComponent);
exports.AppComponent = AppComponent;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(26);
var account_routing_1 = __webpack_require__(113);
var club_routing_1 = __webpack_require__(134);
var newsCategory_routing_1 = __webpack_require__(167);
var news_routing_1 = __webpack_require__(171);
var user_routing_1 = __webpack_require__(189);
var player_routing_1 = __webpack_require__(174);
var pm_routing_1 = __webpack_require__(179);
var home_routing_1 = __webpack_require__(149);
var image_routing_1 = __webpack_require__(156);
var forumSection_routing_1 = __webpack_require__(139);
var forumSubsection_routing_1 = __webpack_require__(142);
var forumTheme_routing_1 = __webpack_require__(145);
var wish_routing_1 = __webpack_require__(193);
var materialComment_routing_1 = __webpack_require__(165);
var match_routing_1 = __webpack_require__(161);
var season_routing_1 = __webpack_require__(183);
exports.routes = account_routing_1.accountRoutes.concat(club_routing_1.clubRoutes, forumSection_routing_1.forumSectionRoutes, forumSubsection_routing_1.forumSubsectionRoutes, forumTheme_routing_1.forumThemeRoutes, home_routing_1.homeRoutes, image_routing_1.imageRoutes, match_routing_1.matchRoutes, materialComment_routing_1.materialCommentRoutes, newsCategory_routing_1.newsCategoryRoutes, news_routing_1.newsRoutes, player_routing_1.playerRoutes, pm_routing_1.pmRoutes, season_routing_1.seasonRoutes, user_routing_1.userRoutes, wish_routing_1.wishRoutes, [
    { path: "", component: index_1.NewsListComponent, data: { title: "Главная", breadcrumb: "Главная" } }
]);


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(7);
var router_1 = __webpack_require__(2);
var index_1 = __webpack_require__(1);
var RoleGuard = (function () {
    function RoleGuard(rolesService, router, location) {
        this.rolesService = rolesService;
        this.router = router;
        this.location = location;
    }
    RoleGuard.prototype.canActivate = function (route, state) {
        if (!this.rolesService.checkRoles().isLogined) {
            this.location.replaceState("/");
            this.router.navigate(["/"]);
            return false;
        }
        var roles = route.data["role"];
        if (roles == null || roles.length === 0) {
            return true;
        }
        for (var i = 0; i < roles.length; i++) {
            if (this.rolesService.isUserInRole(roles[i])) {
                return true;
            }
        }
        this.location.replaceState("/");
        this.router.navigate(["/"]);
        return false;
    };
    return RoleGuard;
}());
RoleGuard = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.RolesCheckedService,
        router_1.Router,
        common_1.Location])
], RoleGuard);
exports.RoleGuard = RoleGuard;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var index_1 = __webpack_require__(1);
var UnSignedGuard = (function () {
    function UnSignedGuard(rolesService, router) {
        this.rolesService = rolesService;
        this.router = router;
    }
    UnSignedGuard.prototype.canActivate = function (route, state) {
        if (this.rolesService.checkRoles().isLogined) {
            this.router.navigate(["/news"]);
            return false;
        }
        return true;
    };
    return UnSignedGuard;
}());
UnSignedGuard = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [index_1.RolesCheckedService, router_1.Router])
], UnSignedGuard);
exports.UnSignedGuard = UnSignedGuard;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ChatMessage = (function () {
    function ChatMessage() {
    }
    return ChatMessage;
}());
exports.ChatMessage = ChatMessage;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(128));
__export(__webpack_require__(33));
__export(__webpack_require__(130));


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var chatMessage_service_1 = __webpack_require__(33);
var index_1 = __webpack_require__(1);
var MiniChatComponent = (function () {
    function MiniChatComponent(service, route, formBuilder, rolesChecked) {
        this.service = service;
        this.route = route;
        this.formBuilder = formBuilder;
        this.rolesChecked = rolesChecked;
        this.page = 1;
        this.itemsPerPage = 15;
    }
    MiniChatComponent.prototype.ngOnInit = function () {
        this.roles = this.rolesChecked.checkRoles();
        this.initForm();
        this.update();
    };
    MiniChatComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    MiniChatComponent.prototype.update = function () {
        var _this = this;
        this.service
            .getAll()
            .subscribe(function (data) { return _this.items = data; }, function (error) { return console.log(error); }, function () { });
    };
    MiniChatComponent.prototype.onSubmit = function () {
        var _this = this;
        this.sub = this.service.create(this.messageForm.value)
            .subscribe(function (data) { return _this.items.unshift(data); }, function (error) { return console.log(error); }, function () { });
    };
    MiniChatComponent.prototype.initForm = function () {
        this.messageForm = this.formBuilder.group({
            'message': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ]
        });
    };
    return MiniChatComponent;
}());
MiniChatComponent = __decorate([
    core_1.Component({
        selector: "mini-chat",
        template: __webpack_require__(72)
    }),
    __metadata("design:paramtypes", [chatMessage_service_1.ChatMessageService,
        router_1.ActivatedRoute,
        forms_1.FormBuilder,
        index_1.RolesCheckedService])
], MiniChatComponent);
exports.MiniChatComponent = MiniChatComponent;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var platform_browser_1 = __webpack_require__(9);
var club_service_1 = __webpack_require__(16);
var club_model_1 = __webpack_require__(133);
var index_1 = __webpack_require__(1);
var ClubEditComponent = (function () {
    function ClubEditComponent(clubService, route, router, localStorage, formBuilder, titleService) {
        this.clubService = clubService;
        this.route = route;
        this.router = router;
        this.localStorage = localStorage;
        this.formBuilder = formBuilder;
        this.item = new club_model_1.Club();
        titleService.setTitle("Редактирование клуба");
    }
    ClubEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.initForm();
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            if (id > 0) {
                _this.clubService.getSingle(id)
                    .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
        this.editForm.controls["englishName"].valueChanges.subscribe(function (data) {
        });
    };
    ClubEditComponent.prototype.upload = function () {
    };
    ClubEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    ClubEditComponent.prototype.onSubmit = function () {
        var newsItem = this.parseForm();
        if (this.id > 0) {
            this.clubService.update(this.id, newsItem)
                .subscribe(function (data) { return console.log(data.id); }, function (error) { return console.log(error); }, function () { });
        }
        else {
            this.clubService.create(newsItem)
                .subscribe(function (data) { return console.log(data.id); }, function (error) { return console.log(error); }, function () { });
        }
    };
    ClubEditComponent.prototype.getRandomNumber = function () {
        return Math.random();
    };
    ClubEditComponent.prototype.parse = function (data) {
        this.id = data.id;
        this.editForm.patchValue(data);
    };
    ClubEditComponent.prototype.parseForm = function () {
        var item = new club_model_1.Club();
        item.id = this.id;
        item.englishName = this.editForm.controls["englishName"].value;
        item.logo = this.editForm.controls["logo"].value;
        item.name = this.editForm.controls["name"].value;
        item.stadium = this.editForm.controls["stadium"].value;
        return item;
    };
    ClubEditComponent.prototype.initForm = function () {
        this.editForm = this.formBuilder.group({
            'englishName': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.maxLength(30)
                ])],
            'logo': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'name': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.maxLength(30)
                ])],
            'stadium': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.maxLength(30)
                ])]
        });
    };
    return ClubEditComponent;
}());
ClubEditComponent = __decorate([
    core_1.Component({
        selector: "club-edit",
        template: __webpack_require__(73)
    }),
    __metadata("design:paramtypes", [club_service_1.ClubService,
        router_1.ActivatedRoute,
        router_1.Router,
        index_1.LocalStorageService,
        forms_1.FormBuilder,
        platform_browser_1.Title])
], ClubEditComponent);
exports.ClubEditComponent = ClubEditComponent;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(7);
var platform_browser_1 = __webpack_require__(9);
var router_1 = __webpack_require__(2);
var club_service_1 = __webpack_require__(16);
var ng2_bootstrap_1 = __webpack_require__(10);
var ClubListComponent = (function () {
    function ClubListComponent(clubService, route, location, titleService) {
        this.clubService = clubService;
        this.route = route;
        this.location = location;
        this.page = 1;
        this.itemsPerPage = 15;
        this.selectedItemIndex = null;
        titleService.setTitle("Клубы");
    }
    ClubListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
            _this.update();
        });
    };
    ClubListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    ClubListComponent.prototype.showDeleteModal = function (index) {
        this.selectedItemIndex = index;
        this.deleteModal.show();
    };
    ClubListComponent.prototype.hideModal = function () {
        this.selectedItemIndex = null;
        this.deleteModal.hide();
    };
    ClubListComponent.prototype.delete = function () {
        var _this = this;
        var result;
        this.clubService.delete(this.items[this.selectedItemIndex].id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                _this.items.splice(_this.selectedItemIndex, 1);
                _this.hideModal();
            }
        });
    };
    ClubListComponent.prototype.update = function () {
        var _this = this;
        this.clubService
            .getAll(this.page)
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { });
    };
    ClubListComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update();
        var newUrl = "club/list/" + this.page;
        this.location.replaceState(newUrl);
    };
    ;
    ClubListComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    return ClubListComponent;
}());
__decorate([
    core_1.ViewChild("deleteModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], ClubListComponent.prototype, "deleteModal", void 0);
ClubListComponent = __decorate([
    core_1.Component({
        selector: "club-list",
        template: __webpack_require__(74)
    }),
    __metadata("design:paramtypes", [club_service_1.ClubService, router_1.ActivatedRoute, common_1.Location,
        platform_browser_1.Title])
], ClubListComponent);
exports.ClubListComponent = ClubListComponent;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Club = (function () {
    function Club() {
    }
    return Club;
}());
exports.Club = Club;


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(17);
var index_2 = __webpack_require__(5);
exports.clubRoutes = [
    {
        path: "club/:id/edit",
        component: index_1.ClubEditComponent,
        data: { title: "Создание клуба", roles: ["adminStart"] },
        canActivate: [index_2.RoleGuard]
    },
    {
        path: "club",
        component: index_1.ClubListComponent,
        data: { title: "Клубы", roles: ["adminStart"] },
        canActivate: [index_2.RoleGuard]
    }
];


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var forumMessage_model_1 = __webpack_require__(34);
var forumMessage_service_1 = __webpack_require__(35);
var index_1 = __webpack_require__(1);
var ForumMessageAdditionComponent = (function () {
    function ForumMessageAdditionComponent(service, rolesChecked, formBuilder) {
        this.service = service;
        this.rolesChecked = rolesChecked;
        this.formBuilder = formBuilder;
    }
    ForumMessageAdditionComponent.prototype.ngOnInit = function () {
        this.roles = this.rolesChecked.checkRoles();
        this.commentForm = this.formBuilder.group({
            'message': ["", forms_1.Validators.compose([forms_1.Validators.required,
                    forms_1.Validators.minLength(3)])]
        });
    };
    ForumMessageAdditionComponent.prototype.onSubmit = function (value) {
        var _this = this;
        var comment = new forumMessage_model_1.ForumMessage();
        comment.message = this.commentForm.controls["message"].value;
        comment.themeId = this.themeId;
        this.service.create(comment)
            .subscribe(function (data) {
            _this.commentForm.controls["message"].patchValue("");
        }, function (error) { return console.log(error); }, function () { });
    };
    return ForumMessageAdditionComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], ForumMessageAdditionComponent.prototype, "themeId", void 0);
ForumMessageAdditionComponent = __decorate([
    core_1.Component({
        selector: "forumMessage-addition",
        template: __webpack_require__(75)
    }),
    __metadata("design:paramtypes", [forumMessage_service_1.ForumMessageService, index_1.RolesCheckedService,
        forms_1.FormBuilder])
], ForumMessageAdditionComponent);
exports.ForumMessageAdditionComponent = ForumMessageAdditionComponent;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(34));
__export(__webpack_require__(35));
__export(__webpack_require__(135));


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forumSection_service_1 = __webpack_require__(36);
var index_1 = __webpack_require__(1);
var ForumSectionListComponent = (function () {
    function ForumSectionListComponent(service, rolesChecked) {
        this.service = service;
        this.rolesChecked = rolesChecked;
    }
    ForumSectionListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.service
            .getAll()
            .subscribe(function (data) { return _this.items = data; }, function (error) { return console.log(error); }, function () { });
    };
    return ForumSectionListComponent;
}());
ForumSectionListComponent = __decorate([
    core_1.Component({
        selector: "forumSection-list",
        template: __webpack_require__(76)
    }),
    __metadata("design:paramtypes", [forumSection_service_1.ForumSectionService, index_1.RolesCheckedService])
], ForumSectionListComponent);
exports.ForumSectionListComponent = ForumSectionListComponent;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var ForumSection = (function () {
    function ForumSection() {
    }
    return ForumSection;
}());
exports.ForumSection = ForumSection;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(18);
exports.forumSectionRoutes = [
    { path: "forum", component: index_1.ForumSectionListComponent, data: { title: "Форум" } }
];


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var forumSubsection_model_1 = __webpack_require__(37);
var forumSubsection_service_1 = __webpack_require__(19);
var index_1 = __webpack_require__(18);
var ForumSubsectionEditComponent = (function () {
    function ForumSubsectionEditComponent(service, formBuilder, route, sectionService) {
        this.service = service;
        this.formBuilder = formBuilder;
        this.route = route;
        this.sectionService = sectionService;
        this.id = 0;
    }
    ForumSubsectionEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.editForm = this.formBuilder.group({
            'sectionId': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ],
            'name': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ],
            'description': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ]
        });
        this.sub = this.route.params.subscribe(function (params) {
            _this.id = +params["id"];
            if (_this.id > 0) {
                _this.service
                    .getSingle(_this.id)
                    .subscribe(function (data) { return _this.editForm.patchValue(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
        this.sectionService.getAll()
            .subscribe(function (data) { return _this.forumSections = data; }, function (error) { return console.log(error); }, function () { });
    };
    ForumSubsectionEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    ForumSubsectionEditComponent.prototype.onSubmit = function () {
        var model = new forumSubsection_model_1.ForumSubsection();
        model.id = this.id;
        model.sectionId = this.editForm.controls["sectionId"].value;
        model.name = this.editForm.controls["name"].value;
        model.description = this.editForm.controls["description"].value;
        var res;
        if (this.id > 0) {
            var result = this.service.update(this.id, model).subscribe(function (data) { return res = data; });
        }
        else {
            var result = this.service.create(model).subscribe(function (data) { return res = data; });
        }
        if (res !== null) {
        }
    };
    return ForumSubsectionEditComponent;
}());
ForumSubsectionEditComponent = __decorate([
    core_1.Component({
        selector: "forumSubsection-edit",
        template: __webpack_require__(77)
    }),
    __metadata("design:paramtypes", [forumSubsection_service_1.ForumSubsectionService, forms_1.FormBuilder, router_1.ActivatedRoute, index_1.ForumSectionService])
], ForumSubsectionEditComponent);
exports.ForumSubsectionEditComponent = ForumSubsectionEditComponent;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var common_1 = __webpack_require__(7);
var forumSubsection_service_1 = __webpack_require__(19);
var index_1 = __webpack_require__(1);
var ForumSubsectionListComponent = (function () {
    function ForumSubsectionListComponent(service, rolesChecked, route, location) {
        this.service = service;
        this.rolesChecked = rolesChecked;
        this.route = route;
        this.location = location;
        this.page = 1;
        this.itemsPerPage = 15;
    }
    ForumSubsectionListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.sub2 = this.route.queryParams.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
        });
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            _this.update(id);
        });
    };
    ;
    ForumSubsectionListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
        this.sub2.unsubscribe();
    };
    ForumSubsectionListComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update(this.item.id);
        var newUrl = "forum/" + this.item.id + "?page=" + this.page;
        this.location.replaceState(newUrl);
    };
    ;
    ForumSubsectionListComponent.prototype.update = function (id) {
        var _this = this;
        this.service.getSingleWithThemes(id, this.page)
            .subscribe(function (data) {
            _this.item = data;
            _this.itemsPerPage = data.themes.itemPerPage;
            _this.items = data.themes.list;
            _this.totalItems = data.themes.totalItems;
        }, function (error) { return console.log(error); }, function () { });
    };
    return ForumSubsectionListComponent;
}());
ForumSubsectionListComponent = __decorate([
    core_1.Component({
        selector: "forumSubsection-list",
        template: __webpack_require__(78)
    }),
    __metadata("design:paramtypes", [forumSubsection_service_1.ForumSubsectionService,
        index_1.RolesCheckedService,
        router_1.ActivatedRoute, common_1.Location])
], ForumSubsectionListComponent);
exports.ForumSubsectionListComponent = ForumSubsectionListComponent;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(20);
var index_2 = __webpack_require__(5);
exports.forumSubsectionRoutes = [
    { path: "forum/:id", component: index_1.ForumSubsectionListComponent, data: { title: "Раздел форума" } },
    { path: "forum/:id/edit", component: index_1.ForumSubsectionEditComponent, data: {
            title: "Создание подраздела",
            roles: ["newsStart"]
        }, canActivate: [index_2.RoleGuard] }
];


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var forumTheme_model_1 = __webpack_require__(38);
var index_1 = __webpack_require__(20);
var forumTheme_service_1 = __webpack_require__(21);
var ForumThemeEditComponent = (function () {
    function ForumThemeEditComponent(service, formBuilder, route, subsectionService) {
        this.service = service;
        this.formBuilder = formBuilder;
        this.route = route;
        this.subsectionService = subsectionService;
        this.id = 0;
    }
    ForumThemeEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.editForm = this.formBuilder.group({
            'subsectionId': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ],
            'name': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ],
            'description': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ]
        });
        this.sub = this.route.params.subscribe(function (params) {
            _this.id = +params["id"];
            if (_this.id > 0) {
                _this.service
                    .getSingle(_this.id)
                    .subscribe(function (data) { return _this.editForm.patchValue(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
        this.subsectionService.getAll()
            .subscribe(function (data) { return _this.forumSubsections = data; }, function (error) { return console.log(error); }, function () { });
    };
    ForumThemeEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    ForumThemeEditComponent.prototype.onSubmit = function () {
        var model = new forumTheme_model_1.ForumTheme();
        model.id = this.id;
        model.subsectionId = this.editForm.controls["subsectionId"].value;
        model.name = this.editForm.controls["name"].value;
        model.description = this.editForm.controls["description"].value;
        var res;
        if (this.id > 0) {
            var result = this.service.update(this.id, model).subscribe(function (data) { return res = data; });
        }
        else {
            var result = this.service.create(model).subscribe(function (data) { return res = data; });
        }
        if (res !== null) {
        }
    };
    return ForumThemeEditComponent;
}());
ForumThemeEditComponent = __decorate([
    core_1.Component({
        selector: "forumTheme-edit",
        template: __webpack_require__(79)
    }),
    __metadata("design:paramtypes", [forumTheme_service_1.ForumThemeService, forms_1.FormBuilder, router_1.ActivatedRoute, index_1.ForumSubsectionService])
], ForumThemeEditComponent);
exports.ForumThemeEditComponent = ForumThemeEditComponent;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var common_1 = __webpack_require__(7);
var forumTheme_service_1 = __webpack_require__(21);
var index_1 = __webpack_require__(1);
var ForumThemeListComponent = (function () {
    function ForumThemeListComponent(service, rolesChecked, route, location) {
        this.service = service;
        this.rolesChecked = rolesChecked;
        this.route = route;
        this.location = location;
        this.page = 1;
        this.itemsPerPage = 15;
    }
    ForumThemeListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.sub2 = this.route.queryParams.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
        });
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            _this.update(id);
        });
    };
    ;
    ForumThemeListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
        this.sub2.unsubscribe();
    };
    ForumThemeListComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update(this.item.id);
        var newUrl = "forum/theme/" + this.item.id + "?page=" + this.page;
        this.location.replaceState(newUrl);
    };
    ;
    ForumThemeListComponent.prototype.update = function (id) {
        var _this = this;
        this.service.getSingleWithMessages(id, this.page)
            .subscribe(function (data) {
            _this.item = data;
            _this.itemsPerPage = data.messages.itemPerPage;
            _this.items = data.messages.list;
            _this.totalItems = data.messages.totalItems;
        }, function (error) { return console.log(error); }, function () { });
    };
    return ForumThemeListComponent;
}());
ForumThemeListComponent = __decorate([
    core_1.Component({
        selector: "forumTheme-list",
        template: __webpack_require__(80)
    }),
    __metadata("design:paramtypes", [forumTheme_service_1.ForumThemeService,
        index_1.RolesCheckedService,
        router_1.ActivatedRoute, common_1.Location])
], ForumThemeListComponent);
exports.ForumThemeListComponent = ForumThemeListComponent;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(39);
var index_2 = __webpack_require__(5);
exports.forumThemeRoutes = [
    { path: "forum/theme/:id", component: index_1.ForumThemeListComponent, data: { title: "Тема форума" } },
    {
        path: "forum/theme/:id/edit",
        component: index_1.ForumThemeEditComponent,
        data: { title: "Создание темы", roles: ["newsStart"] },
        canActivate: [index_2.RoleGuard]
    }
];


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var AboutClubComponent = (function () {
    function AboutClubComponent() {
    }
    return AboutClubComponent;
}());
AboutClubComponent = __decorate([
    core_1.Component({
        selector: "<about-club>",
        template: __webpack_require__(81)
    }),
    __metadata("design:paramtypes", [])
], AboutClubComponent);
exports.AboutClubComponent = AboutClubComponent;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ClubHistoryComponent = (function () {
    function ClubHistoryComponent() {
    }
    return ClubHistoryComponent;
}());
ClubHistoryComponent = __decorate([
    core_1.Component({
        selector: "<club-history>",
        template: __webpack_require__(82)
    }),
    __metadata("design:paramtypes", [])
], ClubHistoryComponent);
exports.ClubHistoryComponent = ClubHistoryComponent;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var CoachTeamComponent = (function () {
    function CoachTeamComponent() {
    }
    return CoachTeamComponent;
}());
CoachTeamComponent = __decorate([
    core_1.Component({
        selector: "<coach-team>",
        template: __webpack_require__(83)
    }),
    __metadata("design:paramtypes", [])
], CoachTeamComponent);
exports.CoachTeamComponent = CoachTeamComponent;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(40);
exports.homeRoutes = [
    { path: "clubHistory", component: index_1.ClubHistoryComponent, data: { title: "История клуба" } },
    { path: "coachTeam", component: index_1.CoachTeamComponent, data: { title: "Тренерский состав" } },
    { path: "rules", component: index_1.RulesComponent, data: { title: "Правила" } },
    { path: "aboutClub", component: index_1.AboutClubComponent, data: { title: "О клубе" } },
    { path: "squad", component: index_1.SquadComponent, data: { title: "Состав команды" } }
];


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var admin_service_1 = __webpack_require__(32);
var index_1 = __webpack_require__(1);
var RightSidebarComponent = (function () {
    function RightSidebarComponent(service, rolesChecked) {
        this.service = service;
        this.rolesChecked = rolesChecked;
    }
    RightSidebarComponent.prototype.ngOnInit = function () {
        this.roles = this.rolesChecked.checkRoles();
    };
    RightSidebarComponent.prototype.updateEplTable = function () {
        this.service
            .updateEplTable()
            .subscribe(function (data) {
            if (data) {
            }
        }, function (error) { return console.log(error); }, function () { return console.log(""); });
    };
    return RightSidebarComponent;
}());
RightSidebarComponent = __decorate([
    core_1.Component({
        selector: "right-sidebar",
        template: __webpack_require__(84)
    }),
    __metadata("design:paramtypes", [admin_service_1.AdminService, index_1.RolesCheckedService])
], RightSidebarComponent);
exports.RightSidebarComponent = RightSidebarComponent;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var RulesComponent = (function () {
    function RulesComponent() {
    }
    return RulesComponent;
}());
RulesComponent = __decorate([
    core_1.Component({
        selector: "<rules>",
        template: __webpack_require__(85)
    }),
    __metadata("design:paramtypes", [])
], RulesComponent);
exports.RulesComponent = RulesComponent;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var SquadComponent = (function () {
    function SquadComponent() {
    }
    return SquadComponent;
}());
SquadComponent = __decorate([
    core_1.Component({
        selector: "<squad>",
        template: __webpack_require__(86)
    }),
    __metadata("design:paramtypes", [])
], SquadComponent);
exports.SquadComponent = SquadComponent;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var image_service_1 = __webpack_require__(22);
var index_1 = __webpack_require__(1);
var ImageAdditionComponent = (function () {
    function ImageAdditionComponent(configuration, storage, service) {
        this.configuration = configuration;
        this.storage = storage;
        this.service = service;
        this.isMultiple = true;
        this.loadedImage = new core_1.EventEmitter();
    }
    ImageAdditionComponent.prototype.ngOnInit = function () {
    };
    ImageAdditionComponent.prototype.ngOnDestroy = function () { };
    ImageAdditionComponent.prototype.onUploadImage = function (event) {
        var _this = this;
        if (event.srcElement.files.length > 0) {
            this.service.uploadImage(event.srcElement.files)
                .subscribe(function (result) {
                if (_this.isMultiple) {
                    _this.uploadedFiles = result;
                }
                else {
                    _this.loadedImage.emit(result[0]);
                }
            }, function (error) { return console.log(error); }, function () { });
        }
    };
    return ImageAdditionComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], ImageAdditionComponent.prototype, "isMultiple", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], ImageAdditionComponent.prototype, "loadedImage", void 0);
ImageAdditionComponent = __decorate([
    core_1.Component({
        selector: "image-addition",
        template: __webpack_require__(87)
    }),
    __metadata("design:paramtypes", [app_constants_1.Configuration,
        index_1.LocalStorageService,
        image_service_1.ImageService])
], ImageAdditionComponent);
exports.ImageAdditionComponent = ImageAdditionComponent;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var image_model_1 = __webpack_require__(41);
var ImageDetailComponent = (function () {
    function ImageDetailComponent() {
    }
    ImageDetailComponent.prototype.ngOnInit = function () {
    };
    ImageDetailComponent.prototype.ngOnDestroy = function () {
    };
    return ImageDetailComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", image_model_1.Image)
], ImageDetailComponent.prototype, "item", void 0);
ImageDetailComponent = __decorate([
    core_1.Component({
        selector: "image-detail",
        template: __webpack_require__(88)
    }),
    __metadata("design:paramtypes", [])
], ImageDetailComponent);
exports.ImageDetailComponent = ImageDetailComponent;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(7);
var router_1 = __webpack_require__(2);
var image_service_1 = __webpack_require__(22);
var ImageListComponent = (function () {
    function ImageListComponent(service, location, route) {
        this.service = service;
        this.location = location;
        this.route = route;
        this.defaultPath = "content\\images";
        this.path = this.defaultPath;
    }
    ImageListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.queryParams.subscribe(function (params) {
            if (params["path"]) {
                _this.path = params["path"];
            }
            _this.updateFolder(_this.path);
        });
    };
    ImageListComponent.prototype.ngOnDestroy = function () {
    };
    ImageListComponent.prototype.showDetails = function (file) {
        this.selectedItem = file;
    };
    ImageListComponent.prototype.removeSelection = function () {
        this.selectedItem = null;
    };
    ImageListComponent.prototype.goUp = function () {
        this.path = this.path.substring(0, this.path.lastIndexOf("\\"));
        this.updateFolder(this.path);
    };
    ImageListComponent.prototype.updateFolder = function (path) {
        var _this = this;
        this.service
            .get(path)
            .subscribe(function (data) { return _this.items = data; }, function (error) { return console.log(error); }, function () { });
        this.path = path;
        var newUrl = "image?path=" + path;
        this.location.replaceState(newUrl);
    };
    return ImageListComponent;
}());
ImageListComponent = __decorate([
    core_1.Component({
        selector: "image-list",
        template: __webpack_require__(89)
    }),
    __metadata("design:paramtypes", [image_service_1.ImageService, common_1.Location, router_1.ActivatedRoute])
], ImageListComponent);
exports.ImageListComponent = ImageListComponent;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(42);
var index_2 = __webpack_require__(5);
exports.imageRoutes = [
    {
        path: "image/add",
        component: index_1.ImageAdditionComponent,
        data: { title: "Загрузка изображений", roles: ["newsStart", "blogStart"] },
        canActivate: [index_2.RoleGuard]
    },
    {
        path: "image",
        component: index_1.ImageListComponent,
        data: { title: "Изображения", roles: ["newsStart", "blogStart"] },
        canActivate: [index_2.RoleGuard]
    }
];


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var MatchCalendarComponent = (function () {
    function MatchCalendarComponent() {
    }
    return MatchCalendarComponent;
}());
MatchCalendarComponent = __decorate([
    core_1.Component({
        selector: "<match-calendar>",
        template: __webpack_require__(90)
    }),
    __metadata("design:paramtypes", [])
], MatchCalendarComponent);
exports.MatchCalendarComponent = MatchCalendarComponent;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var index_1 = __webpack_require__(23);
var index_2 = __webpack_require__(17);
var match_model_1 = __webpack_require__(160);
var MatchEditComponent = (function () {
    function MatchEditComponent(matchService, clubService, route, router, formBuilder) {
        this.matchService = matchService;
        this.clubService = clubService;
        this.route = route;
        this.router = router;
        this.formBuilder = formBuilder;
    }
    MatchEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.initForm();
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            if (id > 0) {
                _this.matchService.getSingle(id)
                    .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
        this.clubService.getByName("")
            .subscribe(function (data) { return _this.parseClubs(data); }, function (error) { return console.log(error); }, function () { });
    };
    MatchEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    MatchEditComponent.prototype.onSubmit = function () {
        var newsItem = this.parseForm();
        if (this.id > 0) {
            this.matchService.update(this.id, newsItem)
                .subscribe(function (data) { return console.log(data.id); }, function (error) { return console.log(error); }, function () { });
        }
        else {
            this.matchService.create(newsItem)
                .subscribe(function (data) { return console.log(data.id); }, function (error) { return console.log(error); }, function () { });
        }
    };
    MatchEditComponent.prototype.parse = function (data) {
        this.id = data.id;
        this.editForm.patchValue(data);
    };
    MatchEditComponent.prototype.parseForm = function () {
        var item = new match_model_1.Match();
        item.id = this.id;
        item.clubId = this.editForm.controls["clubId"].value;
        item.isHome = this.editForm.controls["isHome"].value;
        item.dateTime = this.editForm.controls["dateTime"].value;
        item.typeId = this.editForm.controls["typeId"].value;
        return item;
    };
    MatchEditComponent.prototype.initForm = function () {
        this.editForm = this.formBuilder.group({
            'clubId': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'isHome': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'dateTime': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'typeId': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])]
        });
    };
    MatchEditComponent.prototype.parseClubs = function (items) {
        this.clubs = items;
    };
    return MatchEditComponent;
}());
MatchEditComponent = __decorate([
    core_1.Component({
        selector: "match-edit",
        template: __webpack_require__(91)
    }),
    __metadata("design:paramtypes", [index_1.MatchService,
        index_2.ClubService,
        router_1.ActivatedRoute,
        router_1.Router,
        forms_1.FormBuilder])
], MatchEditComponent);
exports.MatchEditComponent = MatchEditComponent;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var match_service_1 = __webpack_require__(43);
var MatchListComponent = (function () {
    function MatchListComponent(matchService, route) {
        this.matchService = matchService;
        this.route = route;
        this.page = 1;
        this.itemsPerPage = 15;
    }
    MatchListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
            _this.update();
        });
    };
    MatchListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    MatchListComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    MatchListComponent.prototype.update = function () {
    };
    return MatchListComponent;
}());
MatchListComponent = __decorate([
    core_1.Component({
        selector: "match-list",
        template: __webpack_require__(92)
    }),
    __metadata("design:paramtypes", [match_service_1.MatchService, router_1.ActivatedRoute])
], MatchListComponent);
exports.MatchListComponent = MatchListComponent;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Match = (function () {
    function Match() {
    }
    return Match;
}());
exports.Match = Match;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(23);
var index_2 = __webpack_require__(5);
exports.matchRoutes = [
    {
        path: "match/:id/edit",
        component: index_1.MatchEditComponent,
        data: { title: "Создание матча", roles: ["adminStart"] },
        canActivate: [index_2.RoleGuard]
    },
    {
        path: "match",
        component: index_1.MatchListComponent,
        data: { title: "Матчи", roles: ["adminStart"] },
        canActivate: [index_2.RoleGuard]
    },
    { path: "calendar", component: index_1.MatchCalendarComponent, data: { title: "Календарь" } }
];


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var common_1 = __webpack_require__(7);
var materialComment_model_1 = __webpack_require__(24);
var materialComment_service_1 = __webpack_require__(12);
var index_1 = __webpack_require__(1);
var ng2_bootstrap_1 = __webpack_require__(10);
var MaterialCommentDetailComponent = (function () {
    function MaterialCommentDetailComponent(materialCommentService, location, rolesChecked, formBuilder) {
        this.materialCommentService = materialCommentService;
        this.location = location;
        this.rolesChecked = rolesChecked;
        this.formBuilder = formBuilder;
    }
    MaterialCommentDetailComponent.prototype.ngOnInit = function () {
        this.roles = this.rolesChecked.checkRoles();
        this.commentForm = this.formBuilder.group({
            'message': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'answer': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])]
        });
    };
    MaterialCommentDetailComponent.prototype.showAddCommentModal = function (index) {
        this.addCommentModal.show();
    };
    MaterialCommentDetailComponent.prototype.hideModal = function () {
        this.addCommentModal.hide();
        this.hideEditModal();
        this.deleteModal.hide();
    };
    MaterialCommentDetailComponent.prototype.showDeleteModal = function (index) {
        this.deleteModal.show();
    };
    MaterialCommentDetailComponent.prototype.hideEditModal = function () {
        this.editCommentModal.hide();
        this.cleanControls();
    };
    MaterialCommentDetailComponent.prototype.addComment = function (value) {
        var _this = this;
        var comment = this.getComment();
        this.materialCommentService.create(comment)
            .subscribe(function (data) {
            _this.item.children.push(data);
            _this.cleanControls();
            _this.addCommentModal.hide();
        }, function (error) { return console.log(error); }, function () { });
    };
    MaterialCommentDetailComponent.prototype.delete = function () {
        var _this = this;
        var result;
        this.materialCommentService.delete(this.item.id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                _this.item.children.forEach(function (x) {
                    if (_this.parent) {
                        x.parentId = _this.parent.id;
                        _this.parent.children.push(x);
                    }
                    else {
                        x.parentId = undefined;
                    }
                });
                _this.item = undefined;
                _this.hideModal();
            }
        });
    };
    MaterialCommentDetailComponent.prototype.showEditModal = function () {
        this.commentForm.patchValue(this.item);
        this.editCommentModal.show();
    };
    MaterialCommentDetailComponent.prototype.edit = function () {
        var _this = this;
        var comment = this.getComment();
        comment.answer = this.commentForm.controls["answer"].value;
        this.materialCommentService.update(this.item.id, comment)
            .subscribe(function (data) {
            _this.item = comment;
            _this.hideEditModal();
        }, function (error) { return console.log(error); }, function () { });
    };
    MaterialCommentDetailComponent.prototype.getComment = function () {
        var comment = this.item;
        comment.message = this.commentForm.controls["message"].value;
        return comment;
    };
    MaterialCommentDetailComponent.prototype.cleanControls = function () {
        this.commentForm.controls["message"].patchValue("");
        this.commentForm.controls["message"].updateValueAndValidity();
        this.commentForm.controls["answer"].patchValue("");
        this.commentForm.controls["answer"].updateValueAndValidity();
    };
    return MaterialCommentDetailComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", materialComment_model_1.MaterialComment)
], MaterialCommentDetailComponent.prototype, "item", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], MaterialCommentDetailComponent.prototype, "deep", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], MaterialCommentDetailComponent.prototype, "canCommentary", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], MaterialCommentDetailComponent.prototype, "materialId", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", materialComment_model_1.MaterialComment)
], MaterialCommentDetailComponent.prototype, "parent", void 0);
__decorate([
    core_1.ViewChild("addCommentModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], MaterialCommentDetailComponent.prototype, "addCommentModal", void 0);
__decorate([
    core_1.ViewChild("editCommentModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], MaterialCommentDetailComponent.prototype, "editCommentModal", void 0);
__decorate([
    core_1.ViewChild("deleteModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], MaterialCommentDetailComponent.prototype, "deleteModal", void 0);
MaterialCommentDetailComponent = __decorate([
    core_1.Component({
        selector: "materialComment-detail",
        template: __webpack_require__(93)
    }),
    __metadata("design:paramtypes", [materialComment_service_1.MaterialCommentService,
        common_1.Location,
        index_1.RolesCheckedService,
        forms_1.FormBuilder])
], MaterialCommentDetailComponent);
exports.MaterialCommentDetailComponent = MaterialCommentDetailComponent;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var materialComment_service_1 = __webpack_require__(12);
var common_1 = __webpack_require__(7);
var index_1 = __webpack_require__(1);
var ng2_bootstrap_1 = __webpack_require__(10);
var MaterialCommentListComponent = (function () {
    function MaterialCommentListComponent(materialCommentService, location, rolesChecked) {
        this.materialCommentService = materialCommentService;
        this.location = location;
        this.rolesChecked = rolesChecked;
        this.page = 1;
        this.itemsPerPage = 15;
        this.selectedItemIndex = undefined;
    }
    MaterialCommentListComponent.prototype.ngOnInit = function () {
        this.roles = this.rolesChecked.checkRoles();
        this.update();
    };
    MaterialCommentListComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update();
        var newUrl = "materialComment/list/" + this.page;
        this.location.replaceState(newUrl);
    };
    ;
    MaterialCommentListComponent.prototype.update = function () {
        var _this = this;
        this.materialCommentService
            .getAll(this.page)
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { });
    };
    MaterialCommentListComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    MaterialCommentListComponent.prototype.hideModal = function () {
        this.selectedItemIndex = undefined;
        this.deleteModal.hide();
    };
    MaterialCommentListComponent.prototype.verify = function (index) {
        var _this = this;
        var result;
        this.materialCommentService
            .verify(this.items[index].id)
            .subscribe(function (data) { return result = data; }, function (error) { return console.log(error); }, function () {
            if (result) {
                _this.items[index].isVerified = true;
            }
        });
    };
    MaterialCommentListComponent.prototype.showDeleteModal = function (index) {
        this.selectedItemIndex = index;
        this.deleteModal.show();
    };
    MaterialCommentListComponent.prototype.delete = function () {
        var _this = this;
        var result;
        this.materialCommentService.delete(this.items[this.selectedItemIndex].id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                _this.items.splice(_this.selectedItemIndex, 1);
                _this.hideModal();
            }
        });
    };
    return MaterialCommentListComponent;
}());
__decorate([
    core_1.ViewChild("deleteModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], MaterialCommentListComponent.prototype, "deleteModal", void 0);
MaterialCommentListComponent = __decorate([
    core_1.Component({
        selector: "materialComment-list",
        template: __webpack_require__(94)
    }),
    __metadata("design:paramtypes", [materialComment_service_1.MaterialCommentService, common_1.Location, index_1.RolesCheckedService])
], MaterialCommentListComponent);
exports.MaterialCommentListComponent = MaterialCommentListComponent;


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var materialComment_model_1 = __webpack_require__(24);
var materialComment_service_1 = __webpack_require__(12);
var common_1 = __webpack_require__(7);
var index_1 = __webpack_require__(1);
var MaterialCommentSectionComponent = (function () {
    function MaterialCommentSectionComponent(materialCommentService, location, rolesChecked, formBuilder) {
        this.materialCommentService = materialCommentService;
        this.location = location;
        this.rolesChecked = rolesChecked;
        this.formBuilder = formBuilder;
        this.items = [];
        this.page = 1;
        this.itemsPerPage = 15;
        this.canCommentary = false;
    }
    MaterialCommentSectionComponent.prototype.ngOnInit = function () {
        this.roles = this.rolesChecked.checkRoles();
        this.update();
        this.commentForm = this.formBuilder.group({
            'message': ["", forms_1.Validators.compose([
                    forms_1.Validators.required, forms_1.Validators.minLength(3)
                ])]
        });
    };
    MaterialCommentSectionComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update();
    };
    ;
    MaterialCommentSectionComponent.prototype.update = function () {
        var _this = this;
        this.materialCommentService
            .getAllByMaterial(this.page, this.materialId)
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { });
    };
    MaterialCommentSectionComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    MaterialCommentSectionComponent.prototype.onSubmit = function (value) {
        var _this = this;
        var comment = new materialComment_model_1.MaterialComment();
        comment.message = this.commentForm.controls["message"].value;
        comment.materialId = this.materialId;
        this.materialCommentService.create(comment)
            .subscribe(function (data) {
            _this.items.push(data);
            _this.commentForm.controls["message"].patchValue("");
        }, function (error) { return console.log(error); }, function () { });
    };
    return MaterialCommentSectionComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], MaterialCommentSectionComponent.prototype, "materialId", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], MaterialCommentSectionComponent.prototype, "canCommentary", void 0);
MaterialCommentSectionComponent = __decorate([
    core_1.Component({
        selector: "comments",
        template: __webpack_require__(95)
    }),
    __metadata("design:paramtypes", [materialComment_service_1.MaterialCommentService, common_1.Location, index_1.RolesCheckedService,
        forms_1.FormBuilder])
], MaterialCommentSectionComponent);
exports.MaterialCommentSectionComponent = MaterialCommentSectionComponent;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(44);
exports.materialCommentRoutes = [
    { path: "materialComment", component: index_1.MaterialCommentListComponent, data: { title: "Комментарии" } },
    { path: "materialComment/list", component: index_1.MaterialCommentListComponent, data: { title: "Комментарии" } },
    { path: "materialComment/list/:page", component: index_1.MaterialCommentListComponent, data: { title: "Комментарии" } },
    { path: "materialComment/list/:page/:categoryId", component: index_1.MaterialCommentListComponent, data: { title: "Комментарии" } },
];


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var NewsCategory = (function () {
    function NewsCategory() {
    }
    return NewsCategory;
}());
exports.NewsCategory = NewsCategory;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var newsCategory_list_component_1 = __webpack_require__(47);
var newsCategory_edit_component_1 = __webpack_require__(46);
var index_1 = __webpack_require__(5);
exports.newsCategoryRoutes = [
    { path: "newsCategory", component: newsCategory_list_component_1.NewsCategoryListComponent, data: { title: "Категории новостей" } },
    {
        path: "newsCategory/:id/edit",
        component: newsCategory_edit_component_1.NewsCategoryEditComponent,
        data: { title: "Создание категории", roles: ["newsFull"] },
        canActivate: [index_1.RoleGuard]
    }
];


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(9);
var news_service_1 = __webpack_require__(13);
var router_1 = __webpack_require__(2);
var index_1 = __webpack_require__(1);
var ng2_bootstrap_1 = __webpack_require__(10);
var NewsDetailComponent = (function () {
    function NewsDetailComponent(newsService, route, localStorage, rolesChecked, router, titleService) {
        this.newsService = newsService;
        this.route = route;
        this.localStorage = localStorage;
        this.rolesChecked = rolesChecked;
        this.router = router;
        this.titleService = titleService;
    }
    NewsDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            _this.newsService.getSingle(id)
                .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
        });
    };
    NewsDetailComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    NewsDetailComponent.prototype.showActivateModal = function (index) {
        this.activateModal.show();
    };
    NewsDetailComponent.prototype.showDeleteModal = function (index) {
        this.deleteModal.show();
    };
    NewsDetailComponent.prototype.hideModal = function () {
        this.activateModal.hide();
        this.deleteModal.hide();
    };
    NewsDetailComponent.prototype.activate = function () {
        var _this = this;
        var result;
        this.newsService.activate(this.item.id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                _this.item.pending = false;
                _this.hideModal();
            }
        });
    };
    NewsDetailComponent.prototype.delete = function () {
        var _this = this;
        var result;
        this.newsService.delete(this.item.id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                _this.hideModal();
                _this.router.navigate(["/news"]);
            }
        });
    };
    NewsDetailComponent.prototype.parse = function (item) {
        this.item = item;
        this.titleService.setTitle(item.title);
        this.addView();
    };
    NewsDetailComponent.prototype.addView = function () {
        var id = this.item.id;
        if (!this.localStorage.tryAddViewForNews(id)) {
            this.newsService.addView(id).subscribe(function (data) { return data; });
        }
    };
    return NewsDetailComponent;
}());
__decorate([
    core_1.ViewChild("activateModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], NewsDetailComponent.prototype, "activateModal", void 0);
__decorate([
    core_1.ViewChild("deleteModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], NewsDetailComponent.prototype, "deleteModal", void 0);
NewsDetailComponent = __decorate([
    core_1.Component({
        selector: "news-detail",
        template: __webpack_require__(98)
    }),
    __metadata("design:paramtypes", [news_service_1.NewsService,
        router_1.ActivatedRoute,
        index_1.LocalStorageService,
        index_1.RolesCheckedService,
        router_1.Router,
        platform_browser_1.Title])
], NewsDetailComponent);
exports.NewsDetailComponent = NewsDetailComponent;


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var news_service_1 = __webpack_require__(13);
var news_model_1 = __webpack_require__(48);
var index_1 = __webpack_require__(45);
var index_2 = __webpack_require__(1);
var NewsEditComponent = (function () {
    function NewsEditComponent(newsService, newsCategoryService, route, router, rolesChecked, formBuilder) {
        this.newsService = newsService;
        this.newsCategoryService = newsCategoryService;
        this.route = route;
        this.router = router;
        this.rolesChecked = rolesChecked;
        this.formBuilder = formBuilder;
        this.item = new news_model_1.News();
    }
    NewsEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.initForm();
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            if (id > 0) {
                _this.newsService.getSingle(id)
                    .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
        this.newsCategoryService.getAll()
            .subscribe(function (data) { return _this.parseCategories(data); }, function (error) { return console.log(error); }, function () { });
    };
    NewsEditComponent.prototype.cli = function () {
        console.log(this.editForm.value);
    };
    NewsEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    NewsEditComponent.prototype.changeMessage = function (event) {
        console.log(123);
        console.log(event);
    };
    NewsEditComponent.prototype.onSubmit = function () {
        var newsItem = this.parseForm();
        if (this.id > 0) {
            this.newsService.update(this.id, newsItem)
                .subscribe(function (data) { return console.log(data.id); }, function (error) { return console.log(error); }, function () { });
        }
        else {
            this.newsService.create(newsItem)
                .subscribe(function (data) { return console.log(data.id); }, function (error) { return console.log(error); }, function () { });
        }
    };
    NewsEditComponent.prototype.updateImage = function (path) {
        this.editForm.patchValue({ photo: path });
    };
    NewsEditComponent.prototype.parse = function (data) {
        this.id = data.id;
        this.editForm.patchValue(data);
        this.item = data;
    };
    NewsEditComponent.prototype.parseForm = function () {
        var item = new news_model_1.News();
        item.id = this.id;
        item.categoryId = this.editForm.controls["categoryId"].value;
        item.title = this.editForm.controls["title"].value;
        item.brief = this.editForm.controls["brief"].value;
        item.message = this.editForm.controls["message"].value;
        item.source = this.editForm.controls["source"].value;
        item.photo = this.editForm.controls["photo"].value;
        item.pending = this.editForm.controls["pending"].value;
        item.canCommentary = this.editForm.controls["canCommentary"].value;
        item.onTop = this.editForm.controls["onTop"].value;
        return item;
    };
    NewsEditComponent.prototype.initForm = function () {
        this.editForm = this.formBuilder.group({
            'categoryId': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'title': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'brief': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'message': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'source': ["", forms_1.Validators.compose([])],
            'photo': ["", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'canCommentary': ["true", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'onTop': ["false", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            'pending': ["true", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])]
        });
    };
    NewsEditComponent.prototype.parseCategories = function (items) {
        this.categories = items;
    };
    return NewsEditComponent;
}());
NewsEditComponent = __decorate([
    core_1.Component({
        selector: "news-edit",
        template: __webpack_require__(99)
    }),
    __metadata("design:paramtypes", [news_service_1.NewsService,
        index_1.NewsCategoryService,
        router_1.ActivatedRoute,
        router_1.Router,
        index_2.RolesCheckedService,
        forms_1.FormBuilder])
], NewsEditComponent);
exports.NewsEditComponent = NewsEditComponent;


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(7);
var news_service_1 = __webpack_require__(13);
var newsFilters_model_1 = __webpack_require__(172);
var router_1 = __webpack_require__(2);
var index_1 = __webpack_require__(1);
var ng2_bootstrap_1 = __webpack_require__(10);
var NewsListComponent = (function () {
    function NewsListComponent(router, newsService, route, location, rolesChecked) {
        this.router = router;
        this.newsService = newsService;
        this.route = route;
        this.location = location;
        this.rolesChecked = rolesChecked;
        this.page = 1;
        this.itemsPerPage = 15;
        this.selectedItemIndex = null;
    }
    NewsListComponent.prototype.showActivateModal = function (index) {
        this.selectedItemIndex = index;
        this.activateModal.show();
    };
    NewsListComponent.prototype.showDeleteModal = function (index) {
        this.selectedItemIndex = index;
        this.deleteModal.show();
    };
    NewsListComponent.prototype.hideModal = function () {
        this.selectedItemIndex = null;
        this.activateModal.hide();
        this.deleteModal.hide();
    };
    NewsListComponent.prototype.activate = function () {
        var _this = this;
        var result;
        var news = this.items[this.selectedItemIndex];
        this.newsService.activate(news.id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                news.pending = false;
                _this.hideModal();
            }
        });
    };
    NewsListComponent.prototype.delete = function () {
        var _this = this;
        var result;
        this.newsService.delete(this.items[this.selectedItemIndex].id)
            .subscribe(function (res) { return result = res; }, function (e) { return console.log(e); }, function () {
            if (result) {
                _this.items.splice(_this.selectedItemIndex, 1);
                _this.hideModal();
            }
        });
    };
    NewsListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.sub = this.route.params.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
        });
        this.parseQueryParamsAndUpdate();
    };
    NewsListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
        this.sub2.unsubscribe();
    };
    NewsListComponent.prototype.pageChanged = function (event) {
        this.page = event.page;
        this.update();
        var newUrl = "news/list/" + this.page + "?";
        if (this.categoryId) {
            newUrl = newUrl + "?categoryId=" + this.categoryId;
        }
        if (this.userName) {
            newUrl = "" + newUrl + (this.categoryId ? "&" : "?") + "userName=" + this.userName;
        }
        this.location.replaceState(newUrl);
    };
    ;
    NewsListComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    NewsListComponent.prototype.update = function () {
        var _this = this;
        var filters = new newsFilters_model_1.MaterialFilters();
        filters.categoryId = this.categoryId || null;
        filters.materialType = "News";
        filters.userName = this.userName || null;
        filters.page = this.page;
        this.newsService
            .getAll(filters)
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { });
    };
    NewsListComponent.prototype.parseQueryParamsAndUpdate = function () {
        var _this = this;
        this.sub2 = this.route.queryParams.subscribe(function (qParams) {
            _this.categoryId = qParams["categoryId"] || "";
            _this.userName = qParams["userName"] || "";
            _this.update();
        });
    };
    return NewsListComponent;
}());
__decorate([
    core_1.ViewChild("activateModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], NewsListComponent.prototype, "activateModal", void 0);
__decorate([
    core_1.ViewChild("deleteModal"),
    __metadata("design:type", ng2_bootstrap_1.ModalDirective)
], NewsListComponent.prototype, "deleteModal", void 0);
NewsListComponent = __decorate([
    core_1.Component({
        selector: "news-list",
        template: __webpack_require__(100)
    }),
    __metadata("design:paramtypes", [router_1.Router,
        news_service_1.NewsService,
        router_1.ActivatedRoute,
        common_1.Location,
        index_1.RolesCheckedService])
], NewsListComponent);
exports.NewsListComponent = NewsListComponent;


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(26);
var index_2 = __webpack_require__(5);
exports.newsRoutes = [
    { path: "news", component: index_1.NewsListComponent, data: { title: "Новости", breadcrumb: "Новости" } },
    { path: "news/list", component: index_1.NewsListComponent, data: { title: "Новости", breadcrumb: "Новости" } },
    { path: "news/list/:page", component: index_1.NewsListComponent, data: { title: "Новости", breadcrumb: "Новости" } },
    { path: "news/:id", component: index_1.NewsDetailComponent, data: { title: "Новость", breadcrumb: "Новость" } },
    {
        path: "news/:id/edit",
        component: index_1.NewsEditComponent,
        data: { title: "Создание новости", breadcrumb: "Создание новости", roles: ["newsStart", "blogStart"] },
        canActivate: [index_2.RoleGuard]
    }
];


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var MaterialFilters = (function () {
    function MaterialFilters() {
        this.page = 1;
    }
    return MaterialFilters;
}());
exports.MaterialFilters = MaterialFilters;


/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var PlayerStatisticsComponent = (function () {
    function PlayerStatisticsComponent() {
    }
    return PlayerStatisticsComponent;
}());
PlayerStatisticsComponent = __decorate([
    core_1.Component({
        selector: "<player-statistics>",
        template: __webpack_require__(101)
    }),
    __metadata("design:paramtypes", [])
], PlayerStatisticsComponent);
exports.PlayerStatisticsComponent = PlayerStatisticsComponent;


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(49);
exports.playerRoutes = [
    { path: "player/statistics", component: index_1.PlayerStatisticsComponent, data: { title: "Статистика игроков" } },
];


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var pm_service_1 = __webpack_require__(11);
var index_1 = __webpack_require__(1);
var PmDetailComponent = (function () {
    function PmDetailComponent(pmService, rolesChecked, route) {
        this.pmService = pmService;
        this.rolesChecked = rolesChecked;
        this.route = route;
    }
    PmDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.roles = this.rolesChecked.checkRoles();
        this.sub = this.route.params.subscribe(function (params) {
            var id = +params["id"];
            _this.pmService.getSingle(id)
                .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
        });
    };
    PmDetailComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    PmDetailComponent.prototype.writePm = function () {
        this.selectedUserId = this.item.receiverId;
    };
    PmDetailComponent.prototype.closePmWindow = function (event) {
        this.selectedUserId = null;
    };
    PmDetailComponent.prototype.parse = function (item) {
        this.item = item;
    };
    return PmDetailComponent;
}());
PmDetailComponent = __decorate([
    core_1.Component({
        selector: "pm-detail",
        template: __webpack_require__(102)
    }),
    __metadata("design:paramtypes", [pm_service_1.PmService,
        index_1.RolesCheckedService,
        router_1.ActivatedRoute])
], PmDetailComponent);
exports.PmDetailComponent = PmDetailComponent;


/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var pm_model_1 = __webpack_require__(27);
var pm_service_1 = __webpack_require__(11);
var PmEditComponent = (function () {
    function PmEditComponent(service, formBuilder, route, router) {
        this.service = service;
        this.formBuilder = formBuilder;
        this.route = route;
        this.router = router;
        this.id = 0;
        this.users = "/api/v1/user/GetUserNames?typed=:keyword";
    }
    PmEditComponent.prototype.ngOnInit = function () {
        this.editForm = this.formBuilder.group({
            'receiver': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ],
            'title': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required,
                    forms_1.Validators.maxLength(30)
                ])
            ],
            'message': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required,
                    forms_1.Validators.maxLength(500)
                ])
            ]
        });
    };
    PmEditComponent.prototype.ngOnDestroy = function () {
    };
    PmEditComponent.prototype.updateUsername = function (user) {
        if (user) {
            this.editForm.patchValue({ receiver: user.id });
        }
    };
    PmEditComponent.prototype.onSubmit = function () {
        var model = new pm_model_1.Pm();
        model.receiverId = this.editForm.controls["receiver"].value;
        model.title = this.editForm.controls["title"].value;
        model.message = this.editForm.controls["message"].value;
        var res = this.service.create(model).subscribe(function (data) { return data; });
        this.router.navigate(["/pm"]);
    };
    return PmEditComponent;
}());
PmEditComponent = __decorate([
    core_1.Component({
        selector: "pm-edit",
        template: __webpack_require__(103)
    }),
    __metadata("design:paramtypes", [pm_service_1.PmService,
        forms_1.FormBuilder,
        router_1.ActivatedRoute,
        router_1.Router])
], PmEditComponent);
exports.PmEditComponent = PmEditComponent;


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var pm_service_1 = __webpack_require__(11);
var PmListComponent = (function () {
    function PmListComponent(pmService, router) {
        this.pmService = pmService;
        this.router = router;
    }
    PmListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.pmService
            .getAll()
            .subscribe(function (data) { return _this.parse(data); }, function (error) { return console.log(error); }, function () { });
    };
    PmListComponent.prototype.parse = function (model) {
        this.received = model.received;
        this.sent = model.sent;
    };
    PmListComponent.prototype.delete = function (index) {
    };
    PmListComponent.prototype.writePm = function () {
        this.router.navigate(["/pm", 0, "edit"]);
    };
    return PmListComponent;
}());
PmListComponent = __decorate([
    core_1.Component({
        selector: "pm-list",
        template: __webpack_require__(104)
    }),
    __metadata("design:paramtypes", [pm_service_1.PmService, router_1.Router])
], PmListComponent);
exports.PmListComponent = PmListComponent;


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var router_1 = __webpack_require__(2);
var pm_model_1 = __webpack_require__(27);
var pm_service_1 = __webpack_require__(11);
var PmReplyComponent = (function () {
    function PmReplyComponent(service, formBuilder, route, router) {
        this.service = service;
        this.formBuilder = formBuilder;
        this.route = route;
        this.router = router;
        this.id = 0;
        this.close = new core_1.EventEmitter();
    }
    PmReplyComponent.prototype.ngOnInit = function () {
        this.editForm = this.formBuilder.group({
            'title': [
                this.getTitle(), forms_1.Validators.compose([
                    forms_1.Validators.required,
                    forms_1.Validators.maxLength(30)
                ])
            ],
            'message': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required,
                    forms_1.Validators.maxLength(500)
                ])
            ]
        });
    };
    PmReplyComponent.prototype.ngOnDestroy = function () {
    };
    PmReplyComponent.prototype.onSubmit = function () {
        var _this = this;
        var model = new pm_model_1.Pm();
        model.receiverId = this.userId;
        model.title = this.editForm.controls["title"].value;
        model.message = this.editForm.controls["message"].value;
        var res = this.service.create(model).subscribe(function (data) {
            if (data) {
                _this.closeWindow();
            }
        }, function (error) { return console.log(error); }, function () {
        });
    };
    PmReplyComponent.prototype.closeWindow = function () {
        this.close.emit({});
    };
    PmReplyComponent.prototype.getTitle = function () {
        if (!this.title) {
            return "";
        }
        var match = this.title.match(/\[.*]/);
        if (match) {
            var newValue = parseInt(match[0].substring(1, match[0].length - 1));
            return this.title.replace(/\[.*]/, "[" + ++newValue + "]");
        }
        else {
            return "Re[1]: " + this.title;
        }
    };
    return PmReplyComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], PmReplyComponent.prototype, "userName", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], PmReplyComponent.prototype, "userId", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], PmReplyComponent.prototype, "title", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], PmReplyComponent.prototype, "close", void 0);
PmReplyComponent = __decorate([
    core_1.Component({
        selector: "pm-reply",
        template: __webpack_require__(105)
    }),
    __metadata("design:paramtypes", [pm_service_1.PmService,
        forms_1.FormBuilder,
        router_1.ActivatedRoute,
        router_1.Router])
], PmReplyComponent);
exports.PmReplyComponent = PmReplyComponent;


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(50);
var index_2 = __webpack_require__(5);
exports.pmRoutes = [
    { path: "pm/:id/edit", component: index_1.PmEditComponent, data: { title: "Написание личного сообщения" }, canActivate: [index_2.RoleGuard] },
    { path: "pm/:id", component: index_1.PmDetailComponent, data: { title: "Личное сообщение" }, canActivate: [index_2.RoleGuard] },
    { path: "pm", component: index_1.PmListComponent, data: { title: "Личные сообщения" }, canActivate: [index_2.RoleGuard] }
];


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var RoleGroup = (function () {
    function RoleGroup() {
    }
    return RoleGroup;
}());
exports.RoleGroup = RoleGroup;


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__(3);
var httpWrapper_1 = __webpack_require__(6);
var RoleGroupService = (function () {
    function RoleGroupService(http, configuration) {
        var _this = this;
        this.http = http;
        this.configuration = configuration;
        this.getAll = function () {
            return _this.http.get(_this.actionUrl).map(function (res) { return res.json(); });
        };
        this.actionUrl = configuration.serverWithApiUrl + "roleGroup/";
    }
    return RoleGroupService;
}());
RoleGroupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [httpWrapper_1.HttpWrapper, app_constants_1.Configuration])
], RoleGroupService);
exports.RoleGroupService = RoleGroupService;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var SeasonEplTableComponent = (function () {
    function SeasonEplTableComponent() {
    }
    return SeasonEplTableComponent;
}());
SeasonEplTableComponent = __decorate([
    core_1.Component({
        selector: "<season-epltable>",
        template: __webpack_require__(106)
    }),
    __metadata("design:paramtypes", [])
], SeasonEplTableComponent);
exports.SeasonEplTableComponent = SeasonEplTableComponent;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(52);
exports.seasonRoutes = [
    { path: "season/eplTable", component: index_1.SeasonEplTableComponent, data: { title: "Таблица АПЛ" } }
];


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var GlobalValidators = (function () {
    function GlobalValidators() {
    }
    GlobalValidators.mailFormat = function (control) {
        var EMAIL_REGEXP = /^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;
        if (control.value !== "" && (control.value.length <= 5 || !EMAIL_REGEXP.test(control.value))) {
            return { "incorrectMailFormat": true };
        }
        return null;
    };
    GlobalValidators.matchingPasswords = function (passwordKey, confirmPasswordKey) {
        return function (group) {
            var password = group.controls[passwordKey];
            var confirmPassword = group.controls[confirmPasswordKey];
            if (password.value !== confirmPassword.value) {
                return {
                    mismatchedPasswords: true
                };
            }
        };
    };
    GlobalValidators.mustBeGreaterThanZero = function (control) {
        if (control.value !== "" && +control.value > 0) {
            return null;
        }
        return { "ValueMustBeGreaterThanZero": true };
    };
    return GlobalValidators;
}());
GlobalValidators = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], GlobalValidators);
exports.GlobalValidators = GlobalValidators;


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var core_1 = __webpack_require__(0);
exports.LocalStorage = new core_1.OpaqueToken("localStorage");


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var Pageable = (function () {
    function Pageable() {
    }
    return Pageable;
}());
exports.Pageable = Pageable;


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(2);
var platform_browser_1 = __webpack_require__(9);
__webpack_require__(199);
var BreadcrumbComponent = (function () {
    function BreadcrumbComponent(activatedRoute, router, titleService) {
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.titleService = titleService;
        this.breadcrumbs = [];
    }
    BreadcrumbComponent.prototype.ngOnInit = function () {
        var _this = this;
        var ROUTE_DATA_BREADCRUMB = "breadcrumb";
        this.router.events
            .filter(function (event) { return event instanceof router_1.NavigationEnd; })
            .map(function () { return _this.activatedRoute; })
            .map(function (route) {
            while (route.firstChild)
                route = route.firstChild;
            return route;
        })
            .filter(function (route) { return route.outlet === "primary"; })
            .mergeMap(function (route) { return route.data; })
            .subscribe(function (event) {
            _this.titleService.setTitle(event["title"]);
        });
    };
    BreadcrumbComponent.prototype.getBreadcrumbs = function (route, url, breadcrumbs) {
        if (url === void 0) { url = ""; }
        if (breadcrumbs === void 0) { breadcrumbs = []; }
        var ROUTE_DATA_BREADCRUMB = "breadcrumb";
        var children = route.children;
        if (children.length === 0) {
            return breadcrumbs;
        }
        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
            var child = children_1[_i];
            if (child.outlet !== router_1.PRIMARY_OUTLET) {
                continue;
            }
            if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {
                continue;
            }
            var routeURL = child.snapshot.url.map(function (segment) { return segment.path; }).join("/");
            url += "/" + routeURL;
            var breadcrumb = {
                label: child.snapshot.data[ROUTE_DATA_BREADCRUMB],
                params: child.snapshot.params,
                url: url
            };
            breadcrumbs.push(breadcrumb);
            return this.getBreadcrumbs(child, url, breadcrumbs);
        }
    };
    return BreadcrumbComponent;
}());
BreadcrumbComponent = __decorate([
    core_1.Component({
        selector: "breadcrumb",
        template: "\n    <ol class=\"breadcrumb\">\n      <li><a routerLink=\"\" class=\"breadcrumb\">\u0413\u043B\u0430\u0432\u043D\u0430\u044F</a></li>\n      <li *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [routerLink]=\"[breadcrumb.url, breadcrumb.params]\"></a>\n      </li>\n    </ol>\n  "
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        router_1.Router,
        platform_browser_1.Title])
], BreadcrumbComponent);
exports.BreadcrumbComponent = BreadcrumbComponent;


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(187));


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var user_detail_component_1 = __webpack_require__(54);
var user_list_component_1 = __webpack_require__(55);
exports.userRoutes = [
    { path: "user", component: user_list_component_1.UserListComponent, data: { title: "Пользователи" } },
    { path: "user/list", component: user_list_component_1.UserListComponent, data: { title: "Пользователи" } },
    { path: "user/list/:page", component: user_list_component_1.UserListComponent, data: { title: "Пользователи" } },
    { path: "user/list/:page/:userName", component: user_list_component_1.UserListComponent, data: { title: "Пользователи" } },
    { path: "user/:id", component: user_detail_component_1.UserDetailComponent, data: { title: "Пользователь" } }
];


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var UserFilters = (function () {
    function UserFilters() {
        this.page = 1;
    }
    return UserFilters;
}());
exports.UserFilters = UserFilters;


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var wish_model_1 = __webpack_require__(57);
var wish_service_1 = __webpack_require__(30);
var router_1 = __webpack_require__(2);
var WishEditComponent = (function () {
    function WishEditComponent(service, formBuilder, route, router) {
        this.service = service;
        this.formBuilder = formBuilder;
        this.route = route;
        this.router = router;
        this.id = 0;
    }
    WishEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.editForm = this.formBuilder.group({
            'message': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required,
                    forms_1.Validators.maxLength(30)
                ])
            ],
            'title': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required,
                    forms_1.Validators.maxLength(300)
                ])
            ],
            'type': [
                "", forms_1.Validators.compose([
                    forms_1.Validators.required
                ])
            ]
        });
        this.sub = this.route.params.subscribe(function (params) {
            _this.id = +params["id"];
            if (_this.id > 0) {
                _this.service
                    .getSingle(_this.id)
                    .subscribe(function (data) { return _this.editForm.patchValue(data); }, function (error) { return console.log(error); }, function () { });
            }
        });
        this.updateTypes();
    };
    WishEditComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    WishEditComponent.prototype.onSubmit = function () {
        var model = new wish_model_1.Wish();
        model.id = this.id;
        model.message = this.editForm.controls["message"].value;
        model.title = this.editForm.controls["title"].value;
        model.type = this.editForm.controls["type"].value;
        var res;
        if (this.id > 0) {
            var result = this.service.update(this.id, model).subscribe(function (data) { return res = data; });
        }
        else {
            var result = this.service.create(model).subscribe(function (data) { return res = data; });
        }
        this.router.navigate(["/wish"]);
    };
    WishEditComponent.prototype.updateTypes = function () {
        var _this = this;
        this.service
            .getTypes()
            .subscribe(function (data) { return _this.types = data; });
    };
    return WishEditComponent;
}());
WishEditComponent = __decorate([
    core_1.Component({
        selector: "wish-edit",
        template: __webpack_require__(109)
    }),
    __metadata("design:paramtypes", [wish_service_1.WishService, forms_1.FormBuilder, router_1.ActivatedRoute, router_1.Router])
], WishEditComponent);
exports.WishEditComponent = WishEditComponent;


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var wish_service_1 = __webpack_require__(30);
var router_1 = __webpack_require__(2);
var WishListComponent = (function () {
    function WishListComponent(service, route) {
        this.service = service;
        this.route = route;
        this.page = 1;
        this.itemsPerPage = 15;
    }
    WishListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            if (params["page"]) {
                _this.page = +params["page"];
            }
            _this.categoryId = +params["categoryId"];
            _this.update();
        });
    };
    WishListComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    WishListComponent.prototype.parsePageable = function (pageable) {
        this.items = pageable.list;
        this.page = pageable.pageNo;
        this.itemsPerPage = pageable.itemPerPage;
        this.totalItems = pageable.totalItems;
    };
    WishListComponent.prototype.update = function () {
        var _this = this;
        this.service
            .getAll()
            .subscribe(function (data) { return _this.parsePageable(data); }, function (error) { return console.log(error); }, function () { return console.log("success load list wish"); });
    };
    WishListComponent.prototype.getTypeClass = function (i) {
        switch (i) {
            case 1:
                return "panel-danger";
            case 2:
                return "panel-warning";
            case 3:
                return "panel-info";
            case 4:
                return "panel-primary";
            default:
                return "";
        }
    };
    ;
    return WishListComponent;
}());
WishListComponent = __decorate([
    core_1.Component({
        selector: "wish-list",
        template: __webpack_require__(110)
    }),
    __metadata("design:paramtypes", [wish_service_1.WishService, router_1.ActivatedRoute])
], WishListComponent);
exports.WishListComponent = WishListComponent;


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(56);
exports.wishRoutes = [
    { path: "wish", component: index_1.WishListComponent, data: { title: "Пожелания" } },
    { path: "wish/:id/edit", component: index_1.WishEditComponent, data: { title: "Создание пожелания" } }
];


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var WishType = (function () {
    function WishType() {
    }
    return WishType;
}());
exports.WishType = WishType;


/***/ },
/* 195 */
/***/ function(module, exports) {

module.exports = require("@angular/compiler");

/***/ },
/* 196 */
/***/ function(module, exports) {

module.exports = require("angular2-platform-node/__private_imports__");

/***/ },
/* 197 */
/***/ function(module, exports) {

module.exports = require("ng2-auto-complete");

/***/ },
/* 198 */,
/* 199 */
/***/ function(module, exports) {

module.exports = require("rxjs/add/operator/filter");

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(59);
__webpack_require__(61);
__webpack_require__(63);
var aspnet_prerendering_1 = __webpack_require__(62);
var core_1 = __webpack_require__(0);
var angular2_universal_1 = __webpack_require__(14);
var app_module_1 = __webpack_require__(60);
core_1.enableProdMode();
var platform = angular2_universal_1.platformNodeDynamic();
var doc = "\n        <!DOCTYPE html>\n\n        <html>\n            <head></head>\n            <body>\n                <app></app>\n            </body>\n        </html>\n    ";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = aspnet_prerendering_1.createServerRenderer(function (params) {
    return new Promise(function (resolve, reject) {
        var requestZone = Zone.current.fork({
            name: "angular-universal request",
            properties: {
                baseUrl: "/",
                requestUrl: params.url,
                originUrl: params.origin,
                preboot: false,
                document: "<app></app>"
            },
            onHandleError: function (parentZone, currentZone, targetZone, error) {
                reject(error);
                return true;
            }
        });
        return requestZone.run(function () { return platform.serializeModule(app_module_1.AppModule); }).then(function (html) {
            resolve({ html: html });
        }, reject);
    });
});


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(4);
var TinymceComponent = TinymceComponent_1 = (function () {
    function TinymceComponent(zone) {
        this.elementId = Math.random().toString(36).substring(2);
        this.change = new core_1.EventEmitter();
        this.ready = new core_1.EventEmitter();
        this.blur = new core_1.EventEmitter();
        this._value = '';
        this.value = this.initVal;
        this.zone = zone;
    }
    TinymceComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        console.log(window.tinymce);
        window.tinymce.init({
            selector: "textarea",
            autoresize_max_height: 500,
            menubar: false,
            plugins: [
                "advlist autolink lists link image charmap print preview anchor",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table contextmenu paste code emoticons"
            ],
            toolbar: "undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image emoticons fullscreen",
            content_css: "//www.tinymce.com/css/codepen.min.css",
            setup: function (editor) {
                console.log("?");
                _this.editor = editor;
                editor.on("keyup", function () {
                    var content = editor.getContent();
                    _this.updateValue(content);
                });
            }
        });
    };
    Object.defineProperty(TinymceComponent.prototype, "value", {
        get: function () { return this._value; },
        set: function (v) {
            if (v !== this._value) {
                this._value = v;
                this.onChange(v);
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    TinymceComponent.prototype.updateValue = function (value) {
        var _this = this;
        this.zone.run(function () {
            _this.value = value;
            _this.onChange(value);
            _this.onTouched();
            _this.change.emit(value);
        });
    };
    TinymceComponent.prototype.ngOnDestroy = function () {
        tinymce.remove(this.editor);
    };
    TinymceComponent.prototype.writeValue = function (value) {
        this._value = value;
    };
    TinymceComponent.prototype.onChange = function (_) { };
    TinymceComponent.prototype.onTouched = function () { };
    TinymceComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };
    TinymceComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
    return TinymceComponent;
}());
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], TinymceComponent.prototype, "change", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], TinymceComponent.prototype, "ready", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], TinymceComponent.prototype, "blur", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], TinymceComponent.prototype, "initVal", void 0);
TinymceComponent = TinymceComponent_1 = __decorate([
    core_1.Component({
        selector: "tinymce",
        providers: [
            {
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(function () { return TinymceComponent_1; }),
                multi: true
            }
        ],
        template: "<textarea id=\"{{elementId}}\">{{initVal}}</textarea>"
    }),
    __metadata("design:paramtypes", [core_1.NgZone])
], TinymceComponent);
exports.TinymceComponent = TinymceComponent;
var TinymceComponent_1;


/***/ }
/******/ ])));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,